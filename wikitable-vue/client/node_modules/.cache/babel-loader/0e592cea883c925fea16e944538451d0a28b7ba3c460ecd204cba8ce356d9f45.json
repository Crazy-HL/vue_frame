{"ast":null,"code":"import { indented_tree_layout } from './js/tree_layout.js';\nexport default {\n  name: 'RefView',\n  components: {},\n  data() {\n    return {\n      id: '#refview'\n    };\n  },\n  computed: {\n    loaddata() {\n      return store.state.loaddata;\n    }\n  },\n  watch: {\n    loaddata: function () {\n      this.draw_indented_tree();\n    }\n  },\n  mounted() {\n    this.init();\n    if (store.state.loaddata != null) {\n      this.draw_indented_tree();\n    }\n  },\n  methods: {\n    init() {\n      let id = this.id;\n      $(id).empty();\n      this.width = $(id).width();\n      this.height = $(id).height();\n      this.svg = d3.select(id).append('svg').attr('width', this.width).attr('height', this.height);\n    },\n    draw_indented_tree() {\n      let tree = JSON.parse(JSON.stringify(Data['tree']));\n      indented_tree_layout(tree);\n      console.log('tree', tree);\n      let svg = this.svg;\n      let width = this.width;\n      let height = this.height;\n      let h = 30; // 一行的高度\n\n      let w = 20; // 缩进距离\n\n      let rows = d3.hierarchy(tree).descendants();\n\n      // console.log(rows)\n      let padding = {\n        'left': 50,\n        'right': 10,\n        'top': 40,\n        'bottom': 10\n      };\n      let tree_g = svg.append('g').attr('transform', 'translate(' + padding.left + ',' + padding.top + ')');\n      let row_g = tree_g.selectAll('g').data(rows).enter().append('g').attr('transform', (d, i) => {\n        return 'translate(' + d['depth'] * w + ',' + d['data'].index * h + ')';\n      });\n      row_g.append('circle').attr('r', 10).attr('x', 0).attr('y', h / 2);\n      row_g.append('text').text(d => d['data'].title).attr('dx', 20).attr('dy', h / 2).attr('text-anchor', 'start').attr(\"alignment-baseline\", \"central\").style('font-size', h / 2);\n    }\n  }\n};","map":{"version":3,"names":["indented_tree_layout","name","components","data","id","computed","loaddata","store","state","watch","draw_indented_tree","mounted","init","methods","$","empty","width","height","svg","d3","select","append","attr","tree","JSON","parse","stringify","Data","console","log","h","w","rows","hierarchy","descendants","padding","tree_g","left","top","row_g","selectAll","enter","d","i","index","text","title","style"],"sources":["/Users/wakouboy/Documents/Projects/paper-ref/client/src/components/RefView.vue"],"sourcesContent":["<template>\n    <div id=\"refview\">\n    </div>\n</template>\n\n<script>\n\nimport { indented_tree_layout } from './js/tree_layout.js'\nexport default {\n    name: 'RefView',\n    components: {\n    },\n    data() {\n        return {\n            id: '#refview'\n        }\n    },\n    computed: {\n        loaddata() {\n            return store.state.loaddata\n        }\n    },\n    watch: {\n        loaddata: function () {\n            this.draw_indented_tree()\n        },\n    },\n    mounted() {\n        this.init()\n        if (store.state.loaddata != null) {\n            this.draw_indented_tree()\n        }\n    },\n\n    methods: {\n        init() {\n            let id = this.id\n            $(id).empty()\n            this.width = $(id).width()\n            this.height = $(id).height()\n            this.svg = d3.select(id).append('svg').attr('width', this.width)\n                .attr('height', this.height)\n\n        },\n\n        draw_indented_tree() {\n            let tree = JSON.parse(JSON.stringify(Data['tree']))\n            indented_tree_layout(tree)\n            console.log('tree', tree)\n\n            let svg = this.svg\n            let width = this.width\n            let height = this.height\n\n            let h = 30 // 一行的高度\n\n            let w = 20 // 缩进距离\n\n            let rows = d3.hierarchy(tree).descendants()\n\n            // console.log(rows)\n            let padding = { 'left': 50, 'right': 10, 'top': 40, 'bottom': 10 }\n\n            let tree_g = svg.append('g').attr('transform', 'translate(' + padding.left + ',' + padding.top + ')')\n\n            let row_g = tree_g.selectAll('g').data(rows)\n                .enter()\n                .append('g')\n                .attr('transform', (d, i) => {\n                    return 'translate(' + d['depth'] * w + ',' + d['data'].index * h + ')'\n                })\n\n            row_g.append('circle')\n                .attr('r', 10)\n                .attr('x', 0)\n                .attr('y', h / 2)\n\n\n            row_g.append('text')\n                .text(d => d['data'].title)\n                .attr('dx', 20)\n                .attr('dy', h / 2)\n                .attr('text-anchor', 'start')\n                .attr(\"alignment-baseline\", \"central\") \n                .style('font-size', h / 2)\n\n\n        }\n    }\n}\n</script>\n<style scoped>\n#refview {\n    position: absolute;\n    top: 0;\n    width: 50%;\n    left: 50%;\n    height: 100%;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}