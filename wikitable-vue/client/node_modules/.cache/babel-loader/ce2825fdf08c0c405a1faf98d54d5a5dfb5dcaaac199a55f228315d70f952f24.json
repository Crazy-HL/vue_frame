{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array-buffer.detached.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __w_pdfjs_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __w_pdfjs_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __w_pdfjs_require__.c = installedModules;\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __w_pdfjs_require__.d = function (exports, name, getter) {\n      /******/if (!__w_pdfjs_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          enumerable: true,\n          get: getter\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // define __esModule on exports\n    /******/\n    __w_pdfjs_require__.r = function (exports) {\n      /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        /******/Object.defineProperty(exports, Symbol.toStringTag, {\n          value: 'Module'\n        });\n        /******/\n      }\n      /******/\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      /******/\n    };\n    /******/\n    /******/ // create a fake namespace object\n    /******/ // mode & 1: value is a module id, require it\n    /******/ // mode & 2: merge all properties of value into the ns\n    /******/ // mode & 4: return value when already ns object\n    /******/ // mode & 8|1: behave like require\n    /******/\n    __w_pdfjs_require__.t = function (value, mode) {\n      /******/if (mode & 1) value = __w_pdfjs_require__(value);\n      /******/\n      if (mode & 8) return value;\n      /******/\n      if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n      /******/\n      var ns = Object.create(null);\n      /******/\n      __w_pdfjs_require__.r(ns);\n      /******/\n      Object.defineProperty(ns, 'default', {\n        enumerable: true,\n        value: value\n      });\n      /******/\n      if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n        return value[key];\n      }.bind(null, key));\n      /******/\n      return ns;\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __w_pdfjs_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __w_pdfjs_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __w_pdfjs_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __w_pdfjs_require__.p = \"\";\n    /******/\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n    /******/\n  }\n  /************************************************************************/\n  /******/([( /* 0 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    Object.defineProperty(exports, \"addLinkAttributes\", {\n      enumerable: true,\n      get: function () {\n        return _display_utils.addLinkAttributes;\n      }\n    });\n    Object.defineProperty(exports, \"getFilenameFromUrl\", {\n      enumerable: true,\n      get: function () {\n        return _display_utils.getFilenameFromUrl;\n      }\n    });\n    Object.defineProperty(exports, \"LinkTarget\", {\n      enumerable: true,\n      get: function () {\n        return _display_utils.LinkTarget;\n      }\n    });\n    Object.defineProperty(exports, \"loadScript\", {\n      enumerable: true,\n      get: function () {\n        return _display_utils.loadScript;\n      }\n    });\n    Object.defineProperty(exports, \"PDFDateString\", {\n      enumerable: true,\n      get: function () {\n        return _display_utils.PDFDateString;\n      }\n    });\n    Object.defineProperty(exports, \"RenderingCancelledException\", {\n      enumerable: true,\n      get: function () {\n        return _display_utils.RenderingCancelledException;\n      }\n    });\n    Object.defineProperty(exports, \"build\", {\n      enumerable: true,\n      get: function () {\n        return _api.build;\n      }\n    });\n    Object.defineProperty(exports, \"getDocument\", {\n      enumerable: true,\n      get: function () {\n        return _api.getDocument;\n      }\n    });\n    Object.defineProperty(exports, \"LoopbackPort\", {\n      enumerable: true,\n      get: function () {\n        return _api.LoopbackPort;\n      }\n    });\n    Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n      enumerable: true,\n      get: function () {\n        return _api.PDFDataRangeTransport;\n      }\n    });\n    Object.defineProperty(exports, \"PDFWorker\", {\n      enumerable: true,\n      get: function () {\n        return _api.PDFWorker;\n      }\n    });\n    Object.defineProperty(exports, \"version\", {\n      enumerable: true,\n      get: function () {\n        return _api.version;\n      }\n    });\n    Object.defineProperty(exports, \"CMapCompressionType\", {\n      enumerable: true,\n      get: function () {\n        return _util.CMapCompressionType;\n      }\n    });\n    Object.defineProperty(exports, \"createObjectURL\", {\n      enumerable: true,\n      get: function () {\n        return _util.createObjectURL;\n      }\n    });\n    Object.defineProperty(exports, \"createPromiseCapability\", {\n      enumerable: true,\n      get: function () {\n        return _util.createPromiseCapability;\n      }\n    });\n    Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n      enumerable: true,\n      get: function () {\n        return _util.createValidAbsoluteUrl;\n      }\n    });\n    Object.defineProperty(exports, \"InvalidPDFException\", {\n      enumerable: true,\n      get: function () {\n        return _util.InvalidPDFException;\n      }\n    });\n    Object.defineProperty(exports, \"MissingPDFException\", {\n      enumerable: true,\n      get: function () {\n        return _util.MissingPDFException;\n      }\n    });\n    Object.defineProperty(exports, \"OPS\", {\n      enumerable: true,\n      get: function () {\n        return _util.OPS;\n      }\n    });\n    Object.defineProperty(exports, \"PasswordResponses\", {\n      enumerable: true,\n      get: function () {\n        return _util.PasswordResponses;\n      }\n    });\n    Object.defineProperty(exports, \"PermissionFlag\", {\n      enumerable: true,\n      get: function () {\n        return _util.PermissionFlag;\n      }\n    });\n    Object.defineProperty(exports, \"removeNullCharacters\", {\n      enumerable: true,\n      get: function () {\n        return _util.removeNullCharacters;\n      }\n    });\n    Object.defineProperty(exports, \"shadow\", {\n      enumerable: true,\n      get: function () {\n        return _util.shadow;\n      }\n    });\n    Object.defineProperty(exports, \"UnexpectedResponseException\", {\n      enumerable: true,\n      get: function () {\n        return _util.UnexpectedResponseException;\n      }\n    });\n    Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n      enumerable: true,\n      get: function () {\n        return _util.UNSUPPORTED_FEATURES;\n      }\n    });\n    Object.defineProperty(exports, \"Util\", {\n      enumerable: true,\n      get: function () {\n        return _util.Util;\n      }\n    });\n    Object.defineProperty(exports, \"VerbosityLevel\", {\n      enumerable: true,\n      get: function () {\n        return _util.VerbosityLevel;\n      }\n    });\n    Object.defineProperty(exports, \"AnnotationLayer\", {\n      enumerable: true,\n      get: function () {\n        return _annotation_layer.AnnotationLayer;\n      }\n    });\n    Object.defineProperty(exports, \"apiCompatibilityParams\", {\n      enumerable: true,\n      get: function () {\n        return _api_compatibility.apiCompatibilityParams;\n      }\n    });\n    Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n      enumerable: true,\n      get: function () {\n        return _worker_options.GlobalWorkerOptions;\n      }\n    });\n    Object.defineProperty(exports, \"renderTextLayer\", {\n      enumerable: true,\n      get: function () {\n        return _text_layer.renderTextLayer;\n      }\n    });\n    Object.defineProperty(exports, \"SVGGraphics\", {\n      enumerable: true,\n      get: function () {\n        return _svg.SVGGraphics;\n      }\n    });\n    var _display_utils = __w_pdfjs_require__(1);\n    var _api = __w_pdfjs_require__(5);\n    var _util = __w_pdfjs_require__(2);\n    var _annotation_layer = __w_pdfjs_require__(16);\n    var _api_compatibility = __w_pdfjs_require__(7);\n    var _worker_options = __w_pdfjs_require__(10);\n    var _text_layer = __w_pdfjs_require__(17);\n    var _svg = __w_pdfjs_require__(18);\n    const pdfjsVersion = '2.5.207';\n    const pdfjsBuild = '0974d605';\n    {\n      const {\n        isNodeJS\n      } = __w_pdfjs_require__(4);\n      if (isNodeJS) {\n        const PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n        (0, _api.setPDFNetworkStreamFactory)(params => {\n          return new PDFNodeStream(params);\n        });\n      } else {\n        const PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n        let PDFFetchStream;\n        if ((0, _display_utils.isFetchSupported)()) {\n          PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n        }\n        (0, _api.setPDFNetworkStreamFactory)(params => {\n          if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n            return new PDFFetchStream(params);\n          }\n          return new PDFNetworkStream(params);\n        });\n      }\n    }\n\n    /***/\n  }), ( /* 1 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.addLinkAttributes = addLinkAttributes;\n    exports.getFilenameFromUrl = getFilenameFromUrl;\n    exports.isFetchSupported = isFetchSupported;\n    exports.isValidFetchUrl = isValidFetchUrl;\n    exports.loadScript = loadScript;\n    exports.deprecated = deprecated;\n    exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n    var _util = __w_pdfjs_require__(2);\n    const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n    exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n    const SVG_NS = \"http://www.w3.org/2000/svg\";\n    class DOMCanvasFactory {\n      create(width, height) {\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = width;\n        canvas.height = height;\n        return {\n          canvas,\n          context\n        };\n      }\n      reset(canvasAndContext, width, height) {\n        if (!canvasAndContext.canvas) {\n          throw new Error(\"Canvas is not specified\");\n        }\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n        canvasAndContext.canvas.width = width;\n        canvasAndContext.canvas.height = height;\n      }\n      destroy(canvasAndContext) {\n        if (!canvasAndContext.canvas) {\n          throw new Error(\"Canvas is not specified\");\n        }\n        canvasAndContext.canvas.width = 0;\n        canvasAndContext.canvas.height = 0;\n        canvasAndContext.canvas = null;\n        canvasAndContext.context = null;\n      }\n    }\n    exports.DOMCanvasFactory = DOMCanvasFactory;\n    class DOMCMapReaderFactory {\n      constructor(_ref) {\n        let {\n          baseUrl = null,\n          isCompressed = false\n        } = _ref;\n        this.baseUrl = baseUrl;\n        this.isCompressed = isCompressed;\n      }\n      async fetch(_ref2) {\n        let {\n          name\n        } = _ref2;\n        if (!this.baseUrl) {\n          throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n        }\n        if (!name) {\n          throw new Error(\"CMap name must be specified.\");\n        }\n        const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n        const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n        if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n          return fetch(url).then(async response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            let cMapData;\n            if (this.isCompressed) {\n              cMapData = new Uint8Array(await response.arrayBuffer());\n            } else {\n              cMapData = (0, _util.stringToBytes)(await response.text());\n            }\n            return {\n              cMapData,\n              compressionType\n            };\n          }).catch(reason => {\n            throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n          });\n        }\n        return new Promise((resolve, reject) => {\n          const request = new XMLHttpRequest();\n          request.open(\"GET\", url, true);\n          if (this.isCompressed) {\n            request.responseType = \"arraybuffer\";\n          }\n          request.onreadystatechange = () => {\n            if (request.readyState !== XMLHttpRequest.DONE) {\n              return;\n            }\n            if (request.status === 200 || request.status === 0) {\n              let cMapData;\n              if (this.isCompressed && request.response) {\n                cMapData = new Uint8Array(request.response);\n              } else if (!this.isCompressed && request.responseText) {\n                cMapData = (0, _util.stringToBytes)(request.responseText);\n              }\n              if (cMapData) {\n                resolve({\n                  cMapData,\n                  compressionType\n                });\n                return;\n              }\n            }\n            reject(new Error(request.statusText));\n          };\n          request.send(null);\n        }).catch(reason => {\n          throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n        });\n      }\n    }\n    exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n    class DOMSVGFactory {\n      create(width, height) {\n        (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n        const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n        svg.setAttribute(\"version\", \"1.1\");\n        svg.setAttribute(\"width\", width + \"px\");\n        svg.setAttribute(\"height\", height + \"px\");\n        svg.setAttribute(\"preserveAspectRatio\", \"none\");\n        svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n        return svg;\n      }\n      createElement(type) {\n        (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n        return document.createElementNS(SVG_NS, type);\n      }\n    }\n    exports.DOMSVGFactory = DOMSVGFactory;\n    class PageViewport {\n      constructor(_ref3) {\n        let {\n          viewBox,\n          scale,\n          rotation,\n          offsetX = 0,\n          offsetY = 0,\n          dontFlip = false\n        } = _ref3;\n        this.viewBox = viewBox;\n        this.scale = scale;\n        this.rotation = rotation;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        const centerX = (viewBox[2] + viewBox[0]) / 2;\n        const centerY = (viewBox[3] + viewBox[1]) / 2;\n        let rotateA, rotateB, rotateC, rotateD;\n        rotation = rotation % 360;\n        rotation = rotation < 0 ? rotation + 360 : rotation;\n        switch (rotation) {\n          case 180:\n            rotateA = -1;\n            rotateB = 0;\n            rotateC = 0;\n            rotateD = 1;\n            break;\n          case 90:\n            rotateA = 0;\n            rotateB = 1;\n            rotateC = 1;\n            rotateD = 0;\n            break;\n          case 270:\n            rotateA = 0;\n            rotateB = -1;\n            rotateC = -1;\n            rotateD = 0;\n            break;\n          case 0:\n            rotateA = 1;\n            rotateB = 0;\n            rotateC = 0;\n            rotateD = -1;\n            break;\n          default:\n            throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n        }\n        if (dontFlip) {\n          rotateC = -rotateC;\n          rotateD = -rotateD;\n        }\n        let offsetCanvasX, offsetCanvasY;\n        let width, height;\n        if (rotateA === 0) {\n          offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n          offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n          width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n        } else {\n          offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n          offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n          width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n        }\n        this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n        this.width = width;\n        this.height = height;\n      }\n      clone() {\n        let {\n          scale = this.scale,\n          rotation = this.rotation,\n          offsetX = this.offsetX,\n          offsetY = this.offsetY,\n          dontFlip = false\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return new PageViewport({\n          viewBox: this.viewBox.slice(),\n          scale,\n          rotation,\n          offsetX,\n          offsetY,\n          dontFlip\n        });\n      }\n      convertToViewportPoint(x, y) {\n        return _util.Util.applyTransform([x, y], this.transform);\n      }\n      convertToViewportRectangle(rect) {\n        const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n        const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n        return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n      }\n      convertToPdfPoint(x, y) {\n        return _util.Util.applyInverseTransform([x, y], this.transform);\n      }\n    }\n    exports.PageViewport = PageViewport;\n    class RenderingCancelledException extends _util.BaseException {\n      constructor(msg, type) {\n        super(msg);\n        this.type = type;\n      }\n    }\n    exports.RenderingCancelledException = RenderingCancelledException;\n    const LinkTarget = {\n      NONE: 0,\n      SELF: 1,\n      BLANK: 2,\n      PARENT: 3,\n      TOP: 4\n    };\n    exports.LinkTarget = LinkTarget;\n    function addLinkAttributes(link) {\n      let {\n        url,\n        target,\n        rel,\n        enabled = true\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n      const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n      if (enabled) {\n        link.href = link.title = urlNullRemoved;\n      } else {\n        link.href = \"\";\n        link.title = `Disabled: ${urlNullRemoved}`;\n        link.onclick = () => {\n          return false;\n        };\n      }\n      let targetStr = \"\";\n      switch (target) {\n        case LinkTarget.NONE:\n          break;\n        case LinkTarget.SELF:\n          targetStr = \"_self\";\n          break;\n        case LinkTarget.BLANK:\n          targetStr = \"_blank\";\n          break;\n        case LinkTarget.PARENT:\n          targetStr = \"_parent\";\n          break;\n        case LinkTarget.TOP:\n          targetStr = \"_top\";\n          break;\n      }\n      link.target = targetStr;\n      link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n    }\n    function getFilenameFromUrl(url) {\n      const anchor = url.indexOf(\"#\");\n      const query = url.indexOf(\"?\");\n      const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n      return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n    }\n    class StatTimer {\n      constructor() {\n        this.started = Object.create(null);\n        this.times = [];\n      }\n      time(name) {\n        if (name in this.started) {\n          (0, _util.warn)(`Timer is already running for ${name}`);\n        }\n        this.started[name] = Date.now();\n      }\n      timeEnd(name) {\n        if (!(name in this.started)) {\n          (0, _util.warn)(`Timer has not been started for ${name}`);\n        }\n        this.times.push({\n          name,\n          start: this.started[name],\n          end: Date.now()\n        });\n        delete this.started[name];\n      }\n      toString() {\n        const outBuf = [];\n        let longest = 0;\n        for (const time of this.times) {\n          const name = time.name;\n          if (name.length > longest) {\n            longest = name.length;\n          }\n        }\n        for (const time of this.times) {\n          const duration = time.end - time.start;\n          outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n        }\n        return outBuf.join(\"\");\n      }\n    }\n    exports.StatTimer = StatTimer;\n    function isFetchSupported() {\n      return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n    }\n    function isValidFetchUrl(url, baseUrl) {\n      try {\n        const {\n          protocol\n        } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n        return protocol === \"http:\" || protocol === \"https:\";\n      } catch (ex) {\n        return false;\n      }\n    }\n    function loadScript(src) {\n      return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = resolve;\n        script.onerror = function () {\n          reject(new Error(`Cannot load script at: ${script.src}`));\n        };\n        (document.head || document.documentElement).appendChild(script);\n      });\n    }\n    function deprecated(details) {\n      console.log(\"Deprecated API usage: \" + details);\n    }\n    let pdfDateStringRegex;\n    class PDFDateString {\n      static toDateObject(input) {\n        if (!input || !(0, _util.isString)(input)) {\n          return null;\n        }\n        if (!pdfDateStringRegex) {\n          pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n        }\n        const matches = pdfDateStringRegex.exec(input);\n        if (!matches) {\n          return null;\n        }\n        const year = parseInt(matches[1], 10);\n        let month = parseInt(matches[2], 10);\n        month = month >= 1 && month <= 12 ? month - 1 : 0;\n        let day = parseInt(matches[3], 10);\n        day = day >= 1 && day <= 31 ? day : 1;\n        let hour = parseInt(matches[4], 10);\n        hour = hour >= 0 && hour <= 23 ? hour : 0;\n        let minute = parseInt(matches[5], 10);\n        minute = minute >= 0 && minute <= 59 ? minute : 0;\n        let second = parseInt(matches[6], 10);\n        second = second >= 0 && second <= 59 ? second : 0;\n        const universalTimeRelation = matches[7] || \"Z\";\n        let offsetHour = parseInt(matches[8], 10);\n        offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n        let offsetMinute = parseInt(matches[9], 10) || 0;\n        offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n        if (universalTimeRelation === \"-\") {\n          hour += offsetHour;\n          minute += offsetMinute;\n        } else if (universalTimeRelation === \"+\") {\n          hour -= offsetHour;\n          minute -= offsetMinute;\n        }\n        return new Date(Date.UTC(year, month, day, hour, minute, second));\n      }\n    }\n    exports.PDFDateString = PDFDateString;\n\n    /***/\n  }), ( /* 2 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.arrayByteLength = arrayByteLength;\n    exports.arraysToBytes = arraysToBytes;\n    exports.assert = assert;\n    exports.bytesToString = bytesToString;\n    exports.createPromiseCapability = createPromiseCapability;\n    exports.getVerbosityLevel = getVerbosityLevel;\n    exports.info = info;\n    exports.isArrayBuffer = isArrayBuffer;\n    exports.isArrayEqual = isArrayEqual;\n    exports.isBool = isBool;\n    exports.isEmptyObj = isEmptyObj;\n    exports.isNum = isNum;\n    exports.isString = isString;\n    exports.isSameOrigin = isSameOrigin;\n    exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n    exports.removeNullCharacters = removeNullCharacters;\n    exports.setVerbosityLevel = setVerbosityLevel;\n    exports.shadow = shadow;\n    exports.string32 = string32;\n    exports.stringToBytes = stringToBytes;\n    exports.stringToPDFString = stringToPDFString;\n    exports.stringToUTF8String = stringToUTF8String;\n    exports.utf8StringToString = utf8StringToString;\n    exports.warn = warn;\n    exports.unreachable = unreachable;\n    exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n    __w_pdfjs_require__(3);\n    const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n    exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n    const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n    exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n    const PermissionFlag = {\n      PRINT: 0x04,\n      MODIFY_CONTENTS: 0x08,\n      COPY: 0x10,\n      MODIFY_ANNOTATIONS: 0x20,\n      FILL_INTERACTIVE_FORMS: 0x100,\n      COPY_FOR_ACCESSIBILITY: 0x200,\n      ASSEMBLE: 0x400,\n      PRINT_HIGH_QUALITY: 0x800\n    };\n    exports.PermissionFlag = PermissionFlag;\n    const TextRenderingMode = {\n      FILL: 0,\n      STROKE: 1,\n      FILL_STROKE: 2,\n      INVISIBLE: 3,\n      FILL_ADD_TO_PATH: 4,\n      STROKE_ADD_TO_PATH: 5,\n      FILL_STROKE_ADD_TO_PATH: 6,\n      ADD_TO_PATH: 7,\n      FILL_STROKE_MASK: 3,\n      ADD_TO_PATH_FLAG: 4\n    };\n    exports.TextRenderingMode = TextRenderingMode;\n    const ImageKind = {\n      GRAYSCALE_1BPP: 1,\n      RGB_24BPP: 2,\n      RGBA_32BPP: 3\n    };\n    exports.ImageKind = ImageKind;\n    const AnnotationType = {\n      TEXT: 1,\n      LINK: 2,\n      FREETEXT: 3,\n      LINE: 4,\n      SQUARE: 5,\n      CIRCLE: 6,\n      POLYGON: 7,\n      POLYLINE: 8,\n      HIGHLIGHT: 9,\n      UNDERLINE: 10,\n      SQUIGGLY: 11,\n      STRIKEOUT: 12,\n      STAMP: 13,\n      CARET: 14,\n      INK: 15,\n      POPUP: 16,\n      FILEATTACHMENT: 17,\n      SOUND: 18,\n      MOVIE: 19,\n      WIDGET: 20,\n      SCREEN: 21,\n      PRINTERMARK: 22,\n      TRAPNET: 23,\n      WATERMARK: 24,\n      THREED: 25,\n      REDACT: 26\n    };\n    exports.AnnotationType = AnnotationType;\n    const AnnotationStateModelType = {\n      MARKED: \"Marked\",\n      REVIEW: \"Review\"\n    };\n    exports.AnnotationStateModelType = AnnotationStateModelType;\n    const AnnotationMarkedState = {\n      MARKED: \"Marked\",\n      UNMARKED: \"Unmarked\"\n    };\n    exports.AnnotationMarkedState = AnnotationMarkedState;\n    const AnnotationReviewState = {\n      ACCEPTED: \"Accepted\",\n      REJECTED: \"Rejected\",\n      CANCELLED: \"Cancelled\",\n      COMPLETED: \"Completed\",\n      NONE: \"None\"\n    };\n    exports.AnnotationReviewState = AnnotationReviewState;\n    const AnnotationReplyType = {\n      GROUP: \"Group\",\n      REPLY: \"R\"\n    };\n    exports.AnnotationReplyType = AnnotationReplyType;\n    const AnnotationFlag = {\n      INVISIBLE: 0x01,\n      HIDDEN: 0x02,\n      PRINT: 0x04,\n      NOZOOM: 0x08,\n      NOROTATE: 0x10,\n      NOVIEW: 0x20,\n      READONLY: 0x40,\n      LOCKED: 0x80,\n      TOGGLENOVIEW: 0x100,\n      LOCKEDCONTENTS: 0x200\n    };\n    exports.AnnotationFlag = AnnotationFlag;\n    const AnnotationFieldFlag = {\n      READONLY: 0x0000001,\n      REQUIRED: 0x0000002,\n      NOEXPORT: 0x0000004,\n      MULTILINE: 0x0001000,\n      PASSWORD: 0x0002000,\n      NOTOGGLETOOFF: 0x0004000,\n      RADIO: 0x0008000,\n      PUSHBUTTON: 0x0010000,\n      COMBO: 0x0020000,\n      EDIT: 0x0040000,\n      SORT: 0x0080000,\n      FILESELECT: 0x0100000,\n      MULTISELECT: 0x0200000,\n      DONOTSPELLCHECK: 0x0400000,\n      DONOTSCROLL: 0x0800000,\n      COMB: 0x1000000,\n      RICHTEXT: 0x2000000,\n      RADIOSINUNISON: 0x2000000,\n      COMMITONSELCHANGE: 0x4000000\n    };\n    exports.AnnotationFieldFlag = AnnotationFieldFlag;\n    const AnnotationBorderStyleType = {\n      SOLID: 1,\n      DASHED: 2,\n      BEVELED: 3,\n      INSET: 4,\n      UNDERLINE: 5\n    };\n    exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n    const StreamType = {\n      UNKNOWN: \"UNKNOWN\",\n      FLATE: \"FLATE\",\n      LZW: \"LZW\",\n      DCT: \"DCT\",\n      JPX: \"JPX\",\n      JBIG: \"JBIG\",\n      A85: \"A85\",\n      AHX: \"AHX\",\n      CCF: \"CCF\",\n      RLX: \"RLX\"\n    };\n    exports.StreamType = StreamType;\n    const FontType = {\n      UNKNOWN: \"UNKNOWN\",\n      TYPE1: \"TYPE1\",\n      TYPE1C: \"TYPE1C\",\n      CIDFONTTYPE0: \"CIDFONTTYPE0\",\n      CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n      TRUETYPE: \"TRUETYPE\",\n      CIDFONTTYPE2: \"CIDFONTTYPE2\",\n      TYPE3: \"TYPE3\",\n      OPENTYPE: \"OPENTYPE\",\n      TYPE0: \"TYPE0\",\n      MMTYPE1: \"MMTYPE1\"\n    };\n    exports.FontType = FontType;\n    const VerbosityLevel = {\n      ERRORS: 0,\n      WARNINGS: 1,\n      INFOS: 5\n    };\n    exports.VerbosityLevel = VerbosityLevel;\n    const CMapCompressionType = {\n      NONE: 0,\n      BINARY: 1,\n      STREAM: 2\n    };\n    exports.CMapCompressionType = CMapCompressionType;\n    const OPS = {\n      dependency: 1,\n      setLineWidth: 2,\n      setLineCap: 3,\n      setLineJoin: 4,\n      setMiterLimit: 5,\n      setDash: 6,\n      setRenderingIntent: 7,\n      setFlatness: 8,\n      setGState: 9,\n      save: 10,\n      restore: 11,\n      transform: 12,\n      moveTo: 13,\n      lineTo: 14,\n      curveTo: 15,\n      curveTo2: 16,\n      curveTo3: 17,\n      closePath: 18,\n      rectangle: 19,\n      stroke: 20,\n      closeStroke: 21,\n      fill: 22,\n      eoFill: 23,\n      fillStroke: 24,\n      eoFillStroke: 25,\n      closeFillStroke: 26,\n      closeEOFillStroke: 27,\n      endPath: 28,\n      clip: 29,\n      eoClip: 30,\n      beginText: 31,\n      endText: 32,\n      setCharSpacing: 33,\n      setWordSpacing: 34,\n      setHScale: 35,\n      setLeading: 36,\n      setFont: 37,\n      setTextRenderingMode: 38,\n      setTextRise: 39,\n      moveText: 40,\n      setLeadingMoveText: 41,\n      setTextMatrix: 42,\n      nextLine: 43,\n      showText: 44,\n      showSpacedText: 45,\n      nextLineShowText: 46,\n      nextLineSetSpacingShowText: 47,\n      setCharWidth: 48,\n      setCharWidthAndBounds: 49,\n      setStrokeColorSpace: 50,\n      setFillColorSpace: 51,\n      setStrokeColor: 52,\n      setStrokeColorN: 53,\n      setFillColor: 54,\n      setFillColorN: 55,\n      setStrokeGray: 56,\n      setFillGray: 57,\n      setStrokeRGBColor: 58,\n      setFillRGBColor: 59,\n      setStrokeCMYKColor: 60,\n      setFillCMYKColor: 61,\n      shadingFill: 62,\n      beginInlineImage: 63,\n      beginImageData: 64,\n      endInlineImage: 65,\n      paintXObject: 66,\n      markPoint: 67,\n      markPointProps: 68,\n      beginMarkedContent: 69,\n      beginMarkedContentProps: 70,\n      endMarkedContent: 71,\n      beginCompat: 72,\n      endCompat: 73,\n      paintFormXObjectBegin: 74,\n      paintFormXObjectEnd: 75,\n      beginGroup: 76,\n      endGroup: 77,\n      beginAnnotations: 78,\n      endAnnotations: 79,\n      beginAnnotation: 80,\n      endAnnotation: 81,\n      paintJpegXObject: 82,\n      paintImageMaskXObject: 83,\n      paintImageMaskXObjectGroup: 84,\n      paintImageXObject: 85,\n      paintInlineImageXObject: 86,\n      paintInlineImageXObjectGroup: 87,\n      paintImageXObjectRepeat: 88,\n      paintImageMaskXObjectRepeat: 89,\n      paintSolidColorImageMask: 90,\n      constructPath: 91\n    };\n    exports.OPS = OPS;\n    const UNSUPPORTED_FEATURES = {\n      unknown: \"unknown\",\n      forms: \"forms\",\n      javaScript: \"javaScript\",\n      smask: \"smask\",\n      shadingPattern: \"shadingPattern\",\n      font: \"font\",\n      errorTilingPattern: \"errorTilingPattern\",\n      errorExtGState: \"errorExtGState\",\n      errorXObject: \"errorXObject\",\n      errorFontLoadType3: \"errorFontLoadType3\",\n      errorFontState: \"errorFontState\",\n      errorFontMissing: \"errorFontMissing\",\n      errorFontTranslate: \"errorFontTranslate\",\n      errorColorSpace: \"errorColorSpace\",\n      errorOperatorList: \"errorOperatorList\",\n      errorFontToUnicode: \"errorFontToUnicode\",\n      errorFontLoadNative: \"errorFontLoadNative\",\n      errorFontGetPath: \"errorFontGetPath\"\n    };\n    exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n    const PasswordResponses = {\n      NEED_PASSWORD: 1,\n      INCORRECT_PASSWORD: 2\n    };\n    exports.PasswordResponses = PasswordResponses;\n    let verbosity = VerbosityLevel.WARNINGS;\n    function setVerbosityLevel(level) {\n      if (Number.isInteger(level)) {\n        verbosity = level;\n      }\n    }\n    function getVerbosityLevel() {\n      return verbosity;\n    }\n    function info(msg) {\n      if (verbosity >= VerbosityLevel.INFOS) {\n        console.log(`Info: ${msg}`);\n      }\n    }\n    function warn(msg) {\n      if (verbosity >= VerbosityLevel.WARNINGS) {\n        console.log(`Warning: ${msg}`);\n      }\n    }\n    function unreachable(msg) {\n      throw new Error(msg);\n    }\n    function assert(cond, msg) {\n      if (!cond) {\n        unreachable(msg);\n      }\n    }\n    function isSameOrigin(baseUrl, otherUrl) {\n      let base;\n      try {\n        base = new URL(baseUrl);\n        if (!base.origin || base.origin === \"null\") {\n          return false;\n        }\n      } catch (e) {\n        return false;\n      }\n      const other = new URL(otherUrl, base);\n      return base.origin === other.origin;\n    }\n    function _isValidProtocol(url) {\n      if (!url) {\n        return false;\n      }\n      switch (url.protocol) {\n        case \"http:\":\n        case \"https:\":\n        case \"ftp:\":\n        case \"mailto:\":\n        case \"tel:\":\n          return true;\n        default:\n          return false;\n      }\n    }\n    function createValidAbsoluteUrl(url, baseUrl) {\n      if (!url) {\n        return null;\n      }\n      try {\n        const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n        if (_isValidProtocol(absoluteUrl)) {\n          return absoluteUrl;\n        }\n      } catch (ex) {}\n      return null;\n    }\n    function shadow(obj, prop, value) {\n      Object.defineProperty(obj, prop, {\n        value,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n      return value;\n    }\n    const BaseException = function BaseExceptionClosure() {\n      function BaseException(message) {\n        if (this.constructor === BaseException) {\n          unreachable(\"Cannot initialize BaseException.\");\n        }\n        this.message = message;\n        this.name = this.constructor.name;\n      }\n      BaseException.prototype = new Error();\n      BaseException.constructor = BaseException;\n      return BaseException;\n    }();\n    exports.BaseException = BaseException;\n    class PasswordException extends BaseException {\n      constructor(msg, code) {\n        super(msg);\n        this.code = code;\n      }\n    }\n    exports.PasswordException = PasswordException;\n    class UnknownErrorException extends BaseException {\n      constructor(msg, details) {\n        super(msg);\n        this.details = details;\n      }\n    }\n    exports.UnknownErrorException = UnknownErrorException;\n    class InvalidPDFException extends BaseException {}\n    exports.InvalidPDFException = InvalidPDFException;\n    class MissingPDFException extends BaseException {}\n    exports.MissingPDFException = MissingPDFException;\n    class UnexpectedResponseException extends BaseException {\n      constructor(msg, status) {\n        super(msg);\n        this.status = status;\n      }\n    }\n    exports.UnexpectedResponseException = UnexpectedResponseException;\n    class FormatError extends BaseException {}\n    exports.FormatError = FormatError;\n    class AbortException extends BaseException {}\n    exports.AbortException = AbortException;\n    const NullCharactersRegExp = /\\x00/g;\n    function removeNullCharacters(str) {\n      if (typeof str !== \"string\") {\n        warn(\"The argument for removeNullCharacters must be a string.\");\n        return str;\n      }\n      return str.replace(NullCharactersRegExp, \"\");\n    }\n    function bytesToString(bytes) {\n      assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n      const length = bytes.length;\n      const MAX_ARGUMENT_COUNT = 8192;\n      if (length < MAX_ARGUMENT_COUNT) {\n        return String.fromCharCode.apply(null, bytes);\n      }\n      const strBuf = [];\n      for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n        const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n        const chunk = bytes.subarray(i, chunkEnd);\n        strBuf.push(String.fromCharCode.apply(null, chunk));\n      }\n      return strBuf.join(\"\");\n    }\n    function stringToBytes(str) {\n      assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n      const length = str.length;\n      const bytes = new Uint8Array(length);\n      for (let i = 0; i < length; ++i) {\n        bytes[i] = str.charCodeAt(i) & 0xff;\n      }\n      return bytes;\n    }\n    function arrayByteLength(arr) {\n      if (arr.length !== undefined) {\n        return arr.length;\n      }\n      assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n      return arr.byteLength;\n    }\n    function arraysToBytes(arr) {\n      const length = arr.length;\n      if (length === 1 && arr[0] instanceof Uint8Array) {\n        return arr[0];\n      }\n      let resultLength = 0;\n      for (let i = 0; i < length; i++) {\n        resultLength += arrayByteLength(arr[i]);\n      }\n      let pos = 0;\n      const data = new Uint8Array(resultLength);\n      for (let i = 0; i < length; i++) {\n        let item = arr[i];\n        if (!(item instanceof Uint8Array)) {\n          if (typeof item === \"string\") {\n            item = stringToBytes(item);\n          } else {\n            item = new Uint8Array(item);\n          }\n        }\n        const itemLength = item.byteLength;\n        data.set(item, pos);\n        pos += itemLength;\n      }\n      return data;\n    }\n    function string32(value) {\n      return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n    }\n    function isLittleEndian() {\n      const buffer8 = new Uint8Array(4);\n      buffer8[0] = 1;\n      const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n      return view32[0] === 1;\n    }\n    const IsLittleEndianCached = {\n      get value() {\n        return shadow(this, \"value\", isLittleEndian());\n      }\n    };\n    exports.IsLittleEndianCached = IsLittleEndianCached;\n    function isEvalSupported() {\n      try {\n        new Function(\"\");\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    const IsEvalSupportedCached = {\n      get value() {\n        return shadow(this, \"value\", isEvalSupported());\n      }\n    };\n    exports.IsEvalSupportedCached = IsEvalSupportedCached;\n    const rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n    class Util {\n      static makeCssRgb(r, g, b) {\n        rgbBuf[1] = r;\n        rgbBuf[3] = g;\n        rgbBuf[5] = b;\n        return rgbBuf.join(\"\");\n      }\n      static transform(m1, m2) {\n        return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n      }\n      static applyTransform(p, m) {\n        const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n        const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n        return [xt, yt];\n      }\n      static applyInverseTransform(p, m) {\n        const d = m[0] * m[3] - m[1] * m[2];\n        const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n        const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n        return [xt, yt];\n      }\n      static getAxialAlignedBoundingBox(r, m) {\n        const p1 = Util.applyTransform(r, m);\n        const p2 = Util.applyTransform(r.slice(2, 4), m);\n        const p3 = Util.applyTransform([r[0], r[3]], m);\n        const p4 = Util.applyTransform([r[2], r[1]], m);\n        return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n      }\n      static inverseTransform(m) {\n        const d = m[0] * m[3] - m[1] * m[2];\n        return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n      }\n      static apply3dTransform(m, v) {\n        return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n      }\n      static singularValueDecompose2dScale(m) {\n        const transpose = [m[0], m[2], m[1], m[3]];\n        const a = m[0] * transpose[0] + m[1] * transpose[2];\n        const b = m[0] * transpose[1] + m[1] * transpose[3];\n        const c = m[2] * transpose[0] + m[3] * transpose[2];\n        const d = m[2] * transpose[1] + m[3] * transpose[3];\n        const first = (a + d) / 2;\n        const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n        const sx = first + second || 1;\n        const sy = first - second || 1;\n        return [Math.sqrt(sx), Math.sqrt(sy)];\n      }\n      static normalizeRect(rect) {\n        const r = rect.slice(0);\n        if (rect[0] > rect[2]) {\n          r[0] = rect[2];\n          r[2] = rect[0];\n        }\n        if (rect[1] > rect[3]) {\n          r[1] = rect[3];\n          r[3] = rect[1];\n        }\n        return r;\n      }\n      static intersect(rect1, rect2) {\n        function compare(a, b) {\n          return a - b;\n        }\n        const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n        const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n        const result = [];\n        rect1 = Util.normalizeRect(rect1);\n        rect2 = Util.normalizeRect(rect2);\n        if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n          result[0] = orderedX[1];\n          result[2] = orderedX[2];\n        } else {\n          return null;\n        }\n        if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n          result[1] = orderedY[1];\n          result[3] = orderedY[2];\n        } else {\n          return null;\n        }\n        return result;\n      }\n    }\n    exports.Util = Util;\n    const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n    function stringToPDFString(str) {\n      const length = str.length,\n        strBuf = [];\n      if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n        for (let i = 2; i < length; i += 2) {\n          strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n        }\n      } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n        for (let i = 2; i < length; i += 2) {\n          strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n        }\n      } else {\n        for (let i = 0; i < length; ++i) {\n          const code = PDFStringTranslateTable[str.charCodeAt(i)];\n          strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n        }\n      }\n      return strBuf.join(\"\");\n    }\n    function stringToUTF8String(str) {\n      return decodeURIComponent(escape(str));\n    }\n    function utf8StringToString(str) {\n      return unescape(encodeURIComponent(str));\n    }\n    function isEmptyObj(obj) {\n      for (const key in obj) {\n        return false;\n      }\n      return true;\n    }\n    function isBool(v) {\n      return typeof v === \"boolean\";\n    }\n    function isNum(v) {\n      return typeof v === \"number\";\n    }\n    function isString(v) {\n      return typeof v === \"string\";\n    }\n    function isArrayBuffer(v) {\n      return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n    }\n    function isArrayEqual(arr1, arr2) {\n      if (arr1.length !== arr2.length) {\n        return false;\n      }\n      return arr1.every(function (element, index) {\n        return element === arr2[index];\n      });\n    }\n    function createPromiseCapability() {\n      const capability = Object.create(null);\n      let isSettled = false;\n      Object.defineProperty(capability, \"settled\", {\n        get() {\n          return isSettled;\n        }\n      });\n      capability.promise = new Promise(function (resolve, reject) {\n        capability.resolve = function (data) {\n          isSettled = true;\n          resolve(data);\n        };\n        capability.reject = function (reason) {\n          isSettled = true;\n          reject(reason);\n        };\n      });\n      return capability;\n    }\n    const createObjectURL = function createObjectURLClosure() {\n      const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      return function createObjectURL(data, contentType) {\n        let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (!forceDataSchema && URL.createObjectURL) {\n          const blob = new Blob([data], {\n            type: contentType\n          });\n          return URL.createObjectURL(blob);\n        }\n        let buffer = `data:${contentType};base64,`;\n        for (let i = 0, ii = data.length; i < ii; i += 3) {\n          const b1 = data[i] & 0xff;\n          const b2 = data[i + 1] & 0xff;\n          const b3 = data[i + 2] & 0xff;\n          const d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n          const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n          const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n          buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n        }\n        return buffer;\n      };\n    }();\n    exports.createObjectURL = createObjectURL;\n\n    /***/\n  }), ( /* 3 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    var _is_node = __w_pdfjs_require__(4);\n    ;\n\n    /***/\n  }), ( /* 4 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.isNodeJS = void 0;\n    const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !process.versions.electron;\n    exports.isNodeJS = isNodeJS;\n\n    /***/\n  }), ( /* 5 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getDocument = getDocument;\n    exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n    exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _display_utils = __w_pdfjs_require__(1);\n    var _font_loader = __w_pdfjs_require__(6);\n    var _api_compatibility = __w_pdfjs_require__(7);\n    var _canvas = __w_pdfjs_require__(8);\n    var _worker_options = __w_pdfjs_require__(10);\n    var _is_node = __w_pdfjs_require__(4);\n    var _message_handler = __w_pdfjs_require__(11);\n    var _metadata = __w_pdfjs_require__(12);\n    var _transport_stream = __w_pdfjs_require__(14);\n    var _webgl = __w_pdfjs_require__(15);\n    const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n    const RENDERING_CANCELLED_TIMEOUT = 100;\n    let createPDFNetworkStream;\n    function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n      createPDFNetworkStream = pdfNetworkStreamFactory;\n    }\n    function getDocument(src) {\n      const task = new PDFDocumentLoadingTask();\n      let source;\n      if (typeof src === \"string\") {\n        source = {\n          url: src\n        };\n      } else if ((0, _util.isArrayBuffer)(src)) {\n        source = {\n          data: src\n        };\n      } else if (src instanceof PDFDataRangeTransport) {\n        source = {\n          range: src\n        };\n      } else {\n        if (typeof src !== \"object\") {\n          throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n        }\n        if (!src.url && !src.data && !src.range) {\n          throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n        }\n        source = src;\n      }\n      const params = Object.create(null);\n      let rangeTransport = null,\n        worker = null;\n      for (const key in source) {\n        if (key === \"url\" && typeof window !== \"undefined\") {\n          params[key] = new URL(source[key], window.location).href;\n          continue;\n        } else if (key === \"range\") {\n          rangeTransport = source[key];\n          continue;\n        } else if (key === \"worker\") {\n          worker = source[key];\n          continue;\n        } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n          const pdfBytes = source[key];\n          if (typeof pdfBytes === \"string\") {\n            params[key] = (0, _util.stringToBytes)(pdfBytes);\n          } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n            params[key] = new Uint8Array(pdfBytes);\n          } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n            params[key] = new Uint8Array(pdfBytes);\n          } else {\n            throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n          }\n          continue;\n        }\n        params[key] = source[key];\n      }\n      params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n      params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n      params.ignoreErrors = params.stopAtErrors !== true;\n      params.fontExtraProperties = params.fontExtraProperties === true;\n      params.pdfBug = params.pdfBug === true;\n      if (!Number.isInteger(params.maxImageSize)) {\n        params.maxImageSize = -1;\n      }\n      if (typeof params.isEvalSupported !== \"boolean\") {\n        params.isEvalSupported = true;\n      }\n      if (typeof params.disableFontFace !== \"boolean\") {\n        params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n      }\n      if (typeof params.disableRange !== \"boolean\") {\n        params.disableRange = false;\n      }\n      if (typeof params.disableStream !== \"boolean\") {\n        params.disableStream = false;\n      }\n      if (typeof params.disableAutoFetch !== \"boolean\") {\n        params.disableAutoFetch = false;\n      }\n      (0, _util.setVerbosityLevel)(params.verbosity);\n      if (!worker) {\n        const workerParams = {\n          verbosity: params.verbosity,\n          port: _worker_options.GlobalWorkerOptions.workerPort\n        };\n        worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n        task._worker = worker;\n      }\n      const docId = task.docId;\n      worker.promise.then(function () {\n        if (task.destroyed) {\n          throw new Error(\"Loading aborted\");\n        }\n        const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n        const networkStreamPromise = new Promise(function (resolve) {\n          let networkStream;\n          if (rangeTransport) {\n            networkStream = new _transport_stream.PDFDataTransportStream({\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream\n            }, rangeTransport);\n          } else if (!params.data) {\n            networkStream = createPDFNetworkStream({\n              url: params.url,\n              length: params.length,\n              httpHeaders: params.httpHeaders,\n              withCredentials: params.withCredentials,\n              rangeChunkSize: params.rangeChunkSize,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream\n            });\n          }\n          resolve(networkStream);\n        });\n        return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref4) {\n          let [workerId, networkStream] = _ref4;\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        });\n      }).catch(task._capability.reject);\n      return task;\n    }\n    function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n      if (worker.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n      if (pdfDataRangeTransport) {\n        source.length = pdfDataRangeTransport.length;\n        source.initialData = pdfDataRangeTransport.initialData;\n        source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n      }\n      return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n        docId,\n        apiVersion: '2.5.207',\n        source: {\n          data: source.data,\n          url: source.url,\n          password: source.password,\n          disableAutoFetch: source.disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize,\n          length: source.length\n        },\n        maxImageSize: source.maxImageSize,\n        disableFontFace: source.disableFontFace,\n        postMessageTransfers: worker.postMessageTransfers,\n        docBaseUrl: source.docBaseUrl,\n        ignoreErrors: source.ignoreErrors,\n        isEvalSupported: source.isEvalSupported,\n        fontExtraProperties: source.fontExtraProperties\n      }).then(function (workerId) {\n        if (worker.destroyed) {\n          throw new Error(\"Worker was destroyed\");\n        }\n        return workerId;\n      });\n    }\n    const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n      let nextDocumentId = 0;\n      class PDFDocumentLoadingTask {\n        constructor() {\n          this._capability = (0, _util.createPromiseCapability)();\n          this._transport = null;\n          this._worker = null;\n          this.docId = \"d\" + nextDocumentId++;\n          this.destroyed = false;\n          this.onPassword = null;\n          this.onProgress = null;\n          this.onUnsupportedFeature = null;\n        }\n        get promise() {\n          return this._capability.promise;\n        }\n        destroy() {\n          this.destroyed = true;\n          const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n          return transportDestroyed.then(() => {\n            this._transport = null;\n            if (this._worker) {\n              this._worker.destroy();\n              this._worker = null;\n            }\n          });\n        }\n      }\n      return PDFDocumentLoadingTask;\n    }();\n    class PDFDataRangeTransport {\n      constructor(length, initialData) {\n        let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.length = length;\n        this.initialData = initialData;\n        this.progressiveDone = progressiveDone;\n        this._rangeListeners = [];\n        this._progressListeners = [];\n        this._progressiveReadListeners = [];\n        this._progressiveDoneListeners = [];\n        this._readyCapability = (0, _util.createPromiseCapability)();\n      }\n      addRangeListener(listener) {\n        this._rangeListeners.push(listener);\n      }\n      addProgressListener(listener) {\n        this._progressListeners.push(listener);\n      }\n      addProgressiveReadListener(listener) {\n        this._progressiveReadListeners.push(listener);\n      }\n      addProgressiveDoneListener(listener) {\n        this._progressiveDoneListeners.push(listener);\n      }\n      onDataRange(begin, chunk) {\n        for (const listener of this._rangeListeners) {\n          listener(begin, chunk);\n        }\n      }\n      onDataProgress(loaded, total) {\n        this._readyCapability.promise.then(() => {\n          for (const listener of this._progressListeners) {\n            listener(loaded, total);\n          }\n        });\n      }\n      onDataProgressiveRead(chunk) {\n        this._readyCapability.promise.then(() => {\n          for (const listener of this._progressiveReadListeners) {\n            listener(chunk);\n          }\n        });\n      }\n      onDataProgressiveDone() {\n        this._readyCapability.promise.then(() => {\n          for (const listener of this._progressiveDoneListeners) {\n            listener();\n          }\n        });\n      }\n      transportReady() {\n        this._readyCapability.resolve();\n      }\n      requestDataRange(begin, end) {\n        (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n      }\n      abort() {}\n    }\n    exports.PDFDataRangeTransport = PDFDataRangeTransport;\n    class PDFDocumentProxy {\n      constructor(pdfInfo, transport) {\n        this._pdfInfo = pdfInfo;\n        this._transport = transport;\n      }\n      get numPages() {\n        return this._pdfInfo.numPages;\n      }\n      get fingerprint() {\n        return this._pdfInfo.fingerprint;\n      }\n      getPage(pageNumber) {\n        return this._transport.getPage(pageNumber);\n      }\n      getPageIndex(ref) {\n        return this._transport.getPageIndex(ref);\n      }\n      getDestinations() {\n        return this._transport.getDestinations();\n      }\n      getDestination(id) {\n        return this._transport.getDestination(id);\n      }\n      getPageLabels() {\n        return this._transport.getPageLabels();\n      }\n      getPageLayout() {\n        return this._transport.getPageLayout();\n      }\n      getPageMode() {\n        return this._transport.getPageMode();\n      }\n      getViewerPreferences() {\n        return this._transport.getViewerPreferences();\n      }\n      getOpenAction() {\n        return this._transport.getOpenAction();\n      }\n      getOpenActionDestination() {\n        (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n        return this.getOpenAction().then(function (openAction) {\n          return openAction && openAction.dest ? openAction.dest : null;\n        });\n      }\n      getAttachments() {\n        return this._transport.getAttachments();\n      }\n      getJavaScript() {\n        return this._transport.getJavaScript();\n      }\n      getOutline() {\n        return this._transport.getOutline();\n      }\n      getPermissions() {\n        return this._transport.getPermissions();\n      }\n      getMetadata() {\n        return this._transport.getMetadata();\n      }\n      getData() {\n        return this._transport.getData();\n      }\n      getDownloadInfo() {\n        return this._transport.downloadInfoCapability.promise;\n      }\n      getStats() {\n        return this._transport.getStats();\n      }\n      cleanup() {\n        return this._transport.startCleanup();\n      }\n      destroy() {\n        return this.loadingTask.destroy();\n      }\n      get loadingParams() {\n        return this._transport.loadingParams;\n      }\n      get loadingTask() {\n        return this._transport.loadingTask;\n      }\n    }\n    exports.PDFDocumentProxy = PDFDocumentProxy;\n    class PDFPageProxy {\n      constructor(pageIndex, pageInfo, transport) {\n        let pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        this._pageIndex = pageIndex;\n        this._pageInfo = pageInfo;\n        this._transport = transport;\n        this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n        this._pdfBug = pdfBug;\n        this.commonObjs = transport.commonObjs;\n        this.objs = new PDFObjects();\n        this.cleanupAfterRender = false;\n        this.pendingCleanup = false;\n        this.intentStates = Object.create(null);\n        this.destroyed = false;\n      }\n      get pageNumber() {\n        return this._pageIndex + 1;\n      }\n      get rotate() {\n        return this._pageInfo.rotate;\n      }\n      get ref() {\n        return this._pageInfo.ref;\n      }\n      get userUnit() {\n        return this._pageInfo.userUnit;\n      }\n      get view() {\n        return this._pageInfo.view;\n      }\n      getViewport() {\n        let {\n          scale,\n          rotation = this.rotate,\n          offsetX = 0,\n          offsetY = 0,\n          dontFlip = false\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return new _display_utils.PageViewport({\n          viewBox: this.view,\n          scale,\n          rotation,\n          offsetX,\n          offsetY,\n          dontFlip\n        });\n      }\n      getAnnotations() {\n        let {\n          intent = null\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n          this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n          this.annotationsIntent = intent;\n        }\n        return this.annotationsPromise;\n      }\n      render(_ref5) {\n        let {\n          canvasContext,\n          viewport,\n          intent = \"display\",\n          enableWebGL = false,\n          renderInteractiveForms = false,\n          transform = null,\n          imageLayer = null,\n          canvasFactory = null,\n          background = null\n        } = _ref5;\n        if (this._stats) {\n          this._stats.time(\"Overall\");\n        }\n        const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n        this.pendingCleanup = false;\n        if (!this.intentStates[renderingIntent]) {\n          this.intentStates[renderingIntent] = Object.create(null);\n        }\n        const intentState = this.intentStates[renderingIntent];\n        if (intentState.streamReaderCancelTimeout) {\n          clearTimeout(intentState.streamReaderCancelTimeout);\n          intentState.streamReaderCancelTimeout = null;\n        }\n        const canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n        const webGLContext = new _webgl.WebGLContext({\n          enable: enableWebGL\n        });\n        if (!intentState.displayReadyCapability) {\n          intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n          intentState.operatorList = {\n            fnArray: [],\n            argsArray: [],\n            lastChunk: false\n          };\n          if (this._stats) {\n            this._stats.time(\"Page Request\");\n          }\n          this._pumpOperatorList({\n            pageIndex: this._pageIndex,\n            intent: renderingIntent,\n            renderInteractiveForms: renderInteractiveForms === true\n          });\n        }\n        const complete = error => {\n          const i = intentState.renderTasks.indexOf(internalRenderTask);\n          if (i >= 0) {\n            intentState.renderTasks.splice(i, 1);\n          }\n          if (this.cleanupAfterRender || renderingIntent === \"print\") {\n            this.pendingCleanup = true;\n          }\n          this._tryCleanup();\n          if (error) {\n            internalRenderTask.capability.reject(error);\n            this._abortOperatorList({\n              intentState,\n              reason: error\n            });\n          } else {\n            internalRenderTask.capability.resolve();\n          }\n          if (this._stats) {\n            this._stats.timeEnd(\"Rendering\");\n            this._stats.timeEnd(\"Overall\");\n          }\n        };\n        const internalRenderTask = new InternalRenderTask({\n          callback: complete,\n          params: {\n            canvasContext,\n            viewport,\n            transform,\n            imageLayer,\n            background\n          },\n          objs: this.objs,\n          commonObjs: this.commonObjs,\n          operatorList: intentState.operatorList,\n          pageIndex: this._pageIndex,\n          canvasFactory: canvasFactoryInstance,\n          webGLContext,\n          useRequestAnimationFrame: renderingIntent !== \"print\",\n          pdfBug: this._pdfBug\n        });\n        if (!intentState.renderTasks) {\n          intentState.renderTasks = [];\n        }\n        intentState.renderTasks.push(internalRenderTask);\n        const renderTask = internalRenderTask.task;\n        intentState.displayReadyCapability.promise.then(transparency => {\n          if (this.pendingCleanup) {\n            complete();\n            return;\n          }\n          if (this._stats) {\n            this._stats.time(\"Rendering\");\n          }\n          internalRenderTask.initializeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        }).catch(complete);\n        return renderTask;\n      }\n      getOperatorList() {\n        function operatorListChanged() {\n          if (intentState.operatorList.lastChunk) {\n            intentState.opListReadCapability.resolve(intentState.operatorList);\n            const i = intentState.renderTasks.indexOf(opListTask);\n            if (i >= 0) {\n              intentState.renderTasks.splice(i, 1);\n            }\n          }\n        }\n        const renderingIntent = \"oplist\";\n        if (!this.intentStates[renderingIntent]) {\n          this.intentStates[renderingIntent] = Object.create(null);\n        }\n        const intentState = this.intentStates[renderingIntent];\n        let opListTask;\n        if (!intentState.opListReadCapability) {\n          opListTask = {};\n          opListTask.operatorListChanged = operatorListChanged;\n          intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n          intentState.renderTasks = [];\n          intentState.renderTasks.push(opListTask);\n          intentState.operatorList = {\n            fnArray: [],\n            argsArray: [],\n            lastChunk: false\n          };\n          if (this._stats) {\n            this._stats.time(\"Page Request\");\n          }\n          this._pumpOperatorList({\n            pageIndex: this._pageIndex,\n            intent: renderingIntent\n          });\n        }\n        return intentState.opListReadCapability.promise;\n      }\n      streamTextContent() {\n        let {\n          normalizeWhitespace = false,\n          disableCombineTextItems = false\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const TEXT_CONTENT_CHUNK_SIZE = 100;\n        return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n          pageIndex: this._pageIndex,\n          normalizeWhitespace: normalizeWhitespace === true,\n          combineTextItems: disableCombineTextItems !== true\n        }, {\n          highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n          size(textContent) {\n            return textContent.items.length;\n          }\n        });\n      }\n      getTextContent() {\n        let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const readableStream = this.streamTextContent(params);\n        return new Promise(function (resolve, reject) {\n          function pump() {\n            reader.read().then(function (_ref6) {\n              let {\n                value,\n                done\n              } = _ref6;\n              if (done) {\n                resolve(textContent);\n                return;\n              }\n              Object.assign(textContent.styles, value.styles);\n              textContent.items.push(...value.items);\n              pump();\n            }, reject);\n          }\n          const reader = readableStream.getReader();\n          const textContent = {\n            items: [],\n            styles: Object.create(null)\n          };\n          pump();\n        });\n      }\n      _destroy() {\n        this.destroyed = true;\n        this._transport.pageCache[this._pageIndex] = null;\n        const waitOn = [];\n        Object.keys(this.intentStates).forEach(intent => {\n          const intentState = this.intentStates[intent];\n          this._abortOperatorList({\n            intentState,\n            reason: new Error(\"Page was destroyed.\"),\n            force: true\n          });\n          if (intent === \"oplist\") {\n            return;\n          }\n          intentState.renderTasks.forEach(function (renderTask) {\n            const renderCompleted = renderTask.capability.promise.catch(function () {});\n            waitOn.push(renderCompleted);\n            renderTask.cancel();\n          });\n        });\n        this.objs.clear();\n        this.annotationsPromise = null;\n        this.pendingCleanup = false;\n        return Promise.all(waitOn);\n      }\n      cleanup() {\n        let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        this.pendingCleanup = true;\n        return this._tryCleanup(resetStats);\n      }\n      _tryCleanup() {\n        let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (!this.pendingCleanup || Object.keys(this.intentStates).some(intent => {\n          const intentState = this.intentStates[intent];\n          return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n        })) {\n          return false;\n        }\n        Object.keys(this.intentStates).forEach(intent => {\n          delete this.intentStates[intent];\n        });\n        this.objs.clear();\n        this.annotationsPromise = null;\n        if (resetStats && this._stats) {\n          this._stats = new _display_utils.StatTimer();\n        }\n        this.pendingCleanup = false;\n        return true;\n      }\n      _startRenderPage(transparency, intent) {\n        const intentState = this.intentStates[intent];\n        if (!intentState) {\n          return;\n        }\n        if (this._stats) {\n          this._stats.timeEnd(\"Page Request\");\n        }\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.resolve(transparency);\n        }\n      }\n      _renderPageChunk(operatorListChunk, intentState) {\n        for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n          intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n          intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n        }\n        intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n        for (let i = 0; i < intentState.renderTasks.length; i++) {\n          intentState.renderTasks[i].operatorListChanged();\n        }\n        if (operatorListChunk.lastChunk) {\n          this._tryCleanup();\n        }\n      }\n      _pumpOperatorList(args) {\n        (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n        const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n        const reader = readableStream.getReader();\n        const intentState = this.intentStates[args.intent];\n        intentState.streamReader = reader;\n        const pump = () => {\n          reader.read().then(_ref7 => {\n            let {\n              value,\n              done\n            } = _ref7;\n            if (done) {\n              intentState.streamReader = null;\n              return;\n            }\n            if (this._transport.destroyed) {\n              return;\n            }\n            this._renderPageChunk(value, intentState);\n            pump();\n          }, reason => {\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            if (intentState.operatorList) {\n              intentState.operatorList.lastChunk = true;\n              for (let i = 0; i < intentState.renderTasks.length; i++) {\n                intentState.renderTasks[i].operatorListChanged();\n              }\n              this._tryCleanup();\n            }\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.reject(reason);\n            } else if (intentState.opListReadCapability) {\n              intentState.opListReadCapability.reject(reason);\n            } else {\n              throw reason;\n            }\n          });\n        };\n        pump();\n      }\n      _abortOperatorList(_ref8) {\n        let {\n          intentState,\n          reason,\n          force = false\n        } = _ref8;\n        (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n        if (!intentState.streamReader) {\n          return;\n        }\n        if (!force) {\n          if (intentState.renderTasks.length !== 0) {\n            return;\n          }\n          if (reason instanceof _display_utils.RenderingCancelledException) {\n            intentState.streamReaderCancelTimeout = setTimeout(() => {\n              this._abortOperatorList({\n                intentState,\n                reason,\n                force: true\n              });\n              intentState.streamReaderCancelTimeout = null;\n            }, RENDERING_CANCELLED_TIMEOUT);\n            return;\n          }\n        }\n        intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n        intentState.streamReader = null;\n        if (this._transport.destroyed) {\n          return;\n        }\n        Object.keys(this.intentStates).some(intent => {\n          if (this.intentStates[intent] === intentState) {\n            delete this.intentStates[intent];\n            return true;\n          }\n          return false;\n        });\n        this.cleanup();\n      }\n      get stats() {\n        return this._stats;\n      }\n    }\n    exports.PDFPageProxy = PDFPageProxy;\n    class LoopbackPort {\n      constructor() {\n        let defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        this._listeners = [];\n        this._defer = defer;\n        this._deferred = Promise.resolve(undefined);\n      }\n      postMessage(obj, transfers) {\n        function cloneValue(value) {\n          if (typeof value !== \"object\" || value === null) {\n            return value;\n          }\n          if (cloned.has(value)) {\n            return cloned.get(value);\n          }\n          let buffer, result;\n          if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n            const transferable = transfers && transfers.includes(buffer);\n            if (transferable) {\n              result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n            } else {\n              result = new value.constructor(value);\n            }\n            cloned.set(value, result);\n            return result;\n          }\n          result = Array.isArray(value) ? [] : {};\n          cloned.set(value, result);\n          for (const i in value) {\n            let desc,\n              p = value;\n            while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n              p = Object.getPrototypeOf(p);\n            }\n            if (typeof desc.value === \"undefined\") {\n              continue;\n            }\n            if (typeof desc.value === \"function\") {\n              if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n              }\n              continue;\n            }\n            result[i] = cloneValue(desc.value);\n          }\n          return result;\n        }\n        if (!this._defer) {\n          this._listeners.forEach(listener => {\n            listener.call(this, {\n              data: obj\n            });\n          });\n          return;\n        }\n        const cloned = new WeakMap();\n        const e = {\n          data: cloneValue(obj)\n        };\n        this._deferred.then(() => {\n          this._listeners.forEach(listener => {\n            listener.call(this, e);\n          });\n        });\n      }\n      addEventListener(name, listener) {\n        this._listeners.push(listener);\n      }\n      removeEventListener(name, listener) {\n        const i = this._listeners.indexOf(listener);\n        this._listeners.splice(i, 1);\n      }\n      terminate() {\n        this._listeners.length = 0;\n      }\n    }\n    exports.LoopbackPort = LoopbackPort;\n    const PDFWorker = function PDFWorkerClosure() {\n      const pdfWorkerPorts = new WeakMap();\n      let isWorkerDisabled = false;\n      let fallbackWorkerSrc;\n      let nextFakeWorkerId = 0;\n      let fakeWorkerCapability;\n      if (_is_node.isNodeJS && typeof require === \"function\") {\n        isWorkerDisabled = true;\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      } else if (typeof document === \"object\" && \"currentScript\" in document) {\n        const pdfjsFilePath = document.currentScript && document.currentScript.src;\n        if (pdfjsFilePath) {\n          fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n        }\n      }\n      function getWorkerSrc() {\n        if (_worker_options.GlobalWorkerOptions.workerSrc) {\n          return _worker_options.GlobalWorkerOptions.workerSrc;\n        }\n        if (typeof fallbackWorkerSrc !== \"undefined\") {\n          if (!_is_node.isNodeJS) {\n            (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n          return fallbackWorkerSrc;\n        }\n        throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      function getMainThreadWorkerMessageHandler() {\n        let mainWorkerMessageHandler;\n        try {\n          mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n        } catch (ex) {}\n        return mainWorkerMessageHandler || null;\n      }\n      function setupFakeWorkerGlobal() {\n        if (fakeWorkerCapability) {\n          return fakeWorkerCapability.promise;\n        }\n        fakeWorkerCapability = (0, _util.createPromiseCapability)();\n        const loader = async function () {\n          const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n          if (mainWorkerMessageHandler) {\n            return mainWorkerMessageHandler;\n          }\n          if (_is_node.isNodeJS && typeof require === \"function\") {\n            const worker = eval(\"require\")(getWorkerSrc());\n            return worker.WorkerMessageHandler;\n          }\n          await (0, _display_utils.loadScript)(getWorkerSrc());\n          return window.pdfjsWorker.WorkerMessageHandler;\n        };\n        loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n        return fakeWorkerCapability.promise;\n      }\n      function createCDNWrapper(url) {\n        const wrapper = \"importScripts('\" + url + \"');\";\n        return URL.createObjectURL(new Blob([wrapper]));\n      }\n      class PDFWorker {\n        constructor() {\n          let {\n            name = null,\n            port = null,\n            verbosity = (0, _util.getVerbosityLevel)()\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          if (port && pdfWorkerPorts.has(port)) {\n            throw new Error(\"Cannot use more than one PDFWorker per port\");\n          }\n          this.name = name;\n          this.destroyed = false;\n          this.postMessageTransfers = true;\n          this.verbosity = verbosity;\n          this._readyCapability = (0, _util.createPromiseCapability)();\n          this._port = null;\n          this._webWorker = null;\n          this._messageHandler = null;\n          if (port) {\n            pdfWorkerPorts.set(port, this);\n            this._initializeFromPort(port);\n            return;\n          }\n          this._initialize();\n        }\n        get promise() {\n          return this._readyCapability.promise;\n        }\n        get port() {\n          return this._port;\n        }\n        get messageHandler() {\n          return this._messageHandler;\n        }\n        _initializeFromPort(port) {\n          this._port = port;\n          this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n          this._messageHandler.on(\"ready\", function () {});\n          this._readyCapability.resolve();\n        }\n        _initialize() {\n          if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n            let workerSrc = getWorkerSrc();\n            try {\n              if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n              }\n              const worker = new Worker(workerSrc);\n              const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n              const terminateEarly = () => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                messageHandler.destroy();\n                worker.terminate();\n                if (this.destroyed) {\n                  this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                } else {\n                  this._setupFakeWorker();\n                }\n              };\n              const onWorkerError = () => {\n                if (!this._webWorker) {\n                  terminateEarly();\n                }\n              };\n              worker.addEventListener(\"error\", onWorkerError);\n              messageHandler.on(\"test\", data => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                if (this.destroyed) {\n                  terminateEarly();\n                  return;\n                }\n                if (data) {\n                  this._messageHandler = messageHandler;\n                  this._port = worker;\n                  this._webWorker = worker;\n                  if (!data.supportTransfers) {\n                    this.postMessageTransfers = false;\n                  }\n                  this._readyCapability.resolve();\n                  messageHandler.send(\"configure\", {\n                    verbosity: this.verbosity\n                  });\n                } else {\n                  this._setupFakeWorker();\n                  messageHandler.destroy();\n                  worker.terminate();\n                }\n              });\n              messageHandler.on(\"ready\", data => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                if (this.destroyed) {\n                  terminateEarly();\n                  return;\n                }\n                try {\n                  sendTest();\n                } catch (e) {\n                  this._setupFakeWorker();\n                }\n              });\n              const sendTest = () => {\n                const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n                try {\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                } catch (ex) {\n                  (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                  testObj[0] = 0;\n                  messageHandler.send(\"test\", testObj);\n                }\n              };\n              sendTest();\n              return;\n            } catch (e) {\n              (0, _util.info)(\"The worker has been disabled.\");\n            }\n          }\n          this._setupFakeWorker();\n        }\n        _setupFakeWorker() {\n          if (!isWorkerDisabled) {\n            (0, _util.warn)(\"Setting up fake worker.\");\n            isWorkerDisabled = true;\n          }\n          setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n              return;\n            }\n            const port = new LoopbackPort();\n            this._port = port;\n            const id = \"fake\" + nextFakeWorkerId++;\n            const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n            WorkerMessageHandler.setup(workerHandler, port);\n            const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n            this._messageHandler = messageHandler;\n            this._readyCapability.resolve();\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          }).catch(reason => {\n            this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n          });\n        }\n        destroy() {\n          this.destroyed = true;\n          if (this._webWorker) {\n            this._webWorker.terminate();\n            this._webWorker = null;\n          }\n          pdfWorkerPorts.delete(this._port);\n          this._port = null;\n          if (this._messageHandler) {\n            this._messageHandler.destroy();\n            this._messageHandler = null;\n          }\n        }\n        static fromPort(params) {\n          if (!params || !params.port) {\n            throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n          }\n          if (pdfWorkerPorts.has(params.port)) {\n            return pdfWorkerPorts.get(params.port);\n          }\n          return new PDFWorker(params);\n        }\n        static getWorkerSrc() {\n          return getWorkerSrc();\n        }\n      }\n      return PDFWorker;\n    }();\n    exports.PDFWorker = PDFWorker;\n    class WorkerTransport {\n      constructor(messageHandler, loadingTask, networkStream, params) {\n        this.messageHandler = messageHandler;\n        this.loadingTask = loadingTask;\n        this.commonObjs = new PDFObjects();\n        this.fontLoader = new _font_loader.FontLoader({\n          docId: loadingTask.docId,\n          onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n        });\n        this._params = params;\n        this.CMapReaderFactory = new params.CMapReaderFactory({\n          baseUrl: params.cMapUrl,\n          isCompressed: params.cMapPacked\n        });\n        this.destroyed = false;\n        this.destroyCapability = null;\n        this._passwordCapability = null;\n        this._networkStream = networkStream;\n        this._fullReader = null;\n        this._lastProgress = null;\n        this.pageCache = [];\n        this.pagePromises = [];\n        this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n        this.setupMessageHandler();\n      }\n      destroy() {\n        if (this.destroyCapability) {\n          return this.destroyCapability.promise;\n        }\n        this.destroyed = true;\n        this.destroyCapability = (0, _util.createPromiseCapability)();\n        if (this._passwordCapability) {\n          this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n        }\n        const waitOn = [];\n        this.pageCache.forEach(function (page) {\n          if (page) {\n            waitOn.push(page._destroy());\n          }\n        });\n        this.pageCache.length = 0;\n        this.pagePromises.length = 0;\n        const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n        waitOn.push(terminated);\n        Promise.all(waitOn).then(() => {\n          this.fontLoader.clear();\n          if (this._networkStream) {\n            this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n          }\n          if (this.messageHandler) {\n            this.messageHandler.destroy();\n            this.messageHandler = null;\n          }\n          this.destroyCapability.resolve();\n        }, this.destroyCapability.reject);\n        return this.destroyCapability.promise;\n      }\n      setupMessageHandler() {\n        const {\n          messageHandler,\n          loadingTask\n        } = this;\n        messageHandler.on(\"GetReader\", (data, sink) => {\n          (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n          this._fullReader = this._networkStream.getFullReader();\n          this._fullReader.onProgress = evt => {\n            this._lastProgress = {\n              loaded: evt.loaded,\n              total: evt.total\n            };\n          };\n          sink.onPull = () => {\n            this._fullReader.read().then(function (_ref9) {\n              let {\n                value,\n                done\n              } = _ref9;\n              if (done) {\n                sink.close();\n                return;\n              }\n              (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n              sink.enqueue(new Uint8Array(value), 1, [value]);\n            }).catch(reason => {\n              sink.error(reason);\n            });\n          };\n          sink.onCancel = reason => {\n            this._fullReader.cancel(reason);\n          };\n        });\n        messageHandler.on(\"ReaderHeadersReady\", data => {\n          const headersCapability = (0, _util.createPromiseCapability)();\n          const fullReader = this._fullReader;\n          fullReader.headersReady.then(() => {\n            if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n              if (this._lastProgress && loadingTask.onProgress) {\n                loadingTask.onProgress(this._lastProgress);\n              }\n              fullReader.onProgress = evt => {\n                if (loadingTask.onProgress) {\n                  loadingTask.onProgress({\n                    loaded: evt.loaded,\n                    total: evt.total\n                  });\n                }\n              };\n            }\n            headersCapability.resolve({\n              isStreamingSupported: fullReader.isStreamingSupported,\n              isRangeSupported: fullReader.isRangeSupported,\n              contentLength: fullReader.contentLength\n            });\n          }, headersCapability.reject);\n          return headersCapability.promise;\n        });\n        messageHandler.on(\"GetRangeReader\", (data, sink) => {\n          (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n          const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n          if (!rangeReader) {\n            sink.close();\n            return;\n          }\n          sink.onPull = () => {\n            rangeReader.read().then(function (_ref10) {\n              let {\n                value,\n                done\n              } = _ref10;\n              if (done) {\n                sink.close();\n                return;\n              }\n              (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n              sink.enqueue(new Uint8Array(value), 1, [value]);\n            }).catch(reason => {\n              sink.error(reason);\n            });\n          };\n          sink.onCancel = reason => {\n            rangeReader.cancel(reason);\n          };\n        });\n        messageHandler.on(\"GetDoc\", _ref11 => {\n          let {\n            pdfInfo\n          } = _ref11;\n          this._numPages = pdfInfo.numPages;\n          loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n        });\n        messageHandler.on(\"DocException\", function (ex) {\n          let reason;\n          switch (ex.name) {\n            case \"PasswordException\":\n              reason = new _util.PasswordException(ex.message, ex.code);\n              break;\n            case \"InvalidPDFException\":\n              reason = new _util.InvalidPDFException(ex.message);\n              break;\n            case \"MissingPDFException\":\n              reason = new _util.MissingPDFException(ex.message);\n              break;\n            case \"UnexpectedResponseException\":\n              reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n              break;\n            case \"UnknownErrorException\":\n              reason = new _util.UnknownErrorException(ex.message, ex.details);\n              break;\n          }\n          loadingTask._capability.reject(reason);\n        });\n        messageHandler.on(\"PasswordRequest\", exception => {\n          this._passwordCapability = (0, _util.createPromiseCapability)();\n          if (loadingTask.onPassword) {\n            const updatePassword = password => {\n              this._passwordCapability.resolve({\n                password\n              });\n            };\n            try {\n              loadingTask.onPassword(updatePassword, exception.code);\n            } catch (ex) {\n              this._passwordCapability.reject(ex);\n            }\n          } else {\n            this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n          }\n          return this._passwordCapability.promise;\n        });\n        messageHandler.on(\"DataLoaded\", data => {\n          if (loadingTask.onProgress) {\n            loadingTask.onProgress({\n              loaded: data.length,\n              total: data.length\n            });\n          }\n          this.downloadInfoCapability.resolve(data);\n        });\n        messageHandler.on(\"StartRenderPage\", data => {\n          if (this.destroyed) {\n            return;\n          }\n          const page = this.pageCache[data.pageIndex];\n          page._startRenderPage(data.transparency, data.intent);\n        });\n        messageHandler.on(\"commonobj\", data => {\n          if (this.destroyed) {\n            return;\n          }\n          const [id, type, exportedData] = data;\n          if (this.commonObjs.has(id)) {\n            return;\n          }\n          switch (type) {\n            case \"Font\":\n              const params = this._params;\n              if (\"error\" in exportedData) {\n                const exportedError = exportedData.error;\n                (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                this.commonObjs.resolve(id, exportedError);\n                break;\n              }\n              let fontRegistry = null;\n              if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                fontRegistry = {\n                  registerFont(font, url) {\n                    globalThis.FontInspector.fontAdded(font, url);\n                  }\n                };\n              }\n              const font = new _font_loader.FontFaceObject(exportedData, {\n                isEvalSupported: params.isEvalSupported,\n                disableFontFace: params.disableFontFace,\n                ignoreErrors: params.ignoreErrors,\n                onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                fontRegistry\n              });\n              this.fontLoader.bind(font).catch(reason => {\n                return messageHandler.sendWithPromise(\"FontFallback\", {\n                  id\n                });\n              }).finally(() => {\n                if (!params.fontExtraProperties && font.data) {\n                  font.data = null;\n                }\n                this.commonObjs.resolve(id, font);\n              });\n              break;\n            case \"FontPath\":\n            case \"FontType3Res\":\n            case \"Image\":\n              this.commonObjs.resolve(id, exportedData);\n              break;\n            default:\n              throw new Error(`Got unknown common object type ${type}`);\n          }\n        });\n        messageHandler.on(\"obj\", data => {\n          if (this.destroyed) {\n            return undefined;\n          }\n          const [id, pageIndex, type, imageData] = data;\n          const pageProxy = this.pageCache[pageIndex];\n          if (pageProxy.objs.has(id)) {\n            return undefined;\n          }\n          switch (type) {\n            case \"Image\":\n              pageProxy.objs.resolve(id, imageData);\n              const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n              if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                pageProxy.cleanupAfterRender = true;\n              }\n              break;\n            default:\n              throw new Error(`Got unknown object type ${type}`);\n          }\n          return undefined;\n        });\n        messageHandler.on(\"DocProgress\", data => {\n          if (this.destroyed) {\n            return;\n          }\n          if (loadingTask.onProgress) {\n            loadingTask.onProgress({\n              loaded: data.loaded,\n              total: data.total\n            });\n          }\n        });\n        messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n        messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n          if (this.destroyed) {\n            sink.error(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          let fetched = false;\n          sink.onPull = () => {\n            if (fetched) {\n              sink.close();\n              return;\n            }\n            fetched = true;\n            this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n              sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n            }).catch(function (reason) {\n              sink.error(reason);\n            });\n          };\n        });\n      }\n      _onUnsupportedFeature(_ref12) {\n        let {\n          featureId\n        } = _ref12;\n        if (this.destroyed) {\n          return;\n        }\n        if (this.loadingTask.onUnsupportedFeature) {\n          this.loadingTask.onUnsupportedFeature(featureId);\n        }\n      }\n      getData() {\n        return this.messageHandler.sendWithPromise(\"GetData\", null);\n      }\n      getPage(pageNumber) {\n        if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n          return Promise.reject(new Error(\"Invalid page request\"));\n        }\n        const pageIndex = pageNumber - 1;\n        if (pageIndex in this.pagePromises) {\n          return this.pagePromises[pageIndex];\n        }\n        const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n          pageIndex\n        }).then(pageInfo => {\n          if (this.destroyed) {\n            throw new Error(\"Transport destroyed\");\n          }\n          const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n          this.pageCache[pageIndex] = page;\n          return page;\n        });\n        this.pagePromises[pageIndex] = promise;\n        return promise;\n      }\n      getPageIndex(ref) {\n        return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n          ref\n        }).catch(function (reason) {\n          return Promise.reject(new Error(reason));\n        });\n      }\n      getAnnotations(pageIndex, intent) {\n        return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n          pageIndex,\n          intent\n        });\n      }\n      getDestinations() {\n        return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n      }\n      getDestination(id) {\n        if (typeof id !== \"string\") {\n          return Promise.reject(new Error(\"Invalid destination request.\"));\n        }\n        return this.messageHandler.sendWithPromise(\"GetDestination\", {\n          id\n        });\n      }\n      getPageLabels() {\n        return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n      }\n      getPageLayout() {\n        return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n      }\n      getPageMode() {\n        return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n      }\n      getViewerPreferences() {\n        return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n      }\n      getOpenAction() {\n        return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n      }\n      getAttachments() {\n        return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n      }\n      getJavaScript() {\n        return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n      }\n      getOutline() {\n        return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n      }\n      getPermissions() {\n        return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n      }\n      getMetadata() {\n        return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n          return {\n            info: results[0],\n            metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n            contentDispositionFilename: this._fullReader ? this._fullReader.filename : null\n          };\n        });\n      }\n      getStats() {\n        return this.messageHandler.sendWithPromise(\"GetStats\", null);\n      }\n      startCleanup() {\n        return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n          for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n            const page = this.pageCache[i];\n            if (page) {\n              const cleanupSuccessful = page.cleanup();\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n              }\n            }\n          }\n          this.commonObjs.clear();\n          this.fontLoader.clear();\n        });\n      }\n      get loadingParams() {\n        const params = this._params;\n        return (0, _util.shadow)(this, \"loadingParams\", {\n          disableAutoFetch: params.disableAutoFetch,\n          disableFontFace: params.disableFontFace\n        });\n      }\n    }\n    class PDFObjects {\n      constructor() {\n        this._objs = Object.create(null);\n      }\n      _ensureObj(objId) {\n        if (this._objs[objId]) {\n          return this._objs[objId];\n        }\n        return this._objs[objId] = {\n          capability: (0, _util.createPromiseCapability)(),\n          data: null,\n          resolved: false\n        };\n      }\n      get(objId) {\n        let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        if (callback) {\n          this._ensureObj(objId).capability.promise.then(callback);\n          return null;\n        }\n        const obj = this._objs[objId];\n        if (!obj || !obj.resolved) {\n          throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n        }\n        return obj.data;\n      }\n      has(objId) {\n        const obj = this._objs[objId];\n        return obj ? obj.resolved : false;\n      }\n      resolve(objId, data) {\n        const obj = this._ensureObj(objId);\n        obj.resolved = true;\n        obj.data = data;\n        obj.capability.resolve(data);\n      }\n      clear() {\n        this._objs = Object.create(null);\n      }\n    }\n    class RenderTask {\n      constructor(internalRenderTask) {\n        this._internalRenderTask = internalRenderTask;\n        this.onContinue = null;\n      }\n      get promise() {\n        return this._internalRenderTask.capability.promise;\n      }\n      cancel() {\n        this._internalRenderTask.cancel();\n      }\n    }\n    const InternalRenderTask = function InternalRenderTaskClosure() {\n      const canvasInRendering = new WeakSet();\n      class InternalRenderTask {\n        constructor(_ref13) {\n          let {\n            callback,\n            params,\n            objs,\n            commonObjs,\n            operatorList,\n            pageIndex,\n            canvasFactory,\n            webGLContext,\n            useRequestAnimationFrame = false,\n            pdfBug = false\n          } = _ref13;\n          this.callback = callback;\n          this.params = params;\n          this.objs = objs;\n          this.commonObjs = commonObjs;\n          this.operatorListIdx = null;\n          this.operatorList = operatorList;\n          this._pageIndex = pageIndex;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this._pdfBug = pdfBug;\n          this.running = false;\n          this.graphicsReadyCallback = null;\n          this.graphicsReady = false;\n          this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n          this.cancelled = false;\n          this.capability = (0, _util.createPromiseCapability)();\n          this.task = new RenderTask(this);\n          this._continueBound = this._continue.bind(this);\n          this._scheduleNextBound = this._scheduleNext.bind(this);\n          this._nextBound = this._next.bind(this);\n          this._canvas = params.canvasContext.canvas;\n        }\n        initializeGraphics() {\n          let transparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          if (this.cancelled) {\n            return;\n          }\n          if (this._canvas) {\n            if (canvasInRendering.has(this._canvas)) {\n              throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n            }\n            canvasInRendering.add(this._canvas);\n          }\n          if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n            this.stepper = globalThis.StepperManager.create(this._pageIndex);\n            this.stepper.init(this.operatorList);\n            this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n          }\n          const {\n            canvasContext,\n            viewport,\n            transform,\n            imageLayer,\n            background\n          } = this.params;\n          this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n          this.gfx.beginDrawing({\n            transform,\n            viewport,\n            transparency,\n            background\n          });\n          this.operatorListIdx = 0;\n          this.graphicsReady = true;\n          if (this.graphicsReadyCallback) {\n            this.graphicsReadyCallback();\n          }\n        }\n        cancel() {\n          let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          this.running = false;\n          this.cancelled = true;\n          if (this.gfx) {\n            this.gfx.endDrawing();\n          }\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n        }\n        operatorListChanged() {\n          if (!this.graphicsReady) {\n            if (!this.graphicsReadyCallback) {\n              this.graphicsReadyCallback = this._continueBound;\n            }\n            return;\n          }\n          if (this.stepper) {\n            this.stepper.updateOperatorList(this.operatorList);\n          }\n          if (this.running) {\n            return;\n          }\n          this._continue();\n        }\n        _continue() {\n          this.running = true;\n          if (this.cancelled) {\n            return;\n          }\n          if (this.task.onContinue) {\n            this.task.onContinue(this._scheduleNextBound);\n          } else {\n            this._scheduleNext();\n          }\n        }\n        _scheduleNext() {\n          if (this._useRequestAnimationFrame) {\n            window.requestAnimationFrame(() => {\n              this._nextBound().catch(this.cancel.bind(this));\n            });\n          } else {\n            Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n          }\n        }\n        async _next() {\n          if (this.cancelled) {\n            return;\n          }\n          this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n          if (this.operatorListIdx === this.operatorList.argsArray.length) {\n            this.running = false;\n            if (this.operatorList.lastChunk) {\n              this.gfx.endDrawing();\n              if (this._canvas) {\n                canvasInRendering.delete(this._canvas);\n              }\n              this.callback();\n            }\n          }\n        }\n      }\n      return InternalRenderTask;\n    }();\n    const version = '2.5.207';\n    exports.version = version;\n    const build = '0974d605';\n    exports.build = build;\n\n    /***/\n  }), ( /* 6 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.FontLoader = exports.FontFaceObject = void 0;\n    var _util = __w_pdfjs_require__(2);\n    class BaseFontLoader {\n      constructor(_ref14) {\n        let {\n          docId,\n          onUnsupportedFeature\n        } = _ref14;\n        if (this.constructor === BaseFontLoader) {\n          (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n        }\n        this.docId = docId;\n        this._onUnsupportedFeature = onUnsupportedFeature;\n        this.nativeFontFaces = [];\n        this.styleElement = null;\n      }\n      addNativeFontFace(nativeFontFace) {\n        this.nativeFontFaces.push(nativeFontFace);\n        document.fonts.add(nativeFontFace);\n      }\n      insertRule(rule) {\n        let styleElement = this.styleElement;\n        if (!styleElement) {\n          styleElement = this.styleElement = document.createElement(\"style\");\n          styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n          document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n        }\n        const styleSheet = styleElement.sheet;\n        styleSheet.insertRule(rule, styleSheet.cssRules.length);\n      }\n      clear() {\n        this.nativeFontFaces.forEach(function (nativeFontFace) {\n          document.fonts.delete(nativeFontFace);\n        });\n        this.nativeFontFaces.length = 0;\n        if (this.styleElement) {\n          this.styleElement.remove();\n          this.styleElement = null;\n        }\n      }\n      async bind(font) {\n        if (font.attached || font.missingFile) {\n          return;\n        }\n        font.attached = true;\n        if (this.isFontLoadingAPISupported) {\n          const nativeFontFace = font.createNativeFontFace();\n          if (nativeFontFace) {\n            this.addNativeFontFace(nativeFontFace);\n            try {\n              await nativeFontFace.loaded;\n            } catch (ex) {\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n              });\n              (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n              font.disableFontFace = true;\n              throw ex;\n            }\n          }\n          return;\n        }\n        const rule = font.createFontFaceRule();\n        if (rule) {\n          this.insertRule(rule);\n          if (this.isSyncFontLoadingSupported) {\n            return;\n          }\n          await new Promise(resolve => {\n            const request = this._queueLoadingCallback(resolve);\n            this._prepareFontLoadEvent([rule], [font], request);\n          });\n        }\n      }\n      _queueLoadingCallback(callback) {\n        (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n      }\n      get isFontLoadingAPISupported() {\n        const supported = typeof document !== \"undefined\" && !!document.fonts;\n        return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n      }\n      get isSyncFontLoadingSupported() {\n        (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n      }\n      get _loadTestFont() {\n        (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n      }\n      _prepareFontLoadEvent(rules, fontsToLoad, request) {\n        (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n      }\n    }\n    let FontLoader;\n    exports.FontLoader = FontLoader;\n    {\n      exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n        constructor(docId) {\n          super(docId);\n          this.loadingContext = {\n            requests: [],\n            nextRequestId: 0\n          };\n          this.loadTestFontId = 0;\n        }\n        get isSyncFontLoadingSupported() {\n          let supported = false;\n          if (typeof navigator === \"undefined\") {\n            supported = true;\n          } else {\n            const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n            if (m && m[1] >= 14) {\n              supported = true;\n            }\n          }\n          return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n        }\n        _queueLoadingCallback(callback) {\n          function completeRequest() {\n            (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n            request.done = true;\n            while (context.requests.length > 0 && context.requests[0].done) {\n              const otherRequest = context.requests.shift();\n              setTimeout(otherRequest.callback, 0);\n            }\n          }\n          const context = this.loadingContext;\n          const request = {\n            id: `pdfjs-font-loading-${context.nextRequestId++}`,\n            done: false,\n            complete: completeRequest,\n            callback\n          };\n          context.requests.push(request);\n          return request;\n        }\n        get _loadTestFont() {\n          const getLoadTestFont = function () {\n            return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n          };\n          return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n        }\n        _prepareFontLoadEvent(rules, fonts, request) {\n          function int32(data, offset) {\n            return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n          }\n          function spliceString(s, offset, remove, insert) {\n            const chunk1 = s.substring(0, offset);\n            const chunk2 = s.substring(offset + remove);\n            return chunk1 + insert + chunk2;\n          }\n          let i, ii;\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = 1;\n          canvas.height = 1;\n          const ctx = canvas.getContext(\"2d\");\n          let called = 0;\n          function isFontReady(name, callback) {\n            called++;\n            if (called > 30) {\n              (0, _util.warn)(\"Load test font never loaded.\");\n              callback();\n              return;\n            }\n            ctx.font = \"30px \" + name;\n            ctx.fillText(\".\", 0, 20);\n            const imageData = ctx.getImageData(0, 0, 1, 1);\n            if (imageData.data[3] > 0) {\n              callback();\n              return;\n            }\n            setTimeout(isFontReady.bind(null, name, callback));\n          }\n          const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n          let data = this._loadTestFont;\n          const COMMENT_OFFSET = 976;\n          data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n          const CFF_CHECKSUM_OFFSET = 16;\n          const XXXX_VALUE = 0x58585858;\n          let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n          for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n            checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n          }\n          if (i < loadTestFontId.length) {\n            checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n          }\n          data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n          const url = `url(data:font/opentype;base64,${btoa(data)});`;\n          const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n          this.insertRule(rule);\n          const names = [];\n          for (i = 0, ii = fonts.length; i < ii; i++) {\n            names.push(fonts[i].loadedName);\n          }\n          names.push(loadTestFontId);\n          const div = document.createElement(\"div\");\n          div.style.visibility = \"hidden\";\n          div.style.width = div.style.height = \"10px\";\n          div.style.position = \"absolute\";\n          div.style.top = div.style.left = \"0px\";\n          for (i = 0, ii = names.length; i < ii; ++i) {\n            const span = document.createElement(\"span\");\n            span.textContent = \"Hi\";\n            span.style.fontFamily = names[i];\n            div.appendChild(span);\n          }\n          document.body.appendChild(div);\n          isFontReady(loadTestFontId, function () {\n            document.body.removeChild(div);\n            request.complete();\n          });\n        }\n      };\n    }\n    class FontFaceObject {\n      constructor(translatedData, _ref15) {\n        let {\n          isEvalSupported = true,\n          disableFontFace = false,\n          ignoreErrors = false,\n          onUnsupportedFeature = null,\n          fontRegistry = null\n        } = _ref15;\n        this.compiledGlyphs = Object.create(null);\n        for (const i in translatedData) {\n          this[i] = translatedData[i];\n        }\n        this.isEvalSupported = isEvalSupported !== false;\n        this.disableFontFace = disableFontFace === true;\n        this.ignoreErrors = ignoreErrors === true;\n        this._onUnsupportedFeature = onUnsupportedFeature;\n        this.fontRegistry = fontRegistry;\n      }\n      createNativeFontFace() {\n        if (!this.data || this.disableFontFace) {\n          return null;\n        }\n        const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n        if (this.fontRegistry) {\n          this.fontRegistry.registerFont(this);\n        }\n        return nativeFontFace;\n      }\n      createFontFaceRule() {\n        if (!this.data || this.disableFontFace) {\n          return null;\n        }\n        const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n        const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n        const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n        if (this.fontRegistry) {\n          this.fontRegistry.registerFont(this, url);\n        }\n        return rule;\n      }\n      getPathGenerator(objs, character) {\n        if (this.compiledGlyphs[character] !== undefined) {\n          return this.compiledGlyphs[character];\n        }\n        let cmds, current;\n        try {\n          cmds = objs.get(this.loadedName + \"_path_\" + character);\n        } catch (ex) {\n          if (!this.ignoreErrors) {\n            throw ex;\n          }\n          if (this._onUnsupportedFeature) {\n            this._onUnsupportedFeature({\n              featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n            });\n          }\n          (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n          return this.compiledGlyphs[character] = function (c, size) {};\n        }\n        if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n          let args,\n            js = \"\";\n          for (let i = 0, ii = cmds.length; i < ii; i++) {\n            current = cmds[i];\n            if (current.args !== undefined) {\n              args = current.args.join(\",\");\n            } else {\n              args = \"\";\n            }\n            js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n          }\n          return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n        }\n        return this.compiledGlyphs[character] = function (c, size) {\n          for (let i = 0, ii = cmds.length; i < ii; i++) {\n            current = cmds[i];\n            if (current.cmd === \"scale\") {\n              current.args = [size, -size];\n            }\n            c[current.cmd].apply(c, current.args);\n          }\n        };\n      }\n    }\n    exports.FontFaceObject = FontFaceObject;\n\n    /***/\n  }), ( /* 7 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.apiCompatibilityParams = void 0;\n    var _is_node = __w_pdfjs_require__(4);\n    const compatibilityParams = Object.create(null);\n    {\n      (function checkFontFace() {\n        if (_is_node.isNodeJS) {\n          compatibilityParams.disableFontFace = true;\n        }\n      })();\n    }\n    const apiCompatibilityParams = Object.freeze(compatibilityParams);\n    exports.apiCompatibilityParams = apiCompatibilityParams;\n\n    /***/\n  }), ( /* 8 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CanvasGraphics = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _pattern_helper = __w_pdfjs_require__(9);\n    var MIN_FONT_SIZE = 16;\n    var MAX_FONT_SIZE = 100;\n    var MAX_GROUP_SIZE = 4096;\n    var MIN_WIDTH_FACTOR = 0.65;\n    var COMPILE_TYPE3_GLYPHS = true;\n    var MAX_SIZE_TO_COMPILE = 1000;\n    var FULL_CHUNK_HEIGHT = 16;\n    function addContextCurrentTransform(ctx) {\n      if (!ctx.mozCurrentTransform) {\n        ctx._originalSave = ctx.save;\n        ctx._originalRestore = ctx.restore;\n        ctx._originalRotate = ctx.rotate;\n        ctx._originalScale = ctx.scale;\n        ctx._originalTranslate = ctx.translate;\n        ctx._originalTransform = ctx.transform;\n        ctx._originalSetTransform = ctx.setTransform;\n        ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n        ctx._transformStack = [];\n        Object.defineProperty(ctx, \"mozCurrentTransform\", {\n          get: function getCurrentTransform() {\n            return this._transformMatrix;\n          }\n        });\n        Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n          get: function getCurrentTransformInverse() {\n            var m = this._transformMatrix;\n            var a = m[0],\n              b = m[1],\n              c = m[2],\n              d = m[3],\n              e = m[4],\n              f = m[5];\n            var ad_bc = a * d - b * c;\n            var bc_ad = b * c - a * d;\n            return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n          }\n        });\n        ctx.save = function ctxSave() {\n          var old = this._transformMatrix;\n          this._transformStack.push(old);\n          this._transformMatrix = old.slice(0, 6);\n          this._originalSave();\n        };\n        ctx.restore = function ctxRestore() {\n          var prev = this._transformStack.pop();\n          if (prev) {\n            this._transformMatrix = prev;\n            this._originalRestore();\n          }\n        };\n        ctx.translate = function ctxTranslate(x, y) {\n          var m = this._transformMatrix;\n          m[4] = m[0] * x + m[2] * y + m[4];\n          m[5] = m[1] * x + m[3] * y + m[5];\n          this._originalTranslate(x, y);\n        };\n        ctx.scale = function ctxScale(x, y) {\n          var m = this._transformMatrix;\n          m[0] = m[0] * x;\n          m[1] = m[1] * x;\n          m[2] = m[2] * y;\n          m[3] = m[3] * y;\n          this._originalScale(x, y);\n        };\n        ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n          var m = this._transformMatrix;\n          this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n          ctx._originalTransform(a, b, c, d, e, f);\n        };\n        ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n          this._transformMatrix = [a, b, c, d, e, f];\n          ctx._originalSetTransform(a, b, c, d, e, f);\n        };\n        ctx.rotate = function ctxRotate(angle) {\n          var cosValue = Math.cos(angle);\n          var sinValue = Math.sin(angle);\n          var m = this._transformMatrix;\n          this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n          this._originalRotate(angle);\n        };\n      }\n    }\n    var CachedCanvases = function CachedCanvasesClosure() {\n      function CachedCanvases(canvasFactory) {\n        this.canvasFactory = canvasFactory;\n        this.cache = Object.create(null);\n      }\n      CachedCanvases.prototype = {\n        getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n          var canvasEntry;\n          if (this.cache[id] !== undefined) {\n            canvasEntry = this.cache[id];\n            this.canvasFactory.reset(canvasEntry, width, height);\n            canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n          } else {\n            canvasEntry = this.canvasFactory.create(width, height);\n            this.cache[id] = canvasEntry;\n          }\n          if (trackTransform) {\n            addContextCurrentTransform(canvasEntry.context);\n          }\n          return canvasEntry;\n        },\n        clear() {\n          for (var id in this.cache) {\n            var canvasEntry = this.cache[id];\n            this.canvasFactory.destroy(canvasEntry);\n            delete this.cache[id];\n          }\n        }\n      };\n      return CachedCanvases;\n    }();\n    function compileType3Glyph(imgData) {\n      var POINT_TO_PROCESS_LIMIT = 1000;\n      var width = imgData.width,\n        height = imgData.height;\n      var i,\n        j,\n        j0,\n        width1 = width + 1;\n      var points = new Uint8Array(width1 * (height + 1));\n      var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n      var lineSize = width + 7 & ~7,\n        data0 = imgData.data;\n      var data = new Uint8Array(lineSize * height),\n        pos = 0,\n        ii;\n      for (i = 0, ii = data0.length; i < ii; i++) {\n        var mask = 128,\n          elem = data0[i];\n        while (mask > 0) {\n          data[pos++] = elem & mask ? 0 : 255;\n          mask >>= 1;\n        }\n      }\n      var count = 0;\n      pos = 0;\n      if (data[pos] !== 0) {\n        points[0] = 1;\n        ++count;\n      }\n      for (j = 1; j < width; j++) {\n        if (data[pos] !== data[pos + 1]) {\n          points[j] = data[pos] ? 2 : 1;\n          ++count;\n        }\n        pos++;\n      }\n      if (data[pos] !== 0) {\n        points[j] = 2;\n        ++count;\n      }\n      for (i = 1; i < height; i++) {\n        pos = i * lineSize;\n        j0 = i * width1;\n        if (data[pos - lineSize] !== data[pos]) {\n          points[j0] = data[pos] ? 1 : 8;\n          ++count;\n        }\n        var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n        for (j = 1; j < width; j++) {\n          sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n          if (POINT_TYPES[sum]) {\n            points[j0 + j] = POINT_TYPES[sum];\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos - lineSize] !== data[pos]) {\n          points[j0 + j] = data[pos] ? 2 : 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n      }\n      pos = lineSize * (height - 1);\n      j0 = i * width1;\n      if (data[pos] !== 0) {\n        points[j0] = 8;\n        ++count;\n      }\n      for (j = 1; j < width; j++) {\n        if (data[pos] !== data[pos + 1]) {\n          points[j0 + j] = data[pos] ? 4 : 8;\n          ++count;\n        }\n        pos++;\n      }\n      if (data[pos] !== 0) {\n        points[j0 + j] = 4;\n        ++count;\n      }\n      if (count > POINT_TO_PROCESS_LIMIT) {\n        return null;\n      }\n      var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n      var outlines = [];\n      for (i = 0; count && i <= height; i++) {\n        var p = i * width1;\n        var end = p + width;\n        while (p < end && !points[p]) {\n          p++;\n        }\n        if (p === end) {\n          continue;\n        }\n        var coords = [p % width1, i];\n        var type = points[p],\n          p0 = p,\n          pp;\n        do {\n          var step = steps[type];\n          do {\n            p += step;\n          } while (!points[p]);\n          pp = points[p];\n          if (pp !== 5 && pp !== 10) {\n            type = pp;\n            points[p] = 0;\n          } else {\n            type = pp & 0x33 * type >> 4;\n            points[p] &= type >> 2 | type << 2;\n          }\n          coords.push(p % width1);\n          coords.push(p / width1 | 0);\n          if (!points[p]) {\n            --count;\n          }\n        } while (p0 !== p);\n        outlines.push(coords);\n        --i;\n      }\n      var drawOutline = function (c) {\n        c.save();\n        c.scale(1 / width, -1 / height);\n        c.translate(0, -height);\n        c.beginPath();\n        for (let k = 0, kk = outlines.length; k < kk; k++) {\n          var o = outlines[k];\n          c.moveTo(o[0], o[1]);\n          for (let l = 2, ll = o.length; l < ll; l += 2) {\n            c.lineTo(o[l], o[l + 1]);\n          }\n        }\n        c.fill();\n        c.beginPath();\n        c.restore();\n      };\n      return drawOutline;\n    }\n    var CanvasExtraState = function CanvasExtraStateClosure() {\n      function CanvasExtraState() {\n        this.alphaIsShape = false;\n        this.fontSize = 0;\n        this.fontSizeScale = 1;\n        this.textMatrix = _util.IDENTITY_MATRIX;\n        this.textMatrixScale = 1;\n        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n        this.leading = 0;\n        this.x = 0;\n        this.y = 0;\n        this.lineX = 0;\n        this.lineY = 0;\n        this.charSpacing = 0;\n        this.wordSpacing = 0;\n        this.textHScale = 1;\n        this.textRenderingMode = _util.TextRenderingMode.FILL;\n        this.textRise = 0;\n        this.fillColor = \"#000000\";\n        this.strokeColor = \"#000000\";\n        this.patternFill = false;\n        this.fillAlpha = 1;\n        this.strokeAlpha = 1;\n        this.lineWidth = 1;\n        this.activeSMask = null;\n        this.resumeSMaskCtx = null;\n      }\n      CanvasExtraState.prototype = {\n        clone: function CanvasExtraState_clone() {\n          return Object.create(this);\n        },\n        setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n      };\n      return CanvasExtraState;\n    }();\n    var CanvasGraphics = function CanvasGraphicsClosure() {\n      var EXECUTION_TIME = 15;\n      var EXECUTION_STEPS = 10;\n      function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n        this.ctx = canvasCtx;\n        this.current = new CanvasExtraState();\n        this.stateStack = [];\n        this.pendingClip = null;\n        this.pendingEOFill = false;\n        this.res = null;\n        this.xobjs = null;\n        this.commonObjs = commonObjs;\n        this.objs = objs;\n        this.canvasFactory = canvasFactory;\n        this.webGLContext = webGLContext;\n        this.imageLayer = imageLayer;\n        this.groupStack = [];\n        this.processingType3 = null;\n        this.baseTransform = null;\n        this.baseTransformStack = [];\n        this.groupLevel = 0;\n        this.smaskStack = [];\n        this.smaskCounter = 0;\n        this.tempSMask = null;\n        this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n        if (canvasCtx) {\n          addContextCurrentTransform(canvasCtx);\n        }\n        this._cachedGetSinglePixelWidth = null;\n      }\n      function putBinaryImageData(ctx, imgData) {\n        if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n          ctx.putImageData(imgData, 0, 0);\n          return;\n        }\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0,\n          destPos;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        var i, j, thisChunkHeight, elemsInThisChunk;\n        if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n          var srcLength = src.byteLength;\n          var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n          var dest32DataLength = dest32.length;\n          var fullSrcDiff = width + 7 >> 3;\n          var white = 0xffffffff;\n          var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n          for (i = 0; i < totalChunks; i++) {\n            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            destPos = 0;\n            for (j = 0; j < thisChunkHeight; j++) {\n              var srcDiff = srcLength - srcPos;\n              var k = 0;\n              var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n              var kEndUnrolled = kEnd & ~7;\n              var mask = 0;\n              var srcByte = 0;\n              for (; k < kEndUnrolled; k += 8) {\n                srcByte = src[srcPos++];\n                dest32[destPos++] = srcByte & 128 ? white : black;\n                dest32[destPos++] = srcByte & 64 ? white : black;\n                dest32[destPos++] = srcByte & 32 ? white : black;\n                dest32[destPos++] = srcByte & 16 ? white : black;\n                dest32[destPos++] = srcByte & 8 ? white : black;\n                dest32[destPos++] = srcByte & 4 ? white : black;\n                dest32[destPos++] = srcByte & 2 ? white : black;\n                dest32[destPos++] = srcByte & 1 ? white : black;\n              }\n              for (; k < kEnd; k++) {\n                if (mask === 0) {\n                  srcByte = src[srcPos++];\n                  mask = 128;\n                }\n                dest32[destPos++] = srcByte & mask ? white : black;\n                mask >>= 1;\n              }\n            }\n            while (destPos < dest32DataLength) {\n              dest32[destPos++] = 0;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n          j = 0;\n          elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n          for (i = 0; i < fullChunks; i++) {\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            srcPos += elemsInThisChunk;\n            ctx.putImageData(chunkImgData, 0, j);\n            j += FULL_CHUNK_HEIGHT;\n          }\n          if (i < totalChunks) {\n            elemsInThisChunk = width * partialChunkHeight * 4;\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            ctx.putImageData(chunkImgData, 0, j);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n          thisChunkHeight = FULL_CHUNK_HEIGHT;\n          elemsInThisChunk = width * thisChunkHeight;\n          for (i = 0; i < totalChunks; i++) {\n            if (i >= fullChunks) {\n              thisChunkHeight = partialChunkHeight;\n              elemsInThisChunk = width * thisChunkHeight;\n            }\n            destPos = 0;\n            for (j = elemsInThisChunk; j--;) {\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = 255;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else {\n          throw new Error(`bad image kind: ${imgData.kind}`);\n        }\n      }\n      function putBinaryImageMask(ctx, imgData) {\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        for (var i = 0; i < totalChunks; i++) {\n          var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          var destPos = 3;\n          for (var j = 0; j < thisChunkHeight; j++) {\n            var mask = 0;\n            for (var k = 0; k < width; k++) {\n              if (!mask) {\n                var elem = src[srcPos++];\n                mask = 128;\n              }\n              dest[destPos] = elem & mask ? 0 : 255;\n              destPos += 4;\n              mask >>= 1;\n            }\n          }\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      }\n      function copyCtxState(sourceCtx, destCtx) {\n        var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n        for (var i = 0, ii = properties.length; i < ii; i++) {\n          var property = properties[i];\n          if (sourceCtx[property] !== undefined) {\n            destCtx[property] = sourceCtx[property];\n          }\n        }\n        if (sourceCtx.setLineDash !== undefined) {\n          destCtx.setLineDash(sourceCtx.getLineDash());\n          destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n        }\n      }\n      function resetCtxToDefault(ctx) {\n        ctx.strokeStyle = \"#000000\";\n        ctx.fillStyle = \"#000000\";\n        ctx.fillRule = \"nonzero\";\n        ctx.globalAlpha = 1;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"butt\";\n        ctx.lineJoin = \"miter\";\n        ctx.miterLimit = 10;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.font = \"10px sans-serif\";\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash([]);\n          ctx.lineDashOffset = 0;\n        }\n      }\n      function composeSMaskBackdrop(bytes, r0, g0, b0) {\n        var length = bytes.length;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = bytes[i];\n          if (alpha === 0) {\n            bytes[i - 3] = r0;\n            bytes[i - 2] = g0;\n            bytes[i - 1] = b0;\n          } else if (alpha < 255) {\n            var alpha_ = 255 - alpha;\n            bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n            bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n            bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n          }\n        }\n      }\n      function composeSMaskAlpha(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        var scale = 1 / 255;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n          layerData[i] = layerData[i] * alpha * scale | 0;\n        }\n      }\n      function composeSMaskLuminosity(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        for (var i = 3; i < length; i += 4) {\n          var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n          layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n        }\n      }\n      function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n        var hasBackdrop = !!backdrop;\n        var r0 = hasBackdrop ? backdrop[0] : 0;\n        var g0 = hasBackdrop ? backdrop[1] : 0;\n        var b0 = hasBackdrop ? backdrop[2] : 0;\n        var composeFn;\n        if (subtype === \"Luminosity\") {\n          composeFn = composeSMaskLuminosity;\n        } else {\n          composeFn = composeSMaskAlpha;\n        }\n        var PIXELS_TO_PROCESS = 1048576;\n        var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n        for (var row = 0; row < height; row += chunkSize) {\n          var chunkHeight = Math.min(chunkSize, height - row);\n          var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n          var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n          if (hasBackdrop) {\n            composeSMaskBackdrop(maskData.data, r0, g0, b0);\n          }\n          composeFn(maskData.data, layerData.data, transferMap);\n          maskCtx.putImageData(layerData, 0, row);\n        }\n      }\n      function composeSMask(ctx, smask, layerCtx, webGLContext) {\n        var mask = smask.canvas;\n        var maskCtx = smask.context;\n        ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n        var backdrop = smask.backdrop || null;\n        if (!smask.transferMap && webGLContext.isEnabled) {\n          const composed = webGLContext.composeSMask({\n            layer: layerCtx.canvas,\n            mask,\n            properties: {\n              subtype: smask.subtype,\n              backdrop\n            }\n          });\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n          return;\n        }\n        genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n        ctx.drawImage(mask, 0, 0);\n      }\n      var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      var NORMAL_CLIP = {};\n      var EO_CLIP = {};\n      CanvasGraphics.prototype = {\n        beginDrawing(_ref16) {\n          let {\n            transform,\n            viewport,\n            transparency = false,\n            background = null\n          } = _ref16;\n          var width = this.ctx.canvas.width;\n          var height = this.ctx.canvas.height;\n          this.ctx.save();\n          this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n          this.ctx.fillRect(0, 0, width, height);\n          this.ctx.restore();\n          if (transparency) {\n            var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n            this.compositeCtx = this.ctx;\n            this.transparentCanvas = transparentCanvas.canvas;\n            this.ctx = transparentCanvas.context;\n            this.ctx.save();\n            this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n          }\n          this.ctx.save();\n          resetCtxToDefault(this.ctx);\n          if (transform) {\n            this.ctx.transform.apply(this.ctx, transform);\n          }\n          this.ctx.transform.apply(this.ctx, viewport.transform);\n          this.baseTransform = this.ctx.mozCurrentTransform.slice();\n          if (this.imageLayer) {\n            this.imageLayer.beginLayout();\n          }\n        },\n        executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n          var argsArray = operatorList.argsArray;\n          var fnArray = operatorList.fnArray;\n          var i = executionStartIdx || 0;\n          var argsArrayLen = argsArray.length;\n          if (argsArrayLen === i) {\n            return i;\n          }\n          var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n          var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n          var steps = 0;\n          var commonObjs = this.commonObjs;\n          var objs = this.objs;\n          var fnId;\n          while (true) {\n            if (stepper !== undefined && i === stepper.nextBreakPoint) {\n              stepper.breakIt(i, continueCallback);\n              return i;\n            }\n            fnId = fnArray[i];\n            if (fnId !== _util.OPS.dependency) {\n              this[fnId].apply(this, argsArray[i]);\n            } else {\n              for (const depObjId of argsArray[i]) {\n                const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                if (!objsPool.has(depObjId)) {\n                  objsPool.get(depObjId, continueCallback);\n                  return i;\n                }\n              }\n            }\n            i++;\n            if (i === argsArrayLen) {\n              return i;\n            }\n            if (chunkOperations && ++steps > EXECUTION_STEPS) {\n              if (Date.now() > endTime) {\n                continueCallback();\n                return i;\n              }\n              steps = 0;\n            }\n          }\n        },\n        endDrawing: function CanvasGraphics_endDrawing() {\n          if (this.current.activeSMask !== null) {\n            this.endSMaskGroup();\n          }\n          this.ctx.restore();\n          if (this.transparentCanvas) {\n            this.ctx = this.compositeCtx;\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.drawImage(this.transparentCanvas, 0, 0);\n            this.ctx.restore();\n            this.transparentCanvas = null;\n          }\n          this.cachedCanvases.clear();\n          this.webGLContext.clear();\n          if (this.imageLayer) {\n            this.imageLayer.endLayout();\n          }\n        },\n        setLineWidth: function CanvasGraphics_setLineWidth(width) {\n          this.current.lineWidth = width;\n          this.ctx.lineWidth = width;\n        },\n        setLineCap: function CanvasGraphics_setLineCap(style) {\n          this.ctx.lineCap = LINE_CAP_STYLES[style];\n        },\n        setLineJoin: function CanvasGraphics_setLineJoin(style) {\n          this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n        },\n        setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n          this.ctx.miterLimit = limit;\n        },\n        setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n          var ctx = this.ctx;\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash(dashArray);\n            ctx.lineDashOffset = dashPhase;\n          }\n        },\n        setRenderingIntent(intent) {},\n        setFlatness(flatness) {},\n        setGState: function CanvasGraphics_setGState(states) {\n          for (var i = 0, ii = states.length; i < ii; i++) {\n            var state = states[i];\n            var key = state[0];\n            var value = state[1];\n            switch (key) {\n              case \"LW\":\n                this.setLineWidth(value);\n                break;\n              case \"LC\":\n                this.setLineCap(value);\n                break;\n              case \"LJ\":\n                this.setLineJoin(value);\n                break;\n              case \"ML\":\n                this.setMiterLimit(value);\n                break;\n              case \"D\":\n                this.setDash(value[0], value[1]);\n                break;\n              case \"RI\":\n                this.setRenderingIntent(value);\n                break;\n              case \"FL\":\n                this.setFlatness(value);\n                break;\n              case \"Font\":\n                this.setFont(value[0], value[1]);\n                break;\n              case \"CA\":\n                this.current.strokeAlpha = state[1];\n                break;\n              case \"ca\":\n                this.current.fillAlpha = state[1];\n                this.ctx.globalAlpha = state[1];\n                break;\n              case \"BM\":\n                this.ctx.globalCompositeOperation = value;\n                break;\n              case \"SMask\":\n                if (this.current.activeSMask) {\n                  if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                    this.suspendSMaskGroup();\n                  } else {\n                    this.endSMaskGroup();\n                  }\n                }\n                this.current.activeSMask = value ? this.tempSMask : null;\n                if (this.current.activeSMask) {\n                  this.beginSMaskGroup();\n                }\n                this.tempSMask = null;\n                break;\n            }\n          }\n        },\n        beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n          var activeSMask = this.current.activeSMask;\n          var drawnWidth = activeSMask.canvas.width;\n          var drawnHeight = activeSMask.canvas.height;\n          var cacheId = \"smaskGroupAt\" + this.groupLevel;\n          var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          var currentCtx = this.ctx;\n          var currentTransform = currentCtx.mozCurrentTransform;\n          this.ctx.save();\n          var groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n          groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        },\n        suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.ctx;\n          this.groupLevel--;\n          this.ctx = this.groupStack.pop();\n          composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n          this.ctx.restore();\n          this.ctx.save();\n          copyCtxState(groupCtx, this.ctx);\n          this.current.resumeSMaskCtx = groupCtx;\n          var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n          this.ctx.transform.apply(this.ctx, deltaTransform);\n          groupCtx.save();\n          groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n          groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n          groupCtx.restore();\n        },\n        resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.current.resumeSMaskCtx;\n          var currentCtx = this.ctx;\n          this.ctx = groupCtx;\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        },\n        endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.ctx;\n          this.groupLevel--;\n          this.ctx = this.groupStack.pop();\n          composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n          this.ctx.restore();\n          copyCtxState(groupCtx, this.ctx);\n          var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n          this.ctx.transform.apply(this.ctx, deltaTransform);\n        },\n        save: function CanvasGraphics_save() {\n          this.ctx.save();\n          var old = this.current;\n          this.stateStack.push(old);\n          this.current = old.clone();\n          this.current.resumeSMaskCtx = null;\n        },\n        restore: function CanvasGraphics_restore() {\n          if (this.current.resumeSMaskCtx) {\n            this.resumeSMaskGroup();\n          }\n          if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n            this.endSMaskGroup();\n          }\n          if (this.stateStack.length !== 0) {\n            this.current = this.stateStack.pop();\n            this.ctx.restore();\n            this.pendingClip = null;\n            this._cachedGetSinglePixelWidth = null;\n          }\n        },\n        transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n          this.ctx.transform(a, b, c, d, e, f);\n          this._cachedGetSinglePixelWidth = null;\n        },\n        constructPath: function CanvasGraphics_constructPath(ops, args) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var x = current.x,\n            y = current.y;\n          for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n            switch (ops[i] | 0) {\n              case _util.OPS.rectangle:\n                x = args[j++];\n                y = args[j++];\n                var width = args[j++];\n                var height = args[j++];\n                if (width === 0) {\n                  width = this.getSinglePixelWidth();\n                }\n                if (height === 0) {\n                  height = this.getSinglePixelWidth();\n                }\n                var xw = x + width;\n                var yh = y + height;\n                this.ctx.moveTo(x, y);\n                this.ctx.lineTo(xw, y);\n                this.ctx.lineTo(xw, yh);\n                this.ctx.lineTo(x, yh);\n                this.ctx.lineTo(x, y);\n                this.ctx.closePath();\n                break;\n              case _util.OPS.moveTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.moveTo(x, y);\n                break;\n              case _util.OPS.lineTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.lineTo(x, y);\n                break;\n              case _util.OPS.curveTo:\n                x = args[j + 4];\n                y = args[j + 5];\n                ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                j += 6;\n                break;\n              case _util.OPS.curveTo2:\n                ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                x = args[j + 2];\n                y = args[j + 3];\n                j += 4;\n                break;\n              case _util.OPS.curveTo3:\n                x = args[j + 2];\n                y = args[j + 3];\n                ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                j += 4;\n                break;\n              case _util.OPS.closePath:\n                ctx.closePath();\n                break;\n            }\n          }\n          current.setCurrentPoint(x, y);\n        },\n        closePath: function CanvasGraphics_closePath() {\n          this.ctx.closePath();\n        },\n        stroke: function CanvasGraphics_stroke(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          var ctx = this.ctx;\n          var strokeColor = this.current.strokeColor;\n          ctx.globalAlpha = this.current.strokeAlpha;\n          if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n            ctx.save();\n            const transform = ctx.mozCurrentTransform;\n            const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n            ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n            ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n            ctx.stroke();\n          }\n          if (consumePath) {\n            this.consumePath();\n          }\n          ctx.globalAlpha = this.current.fillAlpha;\n        },\n        closeStroke: function CanvasGraphics_closeStroke() {\n          this.closePath();\n          this.stroke();\n        },\n        fill: function CanvasGraphics_fill(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          var ctx = this.ctx;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var needRestore = false;\n          if (isPatternFill) {\n            ctx.save();\n            if (this.baseTransform) {\n              ctx.setTransform.apply(ctx, this.baseTransform);\n            }\n            ctx.fillStyle = fillColor.getPattern(ctx, this);\n            needRestore = true;\n          }\n          if (this.pendingEOFill) {\n            ctx.fill(\"evenodd\");\n            this.pendingEOFill = false;\n          } else {\n            ctx.fill();\n          }\n          if (needRestore) {\n            ctx.restore();\n          }\n          if (consumePath) {\n            this.consumePath();\n          }\n        },\n        eoFill: function CanvasGraphics_eoFill() {\n          this.pendingEOFill = true;\n          this.fill();\n        },\n        fillStroke: function CanvasGraphics_fillStroke() {\n          this.fill(false);\n          this.stroke(false);\n          this.consumePath();\n        },\n        eoFillStroke: function CanvasGraphics_eoFillStroke() {\n          this.pendingEOFill = true;\n          this.fillStroke();\n        },\n        closeFillStroke: function CanvasGraphics_closeFillStroke() {\n          this.closePath();\n          this.fillStroke();\n        },\n        closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n          this.pendingEOFill = true;\n          this.closePath();\n          this.fillStroke();\n        },\n        endPath: function CanvasGraphics_endPath() {\n          this.consumePath();\n        },\n        clip: function CanvasGraphics_clip() {\n          this.pendingClip = NORMAL_CLIP;\n        },\n        eoClip: function CanvasGraphics_eoClip() {\n          this.pendingClip = EO_CLIP;\n        },\n        beginText: function CanvasGraphics_beginText() {\n          this.current.textMatrix = _util.IDENTITY_MATRIX;\n          this.current.textMatrixScale = 1;\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        },\n        endText: function CanvasGraphics_endText() {\n          var paths = this.pendingTextPaths;\n          var ctx = this.ctx;\n          if (paths === undefined) {\n            ctx.beginPath();\n            return;\n          }\n          ctx.save();\n          ctx.beginPath();\n          for (var i = 0; i < paths.length; i++) {\n            var path = paths[i];\n            ctx.setTransform.apply(ctx, path.transform);\n            ctx.translate(path.x, path.y);\n            path.addToPath(ctx, path.fontSize);\n          }\n          ctx.restore();\n          ctx.clip();\n          ctx.beginPath();\n          delete this.pendingTextPaths;\n        },\n        setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n          this.current.charSpacing = spacing;\n        },\n        setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n          this.current.wordSpacing = spacing;\n        },\n        setHScale: function CanvasGraphics_setHScale(scale) {\n          this.current.textHScale = scale / 100;\n        },\n        setLeading: function CanvasGraphics_setLeading(leading) {\n          this.current.leading = -leading;\n        },\n        setFont: function CanvasGraphics_setFont(fontRefName, size) {\n          var fontObj = this.commonObjs.get(fontRefName);\n          var current = this.current;\n          if (!fontObj) {\n            throw new Error(`Can't find font for ${fontRefName}`);\n          }\n          current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n          if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n            (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n          }\n          if (size < 0) {\n            size = -size;\n            current.fontDirection = -1;\n          } else {\n            current.fontDirection = 1;\n          }\n          this.current.font = fontObj;\n          this.current.fontSize = size;\n          if (fontObj.isType3Font) {\n            return;\n          }\n          var name = fontObj.loadedName || \"sans-serif\";\n          let bold = \"normal\";\n          if (fontObj.black) {\n            bold = \"900\";\n          } else if (fontObj.bold) {\n            bold = \"bold\";\n          }\n          var italic = fontObj.italic ? \"italic\" : \"normal\";\n          var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n          let browserFontSize = size;\n          if (size < MIN_FONT_SIZE) {\n            browserFontSize = MIN_FONT_SIZE;\n          } else if (size > MAX_FONT_SIZE) {\n            browserFontSize = MAX_FONT_SIZE;\n          }\n          this.current.fontSizeScale = size / browserFontSize;\n          this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n        },\n        setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n          this.current.textRenderingMode = mode;\n        },\n        setTextRise: function CanvasGraphics_setTextRise(rise) {\n          this.current.textRise = rise;\n        },\n        moveText: function CanvasGraphics_moveText(x, y) {\n          this.current.x = this.current.lineX += x;\n          this.current.y = this.current.lineY += y;\n        },\n        setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n          this.setLeading(-y);\n          this.moveText(x, y);\n        },\n        setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n          this.current.textMatrix = [a, b, c, d, e, f];\n          this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        },\n        nextLine: function CanvasGraphics_nextLine() {\n          this.moveText(0, this.current.leading);\n        },\n        paintChar(character, x, y, patternTransform) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var font = current.font;\n          var textRenderingMode = current.textRenderingMode;\n          var fontSize = current.fontSize / current.fontSizeScale;\n          var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n          var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n          const patternFill = current.patternFill && !font.missingFile;\n          var addToPath;\n          if (font.disableFontFace || isAddToPathSet || patternFill) {\n            addToPath = font.getPathGenerator(this.commonObjs, character);\n          }\n          if (font.disableFontFace || patternFill) {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.beginPath();\n            addToPath(ctx, fontSize);\n            if (patternTransform) {\n              ctx.setTransform.apply(ctx, patternTransform);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fill();\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.stroke();\n            }\n            ctx.restore();\n          } else {\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fillText(character, x, y);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.strokeText(character, x, y);\n            }\n          }\n          if (isAddToPathSet) {\n            var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n            paths.push({\n              transform: ctx.mozCurrentTransform,\n              x,\n              y,\n              fontSize,\n              addToPath\n            });\n          }\n        },\n        get isFontSubpixelAAEnabled() {\n          const {\n            context: ctx\n          } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n          ctx.scale(1.5, 1);\n          ctx.fillText(\"I\", 0, 10);\n          var data = ctx.getImageData(0, 0, 10, 10).data;\n          var enabled = false;\n          for (var i = 3; i < data.length; i += 4) {\n            if (data[i] > 0 && data[i] < 255) {\n              enabled = true;\n              break;\n            }\n          }\n          return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n        },\n        showText: function CanvasGraphics_showText(glyphs) {\n          var current = this.current;\n          var font = current.font;\n          if (font.isType3Font) {\n            return this.showType3Text(glyphs);\n          }\n          var fontSize = current.fontSize;\n          if (fontSize === 0) {\n            return undefined;\n          }\n          var ctx = this.ctx;\n          var fontSizeScale = current.fontSizeScale;\n          var charSpacing = current.charSpacing;\n          var wordSpacing = current.wordSpacing;\n          var fontDirection = current.fontDirection;\n          var textHScale = current.textHScale * fontDirection;\n          var glyphsLength = glyphs.length;\n          var vertical = font.vertical;\n          var spacingDir = vertical ? 1 : -1;\n          var defaultVMetrics = font.defaultVMetrics;\n          var widthAdvanceScale = fontSize * current.fontMatrix[0];\n          var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n          ctx.save();\n          let patternTransform;\n          if (current.patternFill) {\n            ctx.save();\n            const pattern = current.fillColor.getPattern(ctx, this);\n            patternTransform = ctx.mozCurrentTransform;\n            ctx.restore();\n            ctx.fillStyle = pattern;\n          }\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y + current.textRise);\n          if (fontDirection > 0) {\n            ctx.scale(textHScale, -1);\n          } else {\n            ctx.scale(textHScale, 1);\n          }\n          var lineWidth = current.lineWidth;\n          var scale = current.textMatrixScale;\n          if (scale === 0 || lineWidth === 0) {\n            var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              this._cachedGetSinglePixelWidth = null;\n              lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n            }\n          } else {\n            lineWidth /= scale;\n          }\n          if (fontSizeScale !== 1.0) {\n            ctx.scale(fontSizeScale, fontSizeScale);\n            lineWidth /= fontSizeScale;\n          }\n          ctx.lineWidth = lineWidth;\n          var x = 0,\n            i;\n          for (i = 0; i < glyphsLength; ++i) {\n            var glyph = glyphs[i];\n            if ((0, _util.isNum)(glyph)) {\n              x += spacingDir * glyph * fontSize / 1000;\n              continue;\n            }\n            var restoreNeeded = false;\n            var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            var character = glyph.fontChar;\n            var accent = glyph.accent;\n            var scaledX, scaledY, scaledAccentX, scaledAccentY;\n            var width = glyph.width;\n            if (vertical) {\n              var vmetric, vx, vy;\n              vmetric = glyph.vmetric || defaultVMetrics;\n              vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n              vx = -vx * widthAdvanceScale;\n              vy = vmetric[2] * widthAdvanceScale;\n              width = vmetric ? -vmetric[0] : width;\n              scaledX = vx / fontSizeScale;\n              scaledY = (x + vy) / fontSizeScale;\n            } else {\n              scaledX = x / fontSizeScale;\n              scaledY = 0;\n            }\n            if (font.remeasure && width > 0) {\n              var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n              if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                var characterScaleX = width / measuredWidth;\n                restoreNeeded = true;\n                ctx.save();\n                ctx.scale(characterScaleX, 1);\n                scaledX /= characterScaleX;\n              } else if (width !== measuredWidth) {\n                scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n              }\n            }\n            if (glyph.isInFont || font.missingFile) {\n              if (simpleFillText && !accent) {\n                ctx.fillText(character, scaledX, scaledY);\n              } else {\n                this.paintChar(character, scaledX, scaledY, patternTransform);\n                if (accent) {\n                  scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                  scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                  this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                }\n              }\n            }\n            var charWidth;\n            if (vertical) {\n              charWidth = width * widthAdvanceScale - spacing * fontDirection;\n            } else {\n              charWidth = width * widthAdvanceScale + spacing * fontDirection;\n            }\n            x += charWidth;\n            if (restoreNeeded) {\n              ctx.restore();\n            }\n          }\n          if (vertical) {\n            current.y -= x;\n          } else {\n            current.x += x * textHScale;\n          }\n          ctx.restore();\n        },\n        showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var font = current.font;\n          var fontSize = current.fontSize;\n          var fontDirection = current.fontDirection;\n          var spacingDir = font.vertical ? 1 : -1;\n          var charSpacing = current.charSpacing;\n          var wordSpacing = current.wordSpacing;\n          var textHScale = current.textHScale * fontDirection;\n          var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n          var glyphsLength = glyphs.length;\n          var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n          var i, glyph, width, spacingLength;\n          if (isTextInvisible || fontSize === 0) {\n            return;\n          }\n          this._cachedGetSinglePixelWidth = null;\n          ctx.save();\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y);\n          ctx.scale(textHScale, fontDirection);\n          for (i = 0; i < glyphsLength; ++i) {\n            glyph = glyphs[i];\n            if ((0, _util.isNum)(glyph)) {\n              spacingLength = spacingDir * glyph * fontSize / 1000;\n              this.ctx.translate(spacingLength, 0);\n              current.x += spacingLength * textHScale;\n              continue;\n            }\n            var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            var operatorList = font.charProcOperatorList[glyph.operatorListId];\n            if (!operatorList) {\n              (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n              continue;\n            }\n            this.processingType3 = glyph;\n            this.save();\n            ctx.scale(fontSize, fontSize);\n            ctx.transform.apply(ctx, fontMatrix);\n            this.executeOperatorList(operatorList);\n            this.restore();\n            var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n            width = transformed[0] * fontSize + spacing;\n            ctx.translate(width, 0);\n            current.x += width * textHScale;\n          }\n          ctx.restore();\n          this.processingType3 = null;\n        },\n        setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n        setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n          this.ctx.rect(llx, lly, urx - llx, ury - lly);\n          this.clip();\n          this.endPath();\n        },\n        getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n          var pattern;\n          if (IR[0] === \"TilingPattern\") {\n            var color = IR[1];\n            var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n            var canvasGraphicsFactory = {\n              createCanvasGraphics: ctx => {\n                return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n              }\n            };\n            pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n          } else {\n            pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n          }\n          return pattern;\n        },\n        setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n          this.current.strokeColor = this.getColorN_Pattern(arguments);\n        },\n        setFillColorN: function CanvasGraphics_setFillColorN() {\n          this.current.fillColor = this.getColorN_Pattern(arguments);\n          this.current.patternFill = true;\n        },\n        setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n          var color = _util.Util.makeCssRgb(r, g, b);\n          this.ctx.strokeStyle = color;\n          this.current.strokeColor = color;\n        },\n        setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n          var color = _util.Util.makeCssRgb(r, g, b);\n          this.ctx.fillStyle = color;\n          this.current.fillColor = color;\n          this.current.patternFill = false;\n        },\n        shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n          var ctx = this.ctx;\n          this.save();\n          var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n          ctx.fillStyle = pattern.getPattern(ctx, this, true);\n          var inv = ctx.mozCurrentTransformInverse;\n          if (inv) {\n            var canvas = ctx.canvas;\n            var width = canvas.width;\n            var height = canvas.height;\n            var bl = _util.Util.applyTransform([0, 0], inv);\n            var br = _util.Util.applyTransform([0, height], inv);\n            var ul = _util.Util.applyTransform([width, 0], inv);\n            var ur = _util.Util.applyTransform([width, height], inv);\n            var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          } else {\n            this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n          }\n          this.restore();\n        },\n        beginInlineImage: function CanvasGraphics_beginInlineImage() {\n          (0, _util.unreachable)(\"Should not call beginInlineImage\");\n        },\n        beginImageData: function CanvasGraphics_beginImageData() {\n          (0, _util.unreachable)(\"Should not call beginImageData\");\n        },\n        paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n          this.save();\n          this.baseTransformStack.push(this.baseTransform);\n          if (Array.isArray(matrix) && matrix.length === 6) {\n            this.transform.apply(this, matrix);\n          }\n          this.baseTransform = this.ctx.mozCurrentTransform;\n          if (bbox) {\n            var width = bbox[2] - bbox[0];\n            var height = bbox[3] - bbox[1];\n            this.ctx.rect(bbox[0], bbox[1], width, height);\n            this.clip();\n            this.endPath();\n          }\n        },\n        paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n          this.restore();\n          this.baseTransform = this.baseTransformStack.pop();\n        },\n        beginGroup: function CanvasGraphics_beginGroup(group) {\n          this.save();\n          var currentCtx = this.ctx;\n          if (!group.isolated) {\n            (0, _util.info)(\"TODO: Support non-isolated groups.\");\n          }\n          if (group.knockout) {\n            (0, _util.warn)(\"Knockout groups not supported.\");\n          }\n          var currentTransform = currentCtx.mozCurrentTransform;\n          if (group.matrix) {\n            currentCtx.transform.apply(currentCtx, group.matrix);\n          }\n          if (!group.bbox) {\n            throw new Error(\"Bounding box is required.\");\n          }\n          var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n          var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n          bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n          var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n          var scaleX = 1,\n            scaleY = 1;\n          if (drawnWidth > MAX_GROUP_SIZE) {\n            scaleX = drawnWidth / MAX_GROUP_SIZE;\n            drawnWidth = MAX_GROUP_SIZE;\n          }\n          if (drawnHeight > MAX_GROUP_SIZE) {\n            scaleY = drawnHeight / MAX_GROUP_SIZE;\n            drawnHeight = MAX_GROUP_SIZE;\n          }\n          var cacheId = \"groupAt\" + this.groupLevel;\n          if (group.smask) {\n            cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n          }\n          var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          var groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / scaleX, 1 / scaleY);\n          groupCtx.translate(-offsetX, -offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          if (group.smask) {\n            this.smaskStack.push({\n              canvas: scratchCanvas.canvas,\n              context: groupCtx,\n              offsetX,\n              offsetY,\n              scaleX,\n              scaleY,\n              subtype: group.smask.subtype,\n              backdrop: group.smask.backdrop,\n              transferMap: group.smask.transferMap || null,\n              startTransformInverse: null\n            });\n          } else {\n            currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n            currentCtx.translate(offsetX, offsetY);\n            currentCtx.scale(scaleX, scaleY);\n          }\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n          this.current.activeSMask = null;\n        },\n        endGroup: function CanvasGraphics_endGroup(group) {\n          this.groupLevel--;\n          var groupCtx = this.ctx;\n          this.ctx = this.groupStack.pop();\n          if (this.ctx.imageSmoothingEnabled !== undefined) {\n            this.ctx.imageSmoothingEnabled = false;\n          } else {\n            this.ctx.mozImageSmoothingEnabled = false;\n          }\n          if (group.smask) {\n            this.tempSMask = this.smaskStack.pop();\n          } else {\n            this.ctx.drawImage(groupCtx.canvas, 0, 0);\n          }\n          this.restore();\n        },\n        beginAnnotations: function CanvasGraphics_beginAnnotations() {\n          this.save();\n          if (this.baseTransform) {\n            this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n          }\n        },\n        endAnnotations: function CanvasGraphics_endAnnotations() {\n          this.restore();\n        },\n        beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n          this.save();\n          resetCtxToDefault(this.ctx);\n          this.current = new CanvasExtraState();\n          if (Array.isArray(rect) && rect.length === 4) {\n            var width = rect[2] - rect[0];\n            var height = rect[3] - rect[1];\n            this.ctx.rect(rect[0], rect[1], width, height);\n            this.clip();\n            this.endPath();\n          }\n          this.transform.apply(this, transform);\n          this.transform.apply(this, matrix);\n        },\n        endAnnotation: function CanvasGraphics_endAnnotation() {\n          this.restore();\n        },\n        paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n          var ctx = this.ctx;\n          var width = img.width,\n            height = img.height;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var glyph = this.processingType3;\n          if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n            if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n              glyph.compiled = compileType3Glyph({\n                data: img.data,\n                width,\n                height\n              });\n            } else {\n              glyph.compiled = null;\n            }\n          }\n          if (glyph && glyph.compiled) {\n            glyph.compiled(ctx);\n            return;\n          }\n          var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          var maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, img);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          this.paintInlineImageXObject(maskCanvas.canvas);\n        },\n        paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          var maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, imgData);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          var ctx = this.ctx;\n          for (var i = 0, ii = positions.length; i < ii; i += 2) {\n            ctx.save();\n            ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n        },\n        paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n          var ctx = this.ctx;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          for (var i = 0, ii = images.length; i < ii; i++) {\n            var image = images[i];\n            var width = image.width,\n              height = image.height;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, image);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            ctx.save();\n            ctx.transform.apply(ctx, image.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n        },\n        paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n          const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          this.paintInlineImageXObject(imgData);\n        },\n        paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n          const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          var width = imgData.width;\n          var height = imgData.height;\n          var map = [];\n          for (var i = 0, ii = positions.length; i < ii; i += 2) {\n            map.push({\n              transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n              x: 0,\n              y: 0,\n              w: width,\n              h: height\n            });\n          }\n          this.paintInlineImageXObjectGroup(imgData, map);\n        },\n        paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var ctx = this.ctx;\n          this.save();\n          ctx.scale(1 / width, -1 / height);\n          var currentTransform = ctx.mozCurrentTransformInverse;\n          var a = currentTransform[0],\n            b = currentTransform[1];\n          var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n          var c = currentTransform[2],\n            d = currentTransform[3];\n          var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n          var imgToPaint, tmpCanvas;\n          if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n            imgToPaint = imgData;\n          } else {\n            tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n            imgToPaint = tmpCanvas.canvas;\n          }\n          var paintWidth = width,\n            paintHeight = height;\n          var tmpCanvasId = \"prescale1\";\n          while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n            var newWidth = paintWidth,\n              newHeight = paintHeight;\n            if (widthScale > 2 && paintWidth > 1) {\n              newWidth = Math.ceil(paintWidth / 2);\n              widthScale /= paintWidth / newWidth;\n            }\n            if (heightScale > 2 && paintHeight > 1) {\n              newHeight = Math.ceil(paintHeight / 2);\n              heightScale /= paintHeight / newHeight;\n            }\n            tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n            tmpCtx = tmpCanvas.context;\n            tmpCtx.clearRect(0, 0, newWidth, newHeight);\n            tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n            imgToPaint = tmpCanvas.canvas;\n            paintWidth = newWidth;\n            paintHeight = newHeight;\n            tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n          }\n          ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n          if (this.imageLayer) {\n            var position = this.getCanvasPosition(0, -height);\n            this.imageLayer.appendImage({\n              imgData,\n              left: position[0],\n              top: position[1],\n              width: width / currentTransform[0],\n              height: height / currentTransform[3]\n            });\n          }\n          this.restore();\n        },\n        paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n          var ctx = this.ctx;\n          var w = imgData.width;\n          var h = imgData.height;\n          var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n          var tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData);\n          for (var i = 0, ii = map.length; i < ii; i++) {\n            var entry = map[i];\n            ctx.save();\n            ctx.transform.apply(ctx, entry.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(entry.x, entry.y);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: w,\n                height: h\n              });\n            }\n            ctx.restore();\n          }\n        },\n        paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n          this.ctx.fillRect(0, 0, 1, 1);\n        },\n        paintXObject: function CanvasGraphics_paintXObject() {\n          (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n        },\n        markPoint: function CanvasGraphics_markPoint(tag) {},\n        markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n        beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n        beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n        endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n        beginCompat: function CanvasGraphics_beginCompat() {},\n        endCompat: function CanvasGraphics_endCompat() {},\n        consumePath: function CanvasGraphics_consumePath() {\n          var ctx = this.ctx;\n          if (this.pendingClip) {\n            if (this.pendingClip === EO_CLIP) {\n              ctx.clip(\"evenodd\");\n            } else {\n              ctx.clip();\n            }\n            this.pendingClip = null;\n          }\n          ctx.beginPath();\n        },\n        getSinglePixelWidth(scale) {\n          if (this._cachedGetSinglePixelWidth === null) {\n            const inverse = this.ctx.mozCurrentTransformInverse;\n            this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n          }\n          return this._cachedGetSinglePixelWidth;\n        },\n        getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n          var transform = this.ctx.mozCurrentTransform;\n          return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n        }\n      };\n      for (var op in _util.OPS) {\n        CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n      }\n      return CanvasGraphics;\n    }();\n    exports.CanvasGraphics = CanvasGraphics;\n\n    /***/\n  }), ( /* 9 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getShadingPatternFromIR = getShadingPatternFromIR;\n    exports.TilingPattern = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var ShadingIRs = {};\n    function applyBoundingBox(ctx, bbox) {\n      if (!bbox || typeof Path2D === \"undefined\") {\n        return;\n      }\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      const region = new Path2D();\n      region.rect(bbox[0], bbox[1], width, height);\n      ctx.clip(region);\n    }\n    ShadingIRs.RadialAxial = {\n      fromIR: function RadialAxial_fromIR(raw) {\n        var type = raw[1];\n        var bbox = raw[2];\n        var colorStops = raw[3];\n        var p0 = raw[4];\n        var p1 = raw[5];\n        var r0 = raw[6];\n        var r1 = raw[7];\n        return {\n          type: \"Pattern\",\n          getPattern: function RadialAxial_getPattern(ctx) {\n            applyBoundingBox(ctx, bbox);\n            var grad;\n            if (type === \"axial\") {\n              grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n            } else if (type === \"radial\") {\n              grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n            }\n            for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n              var c = colorStops[i];\n              grad.addColorStop(c[0], c[1]);\n            }\n            return grad;\n          }\n        };\n      }\n    };\n    var createMeshCanvas = function createMeshCanvasClosure() {\n      function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n        var coords = context.coords,\n          colors = context.colors;\n        var bytes = data.data,\n          rowSize = data.width * 4;\n        var tmp;\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        if (coords[p2 + 1] > coords[p3 + 1]) {\n          tmp = p2;\n          p2 = p3;\n          p3 = tmp;\n          tmp = c2;\n          c2 = c3;\n          c3 = tmp;\n        }\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n        var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n        var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n        var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n        var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n        var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n        if (y1 >= y3) {\n          return;\n        }\n        var c1r = colors[c1],\n          c1g = colors[c1 + 1],\n          c1b = colors[c1 + 2];\n        var c2r = colors[c2],\n          c2g = colors[c2 + 1],\n          c2b = colors[c2 + 2];\n        var c3r = colors[c3],\n          c3g = colors[c3 + 1],\n          c3b = colors[c3 + 2];\n        var minY = Math.round(y1),\n          maxY = Math.round(y3);\n        var xa, car, cag, cab;\n        var xb, cbr, cbg, cbb;\n        for (var y = minY; y <= maxY; y++) {\n          if (y < y2) {\n            let k;\n            if (y < y1) {\n              k = 0;\n            } else if (y1 === y2) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y2);\n            }\n            xa = x1 - (x1 - x2) * k;\n            car = c1r - (c1r - c2r) * k;\n            cag = c1g - (c1g - c2g) * k;\n            cab = c1b - (c1b - c2b) * k;\n          } else {\n            let k;\n            if (y > y3) {\n              k = 1;\n            } else if (y2 === y3) {\n              k = 0;\n            } else {\n              k = (y2 - y) / (y2 - y3);\n            }\n            xa = x2 - (x2 - x3) * k;\n            car = c2r - (c2r - c3r) * k;\n            cag = c2g - (c2g - c3g) * k;\n            cab = c2b - (c2b - c3b) * k;\n          }\n          let k;\n          if (y < y1) {\n            k = 0;\n          } else if (y > y3) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y3);\n          }\n          xb = x1 - (x1 - x3) * k;\n          cbr = c1r - (c1r - c3r) * k;\n          cbg = c1g - (c1g - c3g) * k;\n          cbb = c1b - (c1b - c3b) * k;\n          var x1_ = Math.round(Math.min(xa, xb));\n          var x2_ = Math.round(Math.max(xa, xb));\n          var j = rowSize * y + x1_ * 4;\n          for (var x = x1_; x <= x2_; x++) {\n            k = (xa - x) / (xa - xb);\n            if (k < 0) {\n              k = 0;\n            } else if (k > 1) {\n              k = 1;\n            }\n            bytes[j++] = car - (car - cbr) * k | 0;\n            bytes[j++] = cag - (cag - cbg) * k | 0;\n            bytes[j++] = cab - (cab - cbb) * k | 0;\n            bytes[j++] = 255;\n          }\n        }\n      }\n      function drawFigure(data, figure, context) {\n        var ps = figure.coords;\n        var cs = figure.colors;\n        var i, ii;\n        switch (figure.type) {\n          case \"lattice\":\n            var verticesPerRow = figure.verticesPerRow;\n            var rows = Math.floor(ps.length / verticesPerRow) - 1;\n            var cols = verticesPerRow - 1;\n            for (i = 0; i < rows; i++) {\n              var q = i * verticesPerRow;\n              for (var j = 0; j < cols; j++, q++) {\n                drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n              }\n            }\n            break;\n          case \"triangles\":\n            for (i = 0, ii = ps.length; i < ii; i += 3) {\n              drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n            }\n            break;\n          default:\n            throw new Error(\"illegal figure\");\n        }\n      }\n      function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n        var EXPECTED_SCALE = 1.1;\n        var MAX_PATTERN_SIZE = 3000;\n        var BORDER_SIZE = 2;\n        var offsetX = Math.floor(bounds[0]);\n        var offsetY = Math.floor(bounds[1]);\n        var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n        var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n        var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n        var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n        var scaleX = boundsWidth / width;\n        var scaleY = boundsHeight / height;\n        var context = {\n          coords,\n          colors,\n          offsetX: -offsetX,\n          offsetY: -offsetY,\n          scaleX: 1 / scaleX,\n          scaleY: 1 / scaleY\n        };\n        var paddedWidth = width + BORDER_SIZE * 2;\n        var paddedHeight = height + BORDER_SIZE * 2;\n        var canvas, tmpCanvas, i, ii;\n        if (webGLContext.isEnabled) {\n          canvas = webGLContext.drawFigures({\n            width,\n            height,\n            backgroundColor,\n            figures,\n            context\n          });\n          tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n          canvas = tmpCanvas.canvas;\n        } else {\n          tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          var tmpCtx = tmpCanvas.context;\n          var data = tmpCtx.createImageData(width, height);\n          if (backgroundColor) {\n            var bytes = data.data;\n            for (i = 0, ii = bytes.length; i < ii; i += 4) {\n              bytes[i] = backgroundColor[0];\n              bytes[i + 1] = backgroundColor[1];\n              bytes[i + 2] = backgroundColor[2];\n              bytes[i + 3] = 255;\n            }\n          }\n          for (i = 0; i < figures.length; i++) {\n            drawFigure(data, figures[i], context);\n          }\n          tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n          canvas = tmpCanvas.canvas;\n        }\n        return {\n          canvas,\n          offsetX: offsetX - BORDER_SIZE * scaleX,\n          offsetY: offsetY - BORDER_SIZE * scaleY,\n          scaleX,\n          scaleY\n        };\n      }\n      return createMeshCanvas;\n    }();\n    ShadingIRs.Mesh = {\n      fromIR: function Mesh_fromIR(raw) {\n        var coords = raw[2];\n        var colors = raw[3];\n        var figures = raw[4];\n        var bounds = raw[5];\n        var matrix = raw[6];\n        var bbox = raw[7];\n        var background = raw[8];\n        return {\n          type: \"Pattern\",\n          getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n            applyBoundingBox(ctx, bbox);\n            var scale;\n            if (shadingFill) {\n              scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n              if (matrix) {\n                var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n            var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n            if (!shadingFill) {\n              ctx.setTransform.apply(ctx, owner.baseTransform);\n              if (matrix) {\n                ctx.transform.apply(ctx, matrix);\n              }\n            }\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n        };\n      }\n    };\n    ShadingIRs.Dummy = {\n      fromIR: function Dummy_fromIR() {\n        return {\n          type: \"Pattern\",\n          getPattern: function Dummy_fromIR_getPattern() {\n            return \"hotpink\";\n          }\n        };\n      }\n    };\n    function getShadingPatternFromIR(raw) {\n      var shadingIR = ShadingIRs[raw[0]];\n      if (!shadingIR) {\n        throw new Error(`Unknown IR type: ${raw[0]}`);\n      }\n      return shadingIR.fromIR(raw);\n    }\n    var TilingPattern = function TilingPatternClosure() {\n      var PaintType = {\n        COLORED: 1,\n        UNCOLORED: 2\n      };\n      var MAX_PATTERN_SIZE = 3000;\n      function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n        this.operatorList = IR[2];\n        this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n        this.bbox = IR[4];\n        this.xstep = IR[5];\n        this.ystep = IR[6];\n        this.paintType = IR[7];\n        this.tilingType = IR[8];\n        this.color = color;\n        this.canvasGraphicsFactory = canvasGraphicsFactory;\n        this.baseTransform = baseTransform;\n        this.type = \"Pattern\";\n        this.ctx = ctx;\n      }\n      TilingPattern.prototype = {\n        createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n          var operatorList = this.operatorList;\n          var bbox = this.bbox;\n          var xstep = this.xstep;\n          var ystep = this.ystep;\n          var paintType = this.paintType;\n          var tilingType = this.tilingType;\n          var color = this.color;\n          var canvasGraphicsFactory = this.canvasGraphicsFactory;\n          (0, _util.info)(\"TilingType: \" + tilingType);\n          var x0 = bbox[0],\n            y0 = bbox[1],\n            x1 = bbox[2],\n            y1 = bbox[3];\n          var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n          var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n          var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n          var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n          var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n          var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n          var tmpCtx = tmpCanvas.context;\n          var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n          graphics.groupLevel = owner.groupLevel;\n          this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n          graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n          graphics.transform(1, 0, 0, 1, -x0, -y0);\n          this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n          graphics.executeOperatorList(operatorList);\n          this.ctx.transform(1, 0, 0, 1, x0, y0);\n          this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n          return tmpCanvas.canvas;\n        },\n        getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n          step = Math.abs(step);\n          var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n          var size = Math.ceil(step * scale);\n          if (size >= maxSize) {\n            size = maxSize;\n          } else {\n            scale = size / step;\n          }\n          return {\n            scale,\n            size\n          };\n        },\n        clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n          if (Array.isArray(bbox) && bbox.length === 4) {\n            var bboxWidth = x1 - x0;\n            var bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.clip();\n            graphics.endPath();\n          }\n        },\n        setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n          const context = graphics.ctx,\n            current = graphics.current;\n          switch (paintType) {\n            case PaintType.COLORED:\n              var ctx = this.ctx;\n              context.fillStyle = ctx.fillStyle;\n              context.strokeStyle = ctx.strokeStyle;\n              current.fillColor = ctx.fillStyle;\n              current.strokeColor = ctx.strokeStyle;\n              break;\n            case PaintType.UNCOLORED:\n              var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n              context.fillStyle = cssColor;\n              context.strokeStyle = cssColor;\n              current.fillColor = cssColor;\n              current.strokeColor = cssColor;\n              break;\n            default:\n              throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n          }\n        },\n        getPattern: function TilingPattern_getPattern(ctx, owner) {\n          ctx = this.ctx;\n          ctx.setTransform.apply(ctx, this.baseTransform);\n          ctx.transform.apply(ctx, this.matrix);\n          var temporaryPatternCanvas = this.createPatternCanvas(owner);\n          return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n        }\n      };\n      return TilingPattern;\n    }();\n    exports.TilingPattern = TilingPattern;\n\n    /***/\n  }), ( /* 10 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.GlobalWorkerOptions = void 0;\n    const GlobalWorkerOptions = Object.create(null);\n    exports.GlobalWorkerOptions = GlobalWorkerOptions;\n    GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n    GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n    /***/\n  }), ( /* 11 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.MessageHandler = void 0;\n    var _util = __w_pdfjs_require__(2);\n    const CallbackKind = {\n      UNKNOWN: 0,\n      DATA: 1,\n      ERROR: 2\n    };\n    const StreamKind = {\n      UNKNOWN: 0,\n      CANCEL: 1,\n      CANCEL_COMPLETE: 2,\n      CLOSE: 3,\n      ENQUEUE: 4,\n      ERROR: 5,\n      PULL: 6,\n      PULL_COMPLETE: 7,\n      START_COMPLETE: 8\n    };\n    function wrapReason(reason) {\n      if (typeof reason !== \"object\" || reason === null) {\n        return reason;\n      }\n      switch (reason.name) {\n        case \"AbortException\":\n          return new _util.AbortException(reason.message);\n        case \"MissingPDFException\":\n          return new _util.MissingPDFException(reason.message);\n        case \"UnexpectedResponseException\":\n          return new _util.UnexpectedResponseException(reason.message, reason.status);\n        case \"UnknownErrorException\":\n          return new _util.UnknownErrorException(reason.message, reason.details);\n        default:\n          return new _util.UnknownErrorException(reason.message, reason.toString());\n      }\n    }\n    class MessageHandler {\n      constructor(sourceName, targetName, comObj) {\n        this.sourceName = sourceName;\n        this.targetName = targetName;\n        this.comObj = comObj;\n        this.callbackId = 1;\n        this.streamId = 1;\n        this.postMessageTransfers = true;\n        this.streamSinks = Object.create(null);\n        this.streamControllers = Object.create(null);\n        this.callbackCapabilities = Object.create(null);\n        this.actionHandler = Object.create(null);\n        this._onComObjOnMessage = event => {\n          const data = event.data;\n          if (data.targetName !== this.sourceName) {\n            return;\n          }\n          if (data.stream) {\n            this._processStreamMessage(data);\n            return;\n          }\n          if (data.callback) {\n            const callbackId = data.callbackId;\n            const capability = this.callbackCapabilities[callbackId];\n            if (!capability) {\n              throw new Error(`Cannot resolve callback ${callbackId}`);\n            }\n            delete this.callbackCapabilities[callbackId];\n            if (data.callback === CallbackKind.DATA) {\n              capability.resolve(data.data);\n            } else if (data.callback === CallbackKind.ERROR) {\n              capability.reject(wrapReason(data.reason));\n            } else {\n              throw new Error(\"Unexpected callback case\");\n            }\n            return;\n          }\n          const action = this.actionHandler[data.action];\n          if (!action) {\n            throw new Error(`Unknown action from worker: ${data.action}`);\n          }\n          if (data.callbackId) {\n            const cbSourceName = this.sourceName;\n            const cbTargetName = data.sourceName;\n            new Promise(function (resolve) {\n              resolve(action(data.data));\n            }).then(function (result) {\n              comObj.postMessage({\n                sourceName: cbSourceName,\n                targetName: cbTargetName,\n                callback: CallbackKind.DATA,\n                callbackId: data.callbackId,\n                data: result\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: cbSourceName,\n                targetName: cbTargetName,\n                callback: CallbackKind.ERROR,\n                callbackId: data.callbackId,\n                reason: wrapReason(reason)\n              });\n            });\n            return;\n          }\n          if (data.streamId) {\n            this._createStreamSink(data);\n            return;\n          }\n          action(data.data);\n        };\n        comObj.addEventListener(\"message\", this._onComObjOnMessage);\n      }\n      on(actionName, handler) {\n        const ah = this.actionHandler;\n        if (ah[actionName]) {\n          throw new Error(`There is already an actionName called \"${actionName}\"`);\n        }\n        ah[actionName] = handler;\n      }\n      send(actionName, data, transfers) {\n        this._postMessage({\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          data\n        }, transfers);\n      }\n      sendWithPromise(actionName, data, transfers) {\n        const callbackId = this.callbackId++;\n        const capability = (0, _util.createPromiseCapability)();\n        this.callbackCapabilities[callbackId] = capability;\n        try {\n          this._postMessage({\n            sourceName: this.sourceName,\n            targetName: this.targetName,\n            action: actionName,\n            callbackId,\n            data\n          }, transfers);\n        } catch (ex) {\n          capability.reject(ex);\n        }\n        return capability.promise;\n      }\n      sendWithStream(actionName, data, queueingStrategy, transfers) {\n        const streamId = this.streamId++;\n        const sourceName = this.sourceName;\n        const targetName = this.targetName;\n        const comObj = this.comObj;\n        return new ReadableStream({\n          start: controller => {\n            const startCapability = (0, _util.createPromiseCapability)();\n            this.streamControllers[streamId] = {\n              controller,\n              startCall: startCapability,\n              pullCall: null,\n              cancelCall: null,\n              isClosed: false\n            };\n            this._postMessage({\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize\n            }, transfers);\n            return startCapability.promise;\n          },\n          pull: controller => {\n            const pullCapability = (0, _util.createPromiseCapability)();\n            this.streamControllers[streamId].pullCall = pullCapability;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL,\n              streamId,\n              desiredSize: controller.desiredSize\n            });\n            return pullCapability.promise;\n          },\n          cancel: reason => {\n            (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n            const cancelCapability = (0, _util.createPromiseCapability)();\n            this.streamControllers[streamId].cancelCall = cancelCapability;\n            this.streamControllers[streamId].isClosed = true;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL,\n              streamId,\n              reason: wrapReason(reason)\n            });\n            return cancelCapability.promise;\n          }\n        }, queueingStrategy);\n      }\n      _createStreamSink(data) {\n        const self = this;\n        const action = this.actionHandler[data.action];\n        const streamId = data.streamId;\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        const comObj = this.comObj;\n        const streamSink = {\n          enqueue(chunk) {\n            let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            let transfers = arguments.length > 2 ? arguments[2] : undefined;\n            if (this.isCancelled) {\n              return;\n            }\n            const lastDesiredSize = this.desiredSize;\n            this.desiredSize -= size;\n            if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n              this.sinkCapability = (0, _util.createPromiseCapability)();\n              this.ready = this.sinkCapability.promise;\n            }\n            self._postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.ENQUEUE,\n              streamId,\n              chunk\n            }, transfers);\n          },\n          close() {\n            if (this.isCancelled) {\n              return;\n            }\n            this.isCancelled = true;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CLOSE,\n              streamId\n            });\n            delete self.streamSinks[streamId];\n          },\n          error(reason) {\n            (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n            if (this.isCancelled) {\n              return;\n            }\n            this.isCancelled = true;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.ERROR,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          },\n          sinkCapability: (0, _util.createPromiseCapability)(),\n          onPull: null,\n          onCancel: null,\n          isCancelled: false,\n          desiredSize: data.desiredSize,\n          ready: null\n        };\n        streamSink.sinkCapability.resolve();\n        streamSink.ready = streamSink.sinkCapability.promise;\n        this.streamSinks[streamId] = streamSink;\n        new Promise(function (resolve) {\n          resolve(action(data.data, streamSink));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.START_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.START_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n      }\n      _processStreamMessage(data) {\n        const streamId = data.streamId;\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        const comObj = this.comObj;\n        switch (data.stream) {\n          case StreamKind.START_COMPLETE:\n            if (data.success) {\n              this.streamControllers[streamId].startCall.resolve();\n            } else {\n              this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n            }\n            break;\n          case StreamKind.PULL_COMPLETE:\n            if (data.success) {\n              this.streamControllers[streamId].pullCall.resolve();\n            } else {\n              this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n            }\n            break;\n          case StreamKind.PULL:\n            if (!this.streamSinks[streamId]) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL_COMPLETE,\n                streamId,\n                success: true\n              });\n              break;\n            }\n            if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n              this.streamSinks[streamId].sinkCapability.resolve();\n            }\n            this.streamSinks[streamId].desiredSize = data.desiredSize;\n            const {\n              onPull\n            } = this.streamSinks[data.streamId];\n            new Promise(function (resolve) {\n              resolve(onPull && onPull());\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n            break;\n          case StreamKind.ENQUEUE:\n            (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n            if (this.streamControllers[streamId].isClosed) {\n              break;\n            }\n            this.streamControllers[streamId].controller.enqueue(data.chunk);\n            break;\n          case StreamKind.CLOSE:\n            (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n            if (this.streamControllers[streamId].isClosed) {\n              break;\n            }\n            this.streamControllers[streamId].isClosed = true;\n            this.streamControllers[streamId].controller.close();\n            this._deleteStreamController(streamId);\n            break;\n          case StreamKind.ERROR:\n            (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n            this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n            this._deleteStreamController(streamId);\n            break;\n          case StreamKind.CANCEL_COMPLETE:\n            if (data.success) {\n              this.streamControllers[streamId].cancelCall.resolve();\n            } else {\n              this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n            }\n            this._deleteStreamController(streamId);\n            break;\n          case StreamKind.CANCEL:\n            if (!this.streamSinks[streamId]) {\n              break;\n            }\n            const {\n              onCancel\n            } = this.streamSinks[data.streamId];\n            new Promise(function (resolve) {\n              resolve(onCancel && onCancel(wrapReason(data.reason)));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n            this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n            this.streamSinks[streamId].isCancelled = true;\n            delete this.streamSinks[streamId];\n            break;\n          default:\n            throw new Error(\"Unexpected stream case\");\n        }\n      }\n      async _deleteStreamController(streamId) {\n        await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n          return capability && capability.promise;\n        }));\n        delete this.streamControllers[streamId];\n      }\n      _postMessage(message, transfers) {\n        if (transfers && this.postMessageTransfers) {\n          this.comObj.postMessage(message, transfers);\n        } else {\n          this.comObj.postMessage(message);\n        }\n      }\n      destroy() {\n        this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n      }\n    }\n    exports.MessageHandler = MessageHandler;\n\n    /***/\n  }), ( /* 12 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Metadata = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _xml_parser = __w_pdfjs_require__(13);\n    class Metadata {\n      constructor(data) {\n        (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n        data = this._repair(data);\n        const parser = new _xml_parser.SimpleXMLParser();\n        const xmlDocument = parser.parseFromString(data);\n        this._metadataMap = new Map();\n        if (xmlDocument) {\n          this._parse(xmlDocument);\n        }\n      }\n      _repair(data) {\n        return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n          const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n          let chars = \"\";\n          for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n            const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n            if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n              chars += String.fromCharCode(code);\n            } else {\n              chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n            }\n          }\n          return \">\" + chars;\n        });\n      }\n      _parse(xmlDocument) {\n        let rdf = xmlDocument.documentElement;\n        if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n          rdf = rdf.firstChild;\n          while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n            rdf = rdf.nextSibling;\n          }\n        }\n        const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n        if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n          return;\n        }\n        const children = rdf.childNodes;\n        for (let i = 0, ii = children.length; i < ii; i++) {\n          const desc = children[i];\n          if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n            continue;\n          }\n          for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n            if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n              const entry = desc.childNodes[j];\n              const name = entry.nodeName.toLowerCase();\n              this._metadataMap.set(name, entry.textContent.trim());\n            }\n          }\n        }\n      }\n      get(name) {\n        return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n      }\n      getAll() {\n        const obj = Object.create(null);\n        for (const [key, value] of this._metadataMap) {\n          obj[key] = value;\n        }\n        return obj;\n      }\n      has(name) {\n        return this._metadataMap.has(name);\n      }\n    }\n    exports.Metadata = Metadata;\n\n    /***/\n  }), ( /* 13 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.SimpleXMLParser = void 0;\n    const XMLParserErrorCode = {\n      NoError: 0,\n      EndOfDocument: -1,\n      UnterminatedCdat: -2,\n      UnterminatedXmlDeclaration: -3,\n      UnterminatedDoctypeDeclaration: -4,\n      UnterminatedComment: -5,\n      MalformedElement: -6,\n      OutOfMemory: -7,\n      UnterminatedAttributeValue: -8,\n      UnterminatedElement: -9,\n      ElementNeverBegun: -10\n    };\n    function isWhitespace(s, index) {\n      const ch = s[index];\n      return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n    }\n    function isWhitespaceString(s) {\n      for (let i = 0, ii = s.length; i < ii; i++) {\n        if (!isWhitespace(s, i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    class XMLParserBase {\n      _resolveEntities(s) {\n        return s.replace(/&([^;]+);/g, (all, entity) => {\n          if (entity.substring(0, 2) === \"#x\") {\n            return String.fromCharCode(parseInt(entity.substring(2), 16));\n          } else if (entity.substring(0, 1) === \"#\") {\n            return String.fromCharCode(parseInt(entity.substring(1), 10));\n          }\n          switch (entity) {\n            case \"lt\":\n              return \"<\";\n            case \"gt\":\n              return \">\";\n            case \"amp\":\n              return \"&\";\n            case \"quot\":\n              return '\"';\n          }\n          return this.onResolveEntity(entity);\n        });\n      }\n      _parseContent(s, start) {\n        const attributes = [];\n        let pos = start;\n        function skipWs() {\n          while (pos < s.length && isWhitespace(s, pos)) {\n            ++pos;\n          }\n        }\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n          ++pos;\n        }\n        const name = s.substring(start, pos);\n        skipWs();\n        while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n          skipWs();\n          let attrName = \"\",\n            attrValue = \"\";\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n            attrName += s[pos];\n            ++pos;\n          }\n          skipWs();\n          if (s[pos] !== \"=\") {\n            return null;\n          }\n          ++pos;\n          skipWs();\n          const attrEndChar = s[pos];\n          if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n            return null;\n          }\n          const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n          if (attrEndIndex < 0) {\n            return null;\n          }\n          attrValue = s.substring(pos, attrEndIndex);\n          attributes.push({\n            name: attrName,\n            value: this._resolveEntities(attrValue)\n          });\n          pos = attrEndIndex + 1;\n          skipWs();\n        }\n        return {\n          name,\n          attributes,\n          parsed: pos - start\n        };\n      }\n      _parseProcessingInstruction(s, start) {\n        let pos = start;\n        function skipWs() {\n          while (pos < s.length && isWhitespace(s, pos)) {\n            ++pos;\n          }\n        }\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n          ++pos;\n        }\n        const name = s.substring(start, pos);\n        skipWs();\n        const attrStart = pos;\n        while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n          ++pos;\n        }\n        const value = s.substring(attrStart, pos);\n        return {\n          name,\n          value,\n          parsed: pos - start\n        };\n      }\n      parseXml(s) {\n        let i = 0;\n        while (i < s.length) {\n          const ch = s[i];\n          let j = i;\n          if (ch === \"<\") {\n            ++j;\n            const ch2 = s[j];\n            let q;\n            switch (ch2) {\n              case \"/\":\n                ++j;\n                q = s.indexOf(\">\", j);\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedElement);\n                  return;\n                }\n                this.onEndElement(s.substring(j, q));\n                j = q + 1;\n                break;\n              case \"?\":\n                ++j;\n                const pi = this._parseProcessingInstruction(s, j);\n                if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                  this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                  return;\n                }\n                this.onPi(pi.name, pi.value);\n                j += pi.parsed + 2;\n                break;\n              case \"!\":\n                if (s.substring(j + 1, j + 3) === \"--\") {\n                  q = s.indexOf(\"-->\", j + 3);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedComment);\n                    return;\n                  }\n                  this.onComment(s.substring(j + 3, q));\n                  j = q + 3;\n                } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                  q = s.indexOf(\"]]>\", j + 8);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedCdat);\n                    return;\n                  }\n                  this.onCdata(s.substring(j + 8, q));\n                  j = q + 3;\n                } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                  const q2 = s.indexOf(\"[\", j + 8);\n                  let complexDoctype = false;\n                  q = s.indexOf(\">\", j + 8);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                    return;\n                  }\n                  if (q2 > 0 && q > q2) {\n                    q = s.indexOf(\"]>\", j + 8);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                      return;\n                    }\n                    complexDoctype = true;\n                  }\n                  const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                  this.onDoctype(doctypeContent);\n                  j = q + (complexDoctype ? 2 : 1);\n                } else {\n                  this.onError(XMLParserErrorCode.MalformedElement);\n                  return;\n                }\n                break;\n              default:\n                const content = this._parseContent(s, j);\n                if (content === null) {\n                  this.onError(XMLParserErrorCode.MalformedElement);\n                  return;\n                }\n                let isClosed = false;\n                if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                  isClosed = true;\n                } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                  this.onError(XMLParserErrorCode.UnterminatedElement);\n                  return;\n                }\n                this.onBeginElement(content.name, content.attributes, isClosed);\n                j += content.parsed + (isClosed ? 2 : 1);\n                break;\n            }\n          } else {\n            while (j < s.length && s[j] !== \"<\") {\n              j++;\n            }\n            const text = s.substring(i, j);\n            this.onText(this._resolveEntities(text));\n          }\n          i = j;\n        }\n      }\n      onResolveEntity(name) {\n        return `&${name};`;\n      }\n      onPi(name, value) {}\n      onComment(text) {}\n      onCdata(text) {}\n      onDoctype(doctypeContent) {}\n      onText(text) {}\n      onBeginElement(name, attributes, isEmpty) {}\n      onEndElement(name) {}\n      onError(code) {}\n    }\n    class SimpleDOMNode {\n      constructor(nodeName, nodeValue) {\n        this.nodeName = nodeName;\n        this.nodeValue = nodeValue;\n        Object.defineProperty(this, \"parentNode\", {\n          value: null,\n          writable: true\n        });\n      }\n      get firstChild() {\n        return this.childNodes && this.childNodes[0];\n      }\n      get nextSibling() {\n        const childNodes = this.parentNode.childNodes;\n        if (!childNodes) {\n          return undefined;\n        }\n        const index = childNodes.indexOf(this);\n        if (index === -1) {\n          return undefined;\n        }\n        return childNodes[index + 1];\n      }\n      get textContent() {\n        if (!this.childNodes) {\n          return this.nodeValue || \"\";\n        }\n        return this.childNodes.map(function (child) {\n          return child.textContent;\n        }).join(\"\");\n      }\n      hasChildNodes() {\n        return this.childNodes && this.childNodes.length > 0;\n      }\n    }\n    class SimpleXMLParser extends XMLParserBase {\n      constructor() {\n        super();\n        this._currentFragment = null;\n        this._stack = null;\n        this._errorCode = XMLParserErrorCode.NoError;\n      }\n      parseFromString(data) {\n        this._currentFragment = [];\n        this._stack = [];\n        this._errorCode = XMLParserErrorCode.NoError;\n        this.parseXml(data);\n        if (this._errorCode !== XMLParserErrorCode.NoError) {\n          return undefined;\n        }\n        const [documentElement] = this._currentFragment;\n        if (!documentElement) {\n          return undefined;\n        }\n        return {\n          documentElement\n        };\n      }\n      onResolveEntity(name) {\n        switch (name) {\n          case \"apos\":\n            return \"'\";\n        }\n        return super.onResolveEntity(name);\n      }\n      onText(text) {\n        if (isWhitespaceString(text)) {\n          return;\n        }\n        const node = new SimpleDOMNode(\"#text\", text);\n        this._currentFragment.push(node);\n      }\n      onCdata(text) {\n        const node = new SimpleDOMNode(\"#text\", text);\n        this._currentFragment.push(node);\n      }\n      onBeginElement(name, attributes, isEmpty) {\n        const node = new SimpleDOMNode(name);\n        node.childNodes = [];\n        this._currentFragment.push(node);\n        if (isEmpty) {\n          return;\n        }\n        this._stack.push(this._currentFragment);\n        this._currentFragment = node.childNodes;\n      }\n      onEndElement(name) {\n        this._currentFragment = this._stack.pop() || [];\n        const lastElement = this._currentFragment[this._currentFragment.length - 1];\n        if (!lastElement) {\n          return;\n        }\n        for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n          lastElement.childNodes[i].parentNode = lastElement;\n        }\n      }\n      onError(code) {\n        this._errorCode = code;\n      }\n    }\n    exports.SimpleXMLParser = SimpleXMLParser;\n\n    /***/\n  }), ( /* 14 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFDataTransportStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    class PDFDataTransportStream {\n      constructor(params, pdfDataRangeTransport) {\n        (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n        this._queuedChunks = [];\n        this._progressiveDone = params.progressiveDone || false;\n        const initialData = params.initialData;\n        if (initialData && initialData.length > 0) {\n          const buffer = new Uint8Array(initialData).buffer;\n          this._queuedChunks.push(buffer);\n        }\n        this._pdfDataRangeTransport = pdfDataRangeTransport;\n        this._isStreamingSupported = !params.disableStream;\n        this._isRangeSupported = !params.disableRange;\n        this._contentLength = params.length;\n        this._fullRequestReader = null;\n        this._rangeReaders = [];\n        this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n          this._onReceiveData({\n            begin,\n            chunk\n          });\n        });\n        this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n          this._onProgress({\n            loaded,\n            total\n          });\n        });\n        this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n          this._onReceiveData({\n            chunk\n          });\n        });\n        this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n          this._onProgressiveDone();\n        });\n        this._pdfDataRangeTransport.transportReady();\n      }\n      _onReceiveData(args) {\n        const buffer = new Uint8Array(args.chunk).buffer;\n        if (args.begin === undefined) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader._enqueue(buffer);\n          } else {\n            this._queuedChunks.push(buffer);\n          }\n        } else {\n          const found = this._rangeReaders.some(function (rangeReader) {\n            if (rangeReader._begin !== args.begin) {\n              return false;\n            }\n            rangeReader._enqueue(buffer);\n            return true;\n          });\n          (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n        }\n      }\n      get _progressiveDataLength() {\n        return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n      }\n      _onProgress(evt) {\n        if (evt.total === undefined) {\n          const firstReader = this._rangeReaders[0];\n          if (firstReader && firstReader.onProgress) {\n            firstReader.onProgress({\n              loaded: evt.loaded\n            });\n          }\n        } else {\n          const fullReader = this._fullRequestReader;\n          if (fullReader && fullReader.onProgress) {\n            fullReader.onProgress({\n              loaded: evt.loaded,\n              total: evt.total\n            });\n          }\n        }\n      }\n      _onProgressiveDone() {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.progressiveDone();\n        }\n        this._progressiveDone = true;\n      }\n      _removeRangeReader(reader) {\n        const i = this._rangeReaders.indexOf(reader);\n        if (i >= 0) {\n          this._rangeReaders.splice(i, 1);\n        }\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n        const queuedChunks = this._queuedChunks;\n        this._queuedChunks = null;\n        return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n      }\n      getRangeReader(begin, end) {\n        if (end <= this._progressiveDataLength) {\n          return null;\n        }\n        const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n        this._pdfDataRangeTransport.requestDataRange(begin, end);\n        this._rangeReaders.push(reader);\n        return reader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeReaders.slice(0);\n        readers.forEach(function (rangeReader) {\n          rangeReader.cancel(reason);\n        });\n        this._pdfDataRangeTransport.abort();\n      }\n    }\n    exports.PDFDataTransportStream = PDFDataTransportStream;\n    class PDFDataTransportStreamReader {\n      constructor(stream, queuedChunks) {\n        let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this._stream = stream;\n        this._done = progressiveDone || false;\n        this._filename = null;\n        this._queuedChunks = queuedChunks || [];\n        this._loaded = 0;\n        for (const chunk of this._queuedChunks) {\n          this._loaded += chunk.byteLength;\n        }\n        this._requests = [];\n        this._headersReady = Promise.resolve();\n        stream._fullRequestReader = this;\n        this.onProgress = null;\n      }\n      _enqueue(chunk) {\n        if (this._done) {\n          return;\n        }\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n          requestCapability.resolve({\n            value: chunk,\n            done: false\n          });\n        } else {\n          this._queuedChunks.push(chunk);\n        }\n        this._loaded += chunk.byteLength;\n      }\n      get headersReady() {\n        return this._headersReady;\n      }\n      get filename() {\n        return this._filename;\n      }\n      get isRangeSupported() {\n        return this._stream._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._stream._isStreamingSupported;\n      }\n      get contentLength() {\n        return this._stream._contentLength;\n      }\n      async read() {\n        if (this._queuedChunks.length > 0) {\n          const chunk = this._queuedChunks.shift();\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n      }\n      progressiveDone() {\n        if (this._done) {\n          return;\n        }\n        this._done = true;\n      }\n    }\n    class PDFDataTransportStreamRangeReader {\n      constructor(stream, begin, end) {\n        this._stream = stream;\n        this._begin = begin;\n        this._end = end;\n        this._queuedChunk = null;\n        this._requests = [];\n        this._done = false;\n        this.onProgress = null;\n      }\n      _enqueue(chunk) {\n        if (this._done) {\n          return;\n        }\n        if (this._requests.length === 0) {\n          this._queuedChunk = chunk;\n        } else {\n          const requestsCapability = this._requests.shift();\n          requestsCapability.resolve({\n            value: chunk,\n            done: false\n          });\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n        }\n        this._done = true;\n        this._stream._removeRangeReader(this);\n      }\n      get isStreamingSupported() {\n        return false;\n      }\n      async read() {\n        if (this._queuedChunk) {\n          const chunk = this._queuedChunk;\n          this._queuedChunk = null;\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        this._stream._removeRangeReader(this);\n      }\n    }\n\n    /***/\n  }), ( /* 15 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WebGLContext = void 0;\n    var _util = __w_pdfjs_require__(2);\n    class WebGLContext {\n      constructor(_ref17) {\n        let {\n          enable = false\n        } = _ref17;\n        this._enabled = enable === true;\n      }\n      get isEnabled() {\n        let enabled = this._enabled;\n        if (enabled) {\n          enabled = WebGLUtils.tryInitGL();\n        }\n        return (0, _util.shadow)(this, \"isEnabled\", enabled);\n      }\n      composeSMask(_ref18) {\n        let {\n          layer,\n          mask,\n          properties\n        } = _ref18;\n        return WebGLUtils.composeSMask(layer, mask, properties);\n      }\n      drawFigures(_ref19) {\n        let {\n          width,\n          height,\n          backgroundColor,\n          figures,\n          context\n        } = _ref19;\n        return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n      }\n      clear() {\n        WebGLUtils.cleanup();\n      }\n    }\n    exports.WebGLContext = WebGLContext;\n    var WebGLUtils = function WebGLUtilsClosure() {\n      function loadShader(gl, code, shaderType) {\n        var shader = gl.createShader(shaderType);\n        gl.shaderSource(shader, code);\n        gl.compileShader(shader);\n        var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!compiled) {\n          var errorMsg = gl.getShaderInfoLog(shader);\n          throw new Error(\"Error during shader compilation: \" + errorMsg);\n        }\n        return shader;\n      }\n      function createVertexShader(gl, code) {\n        return loadShader(gl, code, gl.VERTEX_SHADER);\n      }\n      function createFragmentShader(gl, code) {\n        return loadShader(gl, code, gl.FRAGMENT_SHADER);\n      }\n      function createProgram(gl, shaders) {\n        var program = gl.createProgram();\n        for (var i = 0, ii = shaders.length; i < ii; ++i) {\n          gl.attachShader(program, shaders[i]);\n        }\n        gl.linkProgram(program);\n        var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n          var errorMsg = gl.getProgramInfoLog(program);\n          throw new Error(\"Error during program linking: \" + errorMsg);\n        }\n        return program;\n      }\n      function createTexture(gl, image, textureId) {\n        gl.activeTexture(textureId);\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n      }\n      var currentGL, currentCanvas;\n      function generateGL() {\n        if (currentGL) {\n          return;\n        }\n        currentCanvas = document.createElement(\"canvas\");\n        currentGL = currentCanvas.getContext(\"webgl\", {\n          premultipliedalpha: false\n        });\n      }\n      var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n      var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n      var smaskCache = null;\n      function initSmaskGL() {\n        var canvas, gl;\n        generateGL();\n        canvas = currentCanvas;\n        currentCanvas = null;\n        gl = currentGL;\n        currentGL = null;\n        var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n        var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n        var program = createProgram(gl, [vertexShader, fragmentShader]);\n        gl.useProgram(program);\n        var cache = {};\n        cache.gl = gl;\n        cache.canvas = canvas;\n        cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n        cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n        cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n        cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n        var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n        var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n        var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n        var texCoordBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(texCoordLocation);\n        gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform1i(texLayerLocation, 0);\n        gl.uniform1i(texMaskLocation, 1);\n        smaskCache = cache;\n      }\n      function composeSMask(layer, mask, properties) {\n        var width = layer.width,\n          height = layer.height;\n        if (!smaskCache) {\n          initSmaskGL();\n        }\n        var cache = smaskCache,\n          canvas = cache.canvas,\n          gl = cache.gl;\n        canvas.width = width;\n        canvas.height = height;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.uniform2f(cache.resolutionLocation, width, height);\n        if (properties.backdrop) {\n          gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n        } else {\n          gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n        }\n        gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n        var texture = createTexture(gl, layer, gl.TEXTURE0);\n        var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n        var buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.positionLocation);\n        gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        gl.flush();\n        gl.deleteTexture(texture);\n        gl.deleteTexture(maskTexture);\n        gl.deleteBuffer(buffer);\n        return canvas;\n      }\n      var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n      var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n      var figuresCache = null;\n      function initFiguresGL() {\n        var canvas, gl;\n        generateGL();\n        canvas = currentCanvas;\n        currentCanvas = null;\n        gl = currentGL;\n        currentGL = null;\n        var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n        var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n        var program = createProgram(gl, [vertexShader, fragmentShader]);\n        gl.useProgram(program);\n        var cache = {};\n        cache.gl = gl;\n        cache.canvas = canvas;\n        cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n        cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n        cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n        cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n        cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n        figuresCache = cache;\n      }\n      function drawFigures(width, height, backgroundColor, figures, context) {\n        if (!figuresCache) {\n          initFiguresGL();\n        }\n        var cache = figuresCache,\n          canvas = cache.canvas,\n          gl = cache.gl;\n        canvas.width = width;\n        canvas.height = height;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.uniform2f(cache.resolutionLocation, width, height);\n        var count = 0;\n        var i, ii, rows;\n        for (i = 0, ii = figures.length; i < ii; i++) {\n          switch (figures[i].type) {\n            case \"lattice\":\n              rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n              count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n              break;\n            case \"triangles\":\n              count += figures[i].coords.length;\n              break;\n          }\n        }\n        var coords = new Float32Array(count * 2);\n        var colors = new Uint8Array(count * 3);\n        var coordsMap = context.coords,\n          colorsMap = context.colors;\n        var pIndex = 0,\n          cIndex = 0;\n        for (i = 0, ii = figures.length; i < ii; i++) {\n          var figure = figures[i],\n            ps = figure.coords,\n            cs = figure.colors;\n          switch (figure.type) {\n            case \"lattice\":\n              var cols = figure.verticesPerRow;\n              rows = ps.length / cols | 0;\n              for (var row = 1; row < rows; row++) {\n                var offset = row * cols + 1;\n                for (var col = 1; col < cols; col++, offset++) {\n                  coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                  coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                  coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                  coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                  coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                  coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                  colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                  colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                  colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                  colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                  colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                  colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                  colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                  colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                  coords[pIndex + 6] = coords[pIndex + 2];\n                  coords[pIndex + 7] = coords[pIndex + 3];\n                  coords[pIndex + 8] = coords[pIndex + 4];\n                  coords[pIndex + 9] = coords[pIndex + 5];\n                  coords[pIndex + 10] = coordsMap[ps[offset]];\n                  coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                  colors[cIndex + 9] = colors[cIndex + 3];\n                  colors[cIndex + 10] = colors[cIndex + 4];\n                  colors[cIndex + 11] = colors[cIndex + 5];\n                  colors[cIndex + 12] = colors[cIndex + 6];\n                  colors[cIndex + 13] = colors[cIndex + 7];\n                  colors[cIndex + 14] = colors[cIndex + 8];\n                  colors[cIndex + 15] = colorsMap[cs[offset]];\n                  colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                  colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                  pIndex += 12;\n                  cIndex += 18;\n                }\n              }\n              break;\n            case \"triangles\":\n              for (var j = 0, jj = ps.length; j < jj; j++) {\n                coords[pIndex] = coordsMap[ps[j]];\n                coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                colors[cIndex] = colorsMap[cs[j]];\n                colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                pIndex += 2;\n                cIndex += 3;\n              }\n              break;\n          }\n        }\n        if (backgroundColor) {\n          gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n        } else {\n          gl.clearColor(0, 0, 0, 0);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        var coordsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.positionLocation);\n        gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n        var colorsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.colorLocation);\n        gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n        gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n        gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n        gl.drawArrays(gl.TRIANGLES, 0, count);\n        gl.flush();\n        gl.deleteBuffer(coordsBuffer);\n        gl.deleteBuffer(colorsBuffer);\n        return canvas;\n      }\n      return {\n        tryInitGL() {\n          try {\n            generateGL();\n            return !!currentGL;\n          } catch (ex) {}\n          return false;\n        },\n        composeSMask,\n        drawFigures,\n        cleanup() {\n          if (smaskCache && smaskCache.canvas) {\n            smaskCache.canvas.width = 0;\n            smaskCache.canvas.height = 0;\n          }\n          if (figuresCache && figuresCache.canvas) {\n            figuresCache.canvas.width = 0;\n            figuresCache.canvas.height = 0;\n          }\n          smaskCache = null;\n          figuresCache = null;\n        }\n      };\n    }();\n\n    /***/\n  }), ( /* 16 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.AnnotationLayer = void 0;\n    var _display_utils = __w_pdfjs_require__(1);\n    var _util = __w_pdfjs_require__(2);\n    class AnnotationElementFactory {\n      static create(parameters) {\n        const subtype = parameters.data.annotationType;\n        switch (subtype) {\n          case _util.AnnotationType.LINK:\n            return new LinkAnnotationElement(parameters);\n          case _util.AnnotationType.TEXT:\n            return new TextAnnotationElement(parameters);\n          case _util.AnnotationType.WIDGET:\n            const fieldType = parameters.data.fieldType;\n            switch (fieldType) {\n              case \"Tx\":\n                return new TextWidgetAnnotationElement(parameters);\n              case \"Btn\":\n                if (parameters.data.radioButton) {\n                  return new RadioButtonWidgetAnnotationElement(parameters);\n                } else if (parameters.data.checkBox) {\n                  return new CheckboxWidgetAnnotationElement(parameters);\n                }\n                return new PushButtonWidgetAnnotationElement(parameters);\n              case \"Ch\":\n                return new ChoiceWidgetAnnotationElement(parameters);\n            }\n            return new WidgetAnnotationElement(parameters);\n          case _util.AnnotationType.POPUP:\n            return new PopupAnnotationElement(parameters);\n          case _util.AnnotationType.FREETEXT:\n            return new FreeTextAnnotationElement(parameters);\n          case _util.AnnotationType.LINE:\n            return new LineAnnotationElement(parameters);\n          case _util.AnnotationType.SQUARE:\n            return new SquareAnnotationElement(parameters);\n          case _util.AnnotationType.CIRCLE:\n            return new CircleAnnotationElement(parameters);\n          case _util.AnnotationType.POLYLINE:\n            return new PolylineAnnotationElement(parameters);\n          case _util.AnnotationType.CARET:\n            return new CaretAnnotationElement(parameters);\n          case _util.AnnotationType.INK:\n            return new InkAnnotationElement(parameters);\n          case _util.AnnotationType.POLYGON:\n            return new PolygonAnnotationElement(parameters);\n          case _util.AnnotationType.HIGHLIGHT:\n            return new HighlightAnnotationElement(parameters);\n          case _util.AnnotationType.UNDERLINE:\n            return new UnderlineAnnotationElement(parameters);\n          case _util.AnnotationType.SQUIGGLY:\n            return new SquigglyAnnotationElement(parameters);\n          case _util.AnnotationType.STRIKEOUT:\n            return new StrikeOutAnnotationElement(parameters);\n          case _util.AnnotationType.STAMP:\n            return new StampAnnotationElement(parameters);\n          case _util.AnnotationType.FILEATTACHMENT:\n            return new FileAttachmentAnnotationElement(parameters);\n          default:\n            return new AnnotationElement(parameters);\n        }\n      }\n    }\n    class AnnotationElement {\n      constructor(parameters) {\n        let isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        let ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.isRenderable = isRenderable;\n        this.data = parameters.data;\n        this.layer = parameters.layer;\n        this.page = parameters.page;\n        this.viewport = parameters.viewport;\n        this.linkService = parameters.linkService;\n        this.downloadManager = parameters.downloadManager;\n        this.imageResourcesPath = parameters.imageResourcesPath;\n        this.renderInteractiveForms = parameters.renderInteractiveForms;\n        this.svgFactory = parameters.svgFactory;\n        if (isRenderable) {\n          this.container = this._createContainer(ignoreBorder);\n        }\n      }\n      _createContainer() {\n        let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        const data = this.data,\n          page = this.page,\n          viewport = this.viewport;\n        const container = document.createElement(\"section\");\n        let width = data.rect[2] - data.rect[0];\n        let height = data.rect[3] - data.rect[1];\n        container.setAttribute(\"data-annotation-id\", data.id);\n        const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n        container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n        container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n        if (!ignoreBorder && data.borderStyle.width > 0) {\n          container.style.borderWidth = `${data.borderStyle.width}px`;\n          if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n            width = width - 2 * data.borderStyle.width;\n            height = height - 2 * data.borderStyle.width;\n          }\n          const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n          const verticalRadius = data.borderStyle.verticalCornerRadius;\n          if (horizontalRadius > 0 || verticalRadius > 0) {\n            const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n            container.style.borderRadius = radius;\n          }\n          switch (data.borderStyle.style) {\n            case _util.AnnotationBorderStyleType.SOLID:\n              container.style.borderStyle = \"solid\";\n              break;\n            case _util.AnnotationBorderStyleType.DASHED:\n              container.style.borderStyle = \"dashed\";\n              break;\n            case _util.AnnotationBorderStyleType.BEVELED:\n              (0, _util.warn)(\"Unimplemented border style: beveled\");\n              break;\n            case _util.AnnotationBorderStyleType.INSET:\n              (0, _util.warn)(\"Unimplemented border style: inset\");\n              break;\n            case _util.AnnotationBorderStyleType.UNDERLINE:\n              container.style.borderBottomStyle = \"solid\";\n              break;\n            default:\n              break;\n          }\n          if (data.color) {\n            container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n          } else {\n            container.style.borderWidth = 0;\n          }\n        }\n        container.style.left = `${rect[0]}px`;\n        container.style.top = `${rect[1]}px`;\n        container.style.width = `${width}px`;\n        container.style.height = `${height}px`;\n        return container;\n      }\n      _createPopup(container, trigger, data) {\n        if (!trigger) {\n          trigger = document.createElement(\"div\");\n          trigger.style.height = container.style.height;\n          trigger.style.width = container.style.width;\n          container.appendChild(trigger);\n        }\n        const popupElement = new PopupElement({\n          container,\n          trigger,\n          color: data.color,\n          title: data.title,\n          modificationDate: data.modificationDate,\n          contents: data.contents,\n          hideWrapper: true\n        });\n        const popup = popupElement.render();\n        popup.style.left = container.style.width;\n        container.appendChild(popup);\n      }\n      render() {\n        (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n      }\n    }\n    class LinkAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n        super(parameters, isRenderable);\n      }\n      render() {\n        this.container.className = \"linkAnnotation\";\n        const {\n          data,\n          linkService\n        } = this;\n        const link = document.createElement(\"a\");\n        if (data.url) {\n          (0, _display_utils.addLinkAttributes)(link, {\n            url: data.url,\n            target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n            rel: linkService.externalLinkRel,\n            enabled: linkService.externalLinkEnabled\n          });\n        } else if (data.action) {\n          this._bindNamedAction(link, data.action);\n        } else {\n          this._bindLink(link, data.dest);\n        }\n        this.container.appendChild(link);\n        return this.container;\n      }\n      _bindLink(link, destination) {\n        link.href = this.linkService.getDestinationHash(destination);\n        link.onclick = () => {\n          if (destination) {\n            this.linkService.navigateTo(destination);\n          }\n          return false;\n        };\n        if (destination) {\n          link.className = \"internalLink\";\n        }\n      }\n      _bindNamedAction(link, action) {\n        link.href = this.linkService.getAnchorUrl(\"\");\n        link.onclick = () => {\n          this.linkService.executeNamedAction(action);\n          return false;\n        };\n        link.className = \"internalLink\";\n      }\n    }\n    class TextAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable);\n      }\n      render() {\n        this.container.className = \"textAnnotation\";\n        const image = document.createElement(\"img\");\n        image.style.height = this.container.style.height;\n        image.style.width = this.container.style.width;\n        image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n        image.alt = \"[{{type}} Annotation]\";\n        image.dataset.l10nId = \"text_annotation_type\";\n        image.dataset.l10nArgs = JSON.stringify({\n          type: this.data.name\n        });\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, image, this.data);\n        }\n        this.container.appendChild(image);\n        return this.container;\n      }\n    }\n    class WidgetAnnotationElement extends AnnotationElement {\n      render() {\n        return this.container;\n      }\n    }\n    class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n        super(parameters, isRenderable);\n      }\n      render() {\n        const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n        this.container.className = \"textWidgetAnnotation\";\n        let element = null;\n        if (this.renderInteractiveForms) {\n          if (this.data.multiLine) {\n            element = document.createElement(\"textarea\");\n            element.textContent = this.data.fieldValue;\n          } else {\n            element = document.createElement(\"input\");\n            element.type = \"text\";\n            element.setAttribute(\"value\", this.data.fieldValue);\n          }\n          element.disabled = this.data.readOnly;\n          element.name = this.data.fieldName;\n          if (this.data.maxLen !== null) {\n            element.maxLength = this.data.maxLen;\n          }\n          if (this.data.comb) {\n            const fieldWidth = this.data.rect[2] - this.data.rect[0];\n            const combWidth = fieldWidth / this.data.maxLen;\n            element.classList.add(\"comb\");\n            element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n          }\n        } else {\n          element = document.createElement(\"div\");\n          element.textContent = this.data.fieldValue;\n          element.style.verticalAlign = \"middle\";\n          element.style.display = \"table-cell\";\n          let font = null;\n          if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n            font = this.page.commonObjs.get(this.data.fontRefName);\n          }\n          this._setTextStyle(element, font);\n        }\n        if (this.data.textAlignment !== null) {\n          element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n        }\n        this.container.appendChild(element);\n        return this.container;\n      }\n      _setTextStyle(element, font) {\n        const style = element.style;\n        style.fontSize = `${this.data.fontSize}px`;\n        style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n        if (!font) {\n          return;\n        }\n        let bold = \"normal\";\n        if (font.black) {\n          bold = \"900\";\n        } else if (font.bold) {\n          bold = \"bold\";\n        }\n        style.fontWeight = bold;\n        style.fontStyle = font.italic ? \"italic\" : \"normal\";\n        const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n        const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n        style.fontFamily = fontFamily + fallbackName;\n      }\n    }\n    class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        super(parameters, parameters.renderInteractiveForms);\n      }\n      render() {\n        this.container.className = \"buttonWidgetAnnotation checkBox\";\n        const element = document.createElement(\"input\");\n        element.disabled = this.data.readOnly;\n        element.type = \"checkbox\";\n        element.name = this.data.fieldName;\n        if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n          element.setAttribute(\"checked\", true);\n        }\n        this.container.appendChild(element);\n        return this.container;\n      }\n    }\n    class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        super(parameters, parameters.renderInteractiveForms);\n      }\n      render() {\n        this.container.className = \"buttonWidgetAnnotation radioButton\";\n        const element = document.createElement(\"input\");\n        element.disabled = this.data.readOnly;\n        element.type = \"radio\";\n        element.name = this.data.fieldName;\n        if (this.data.fieldValue === this.data.buttonValue) {\n          element.setAttribute(\"checked\", true);\n        }\n        this.container.appendChild(element);\n        return this.container;\n      }\n    }\n    class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n      render() {\n        const container = super.render();\n        container.className = \"buttonWidgetAnnotation pushButton\";\n        return container;\n      }\n    }\n    class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        super(parameters, parameters.renderInteractiveForms);\n      }\n      render() {\n        this.container.className = \"choiceWidgetAnnotation\";\n        const selectElement = document.createElement(\"select\");\n        selectElement.disabled = this.data.readOnly;\n        selectElement.name = this.data.fieldName;\n        if (!this.data.combo) {\n          selectElement.size = this.data.options.length;\n          if (this.data.multiSelect) {\n            selectElement.multiple = true;\n          }\n        }\n        for (const option of this.data.options) {\n          const optionElement = document.createElement(\"option\");\n          optionElement.textContent = option.displayValue;\n          optionElement.value = option.exportValue;\n          if (this.data.fieldValue.includes(option.displayValue)) {\n            optionElement.setAttribute(\"selected\", true);\n          }\n          selectElement.appendChild(optionElement);\n        }\n        this.container.appendChild(selectElement);\n        return this.container;\n      }\n    }\n    class PopupAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable);\n      }\n      render() {\n        const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n        this.container.className = \"popupAnnotation\";\n        if (IGNORE_TYPES.includes(this.data.parentType)) {\n          return this.container;\n        }\n        const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n        const parentElement = this.layer.querySelector(selector);\n        if (!parentElement) {\n          return this.container;\n        }\n        const popup = new PopupElement({\n          container: this.container,\n          trigger: parentElement,\n          color: this.data.color,\n          title: this.data.title,\n          modificationDate: this.data.modificationDate,\n          contents: this.data.contents\n        });\n        const parentLeft = parseFloat(parentElement.style.left);\n        const parentWidth = parseFloat(parentElement.style.width);\n        this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${parentElement.style.top}`;\n        this.container.style.left = `${parentLeft + parentWidth}px`;\n        this.container.appendChild(popup.render());\n        return this.container;\n      }\n    }\n    class PopupElement {\n      constructor(parameters) {\n        this.container = parameters.container;\n        this.trigger = parameters.trigger;\n        this.color = parameters.color;\n        this.title = parameters.title;\n        this.modificationDate = parameters.modificationDate;\n        this.contents = parameters.contents;\n        this.hideWrapper = parameters.hideWrapper || false;\n        this.pinned = false;\n      }\n      render() {\n        const BACKGROUND_ENLIGHT = 0.7;\n        const wrapper = document.createElement(\"div\");\n        wrapper.className = \"popupWrapper\";\n        this.hideElement = this.hideWrapper ? wrapper : this.container;\n        this.hideElement.setAttribute(\"hidden\", true);\n        const popup = document.createElement(\"div\");\n        popup.className = \"popup\";\n        const color = this.color;\n        if (color) {\n          const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n          const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n          const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n          popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n        }\n        const title = document.createElement(\"h1\");\n        title.textContent = this.title;\n        popup.appendChild(title);\n        const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n        if (dateObject) {\n          const modificationDate = document.createElement(\"span\");\n          modificationDate.textContent = \"{{date}}, {{time}}\";\n          modificationDate.dataset.l10nId = \"annotation_date_string\";\n          modificationDate.dataset.l10nArgs = JSON.stringify({\n            date: dateObject.toLocaleDateString(),\n            time: dateObject.toLocaleTimeString()\n          });\n          popup.appendChild(modificationDate);\n        }\n        const contents = this._formatContents(this.contents);\n        popup.appendChild(contents);\n        this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n        this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n        this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n        popup.addEventListener(\"click\", this._hide.bind(this, true));\n        wrapper.appendChild(popup);\n        return wrapper;\n      }\n      _formatContents(contents) {\n        const p = document.createElement(\"p\");\n        const lines = contents.split(/(?:\\r\\n?|\\n)/);\n        for (let i = 0, ii = lines.length; i < ii; ++i) {\n          const line = lines[i];\n          p.appendChild(document.createTextNode(line));\n          if (i < ii - 1) {\n            p.appendChild(document.createElement(\"br\"));\n          }\n        }\n        return p;\n      }\n      _toggle() {\n        if (this.pinned) {\n          this._hide(true);\n        } else {\n          this._show(true);\n        }\n      }\n      _show() {\n        let pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (pin) {\n          this.pinned = true;\n        }\n        if (this.hideElement.hasAttribute(\"hidden\")) {\n          this.hideElement.removeAttribute(\"hidden\");\n          this.container.style.zIndex += 1;\n        }\n      }\n      _hide() {\n        let unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        if (unpin) {\n          this.pinned = false;\n        }\n        if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n          this.hideElement.setAttribute(\"hidden\", true);\n          this.container.style.zIndex -= 1;\n        }\n      }\n    }\n    class FreeTextAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"freeTextAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class LineAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"lineAnnotation\";\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        const line = this.svgFactory.createElement(\"svg:line\");\n        line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n        line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n        line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n        line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n        line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        line.setAttribute(\"stroke\", \"transparent\");\n        svg.appendChild(line);\n        this.container.append(svg);\n        this._createPopup(this.container, line, data);\n        return this.container;\n      }\n    }\n    class SquareAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"squareAnnotation\";\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        const borderWidth = data.borderStyle.width;\n        const square = this.svgFactory.createElement(\"svg:rect\");\n        square.setAttribute(\"x\", borderWidth / 2);\n        square.setAttribute(\"y\", borderWidth / 2);\n        square.setAttribute(\"width\", width - borderWidth);\n        square.setAttribute(\"height\", height - borderWidth);\n        square.setAttribute(\"stroke-width\", borderWidth || 1);\n        square.setAttribute(\"stroke\", \"transparent\");\n        square.setAttribute(\"fill\", \"none\");\n        svg.appendChild(square);\n        this.container.append(svg);\n        this._createPopup(this.container, square, data);\n        return this.container;\n      }\n    }\n    class CircleAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"circleAnnotation\";\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        const borderWidth = data.borderStyle.width;\n        const circle = this.svgFactory.createElement(\"svg:ellipse\");\n        circle.setAttribute(\"cx\", width / 2);\n        circle.setAttribute(\"cy\", height / 2);\n        circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n        circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n        circle.setAttribute(\"stroke-width\", borderWidth || 1);\n        circle.setAttribute(\"stroke\", \"transparent\");\n        circle.setAttribute(\"fill\", \"none\");\n        svg.appendChild(circle);\n        this.container.append(svg);\n        this._createPopup(this.container, circle, data);\n        return this.container;\n      }\n    }\n    class PolylineAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n        this.containerClassName = \"polylineAnnotation\";\n        this.svgElementName = \"svg:polyline\";\n      }\n      render() {\n        this.container.className = this.containerClassName;\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        let points = [];\n        for (const coordinate of data.vertices) {\n          const x = coordinate.x - data.rect[0];\n          const y = data.rect[3] - coordinate.y;\n          points.push(x + \",\" + y);\n        }\n        points = points.join(\" \");\n        const polyline = this.svgFactory.createElement(this.svgElementName);\n        polyline.setAttribute(\"points\", points);\n        polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        polyline.setAttribute(\"stroke\", \"transparent\");\n        polyline.setAttribute(\"fill\", \"none\");\n        svg.appendChild(polyline);\n        this.container.append(svg);\n        this._createPopup(this.container, polyline, data);\n        return this.container;\n      }\n    }\n    class PolygonAnnotationElement extends PolylineAnnotationElement {\n      constructor(parameters) {\n        super(parameters);\n        this.containerClassName = \"polygonAnnotation\";\n        this.svgElementName = \"svg:polygon\";\n      }\n    }\n    class CaretAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"caretAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class InkAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n        this.containerClassName = \"inkAnnotation\";\n        this.svgElementName = \"svg:polyline\";\n      }\n      render() {\n        this.container.className = this.containerClassName;\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        for (const inkList of data.inkLists) {\n          let points = [];\n          for (const coordinate of inkList) {\n            const x = coordinate.x - data.rect[0];\n            const y = data.rect[3] - coordinate.y;\n            points.push(`${x},${y}`);\n          }\n          points = points.join(\" \");\n          const polyline = this.svgFactory.createElement(this.svgElementName);\n          polyline.setAttribute(\"points\", points);\n          polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          polyline.setAttribute(\"stroke\", \"transparent\");\n          polyline.setAttribute(\"fill\", \"none\");\n          this._createPopup(this.container, polyline, data);\n          svg.appendChild(polyline);\n        }\n        this.container.append(svg);\n        return this.container;\n      }\n    }\n    class HighlightAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"highlightAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class UnderlineAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"underlineAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class SquigglyAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"squigglyAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class StrikeOutAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"strikeoutAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class StampAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"stampAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class FileAttachmentAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        super(parameters, true);\n        const {\n          filename,\n          content\n        } = this.data.file;\n        this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n        this.content = content;\n        if (this.linkService.eventBus) {\n          this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n            source: this,\n            id: (0, _util.stringToPDFString)(filename),\n            filename,\n            content\n          });\n        }\n      }\n      render() {\n        this.container.className = \"fileAttachmentAnnotation\";\n        const trigger = document.createElement(\"div\");\n        trigger.style.height = this.container.style.height;\n        trigger.style.width = this.container.style.width;\n        trigger.addEventListener(\"dblclick\", this._download.bind(this));\n        if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n          this._createPopup(this.container, trigger, this.data);\n        }\n        this.container.appendChild(trigger);\n        return this.container;\n      }\n      _download() {\n        if (!this.downloadManager) {\n          (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n          return;\n        }\n        this.downloadManager.downloadData(this.content, this.filename, \"\");\n      }\n    }\n    class AnnotationLayer {\n      static render(parameters) {\n        const sortedAnnotations = [],\n          popupAnnotations = [];\n        for (const data of parameters.annotations) {\n          if (!data) {\n            continue;\n          }\n          if (data.annotationType === _util.AnnotationType.POPUP) {\n            popupAnnotations.push(data);\n            continue;\n          }\n          sortedAnnotations.push(data);\n        }\n        if (popupAnnotations.length) {\n          sortedAnnotations.push(...popupAnnotations);\n        }\n        for (const data of sortedAnnotations) {\n          const element = AnnotationElementFactory.create({\n            data,\n            layer: parameters.div,\n            page: parameters.page,\n            viewport: parameters.viewport,\n            linkService: parameters.linkService,\n            downloadManager: parameters.downloadManager,\n            imageResourcesPath: parameters.imageResourcesPath || \"\",\n            renderInteractiveForms: parameters.renderInteractiveForms || false,\n            svgFactory: new _display_utils.DOMSVGFactory()\n          });\n          if (element.isRenderable) {\n            parameters.div.appendChild(element.render());\n          }\n        }\n      }\n      static update(parameters) {\n        for (const data of parameters.annotations) {\n          const element = parameters.div.querySelector(`[data-annotation-id=\"${data.id}\"]`);\n          if (element) {\n            element.style.transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n          }\n        }\n        parameters.div.removeAttribute(\"hidden\");\n      }\n    }\n    exports.AnnotationLayer = AnnotationLayer;\n\n    /***/\n  }), ( /* 17 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.renderTextLayer = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var renderTextLayer = function renderTextLayerClosure() {\n      var MAX_TEXT_DIVS_TO_RENDER = 100000;\n      var NonWhitespaceRegexp = /\\S/;\n      function isAllWhitespace(str) {\n        return !NonWhitespaceRegexp.test(str);\n      }\n      function appendText(task, geom, styles) {\n        var textDiv = document.createElement(\"span\");\n        var textDivProperties = {\n          angle: 0,\n          canvasWidth: 0,\n          isWhitespace: false,\n          originalTransform: null,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          scale: 1\n        };\n        task._textDivs.push(textDiv);\n        if (isAllWhitespace(geom.str)) {\n          textDivProperties.isWhitespace = true;\n          task._textDivProperties.set(textDiv, textDivProperties);\n          return;\n        }\n        var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n        var angle = Math.atan2(tx[1], tx[0]);\n        var style = styles[geom.fontName];\n        if (style.vertical) {\n          angle += Math.PI / 2;\n        }\n        var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n        var fontAscent = fontHeight;\n        if (style.ascent) {\n          fontAscent = style.ascent * fontAscent;\n        } else if (style.descent) {\n          fontAscent = (1 + style.descent) * fontAscent;\n        }\n        let left, top;\n        if (angle === 0) {\n          left = tx[4];\n          top = tx[5] - fontAscent;\n        } else {\n          left = tx[4] + fontAscent * Math.sin(angle);\n          top = tx[5] - fontAscent * Math.cos(angle);\n        }\n        textDiv.style.left = `${left}px`;\n        textDiv.style.top = `${top}px`;\n        textDiv.style.fontSize = `${fontHeight}px`;\n        textDiv.style.fontFamily = style.fontFamily;\n        textDiv.textContent = geom.str;\n        if (task._fontInspectorEnabled) {\n          textDiv.dataset.fontName = geom.fontName;\n        }\n        if (angle !== 0) {\n          textDivProperties.angle = angle * (180 / Math.PI);\n        }\n        let shouldScaleText = false;\n        if (geom.str.length > 1) {\n          shouldScaleText = true;\n        } else if (geom.transform[0] !== geom.transform[3]) {\n          const absScaleX = Math.abs(geom.transform[0]),\n            absScaleY = Math.abs(geom.transform[3]);\n          if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n            shouldScaleText = true;\n          }\n        }\n        if (shouldScaleText) {\n          if (style.vertical) {\n            textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n          } else {\n            textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n          }\n        }\n        task._textDivProperties.set(textDiv, textDivProperties);\n        if (task._textContentStream) {\n          task._layoutText(textDiv);\n        }\n        if (task._enhanceTextSelection) {\n          var angleCos = 1,\n            angleSin = 0;\n          if (angle !== 0) {\n            angleCos = Math.cos(angle);\n            angleSin = Math.sin(angle);\n          }\n          var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n          var divHeight = fontHeight;\n          var m, b;\n          if (angle !== 0) {\n            m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n            b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n          } else {\n            b = [left, top, left + divWidth, top + divHeight];\n          }\n          task._bounds.push({\n            left: b[0],\n            top: b[1],\n            right: b[2],\n            bottom: b[3],\n            div: textDiv,\n            size: [divWidth, divHeight],\n            m\n          });\n        }\n      }\n      function render(task) {\n        if (task._canceled) {\n          return;\n        }\n        var textDivs = task._textDivs;\n        var capability = task._capability;\n        var textDivsLength = textDivs.length;\n        if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n          task._renderingDone = true;\n          capability.resolve();\n          return;\n        }\n        if (!task._textContentStream) {\n          for (var i = 0; i < textDivsLength; i++) {\n            task._layoutText(textDivs[i]);\n          }\n        }\n        task._renderingDone = true;\n        capability.resolve();\n      }\n      function findPositiveMin(ts, offset, count) {\n        let result = 0;\n        for (let i = 0; i < count; i++) {\n          const t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      }\n      function expand(task) {\n        var bounds = task._bounds;\n        var viewport = task._viewport;\n        var expanded = expandBounds(viewport.width, viewport.height, bounds);\n        for (var i = 0; i < expanded.length; i++) {\n          var div = bounds[i].div;\n          var divProperties = task._textDivProperties.get(div);\n          if (divProperties.angle === 0) {\n            divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n            divProperties.paddingTop = bounds[i].top - expanded[i].top;\n            divProperties.paddingRight = expanded[i].right - bounds[i].right;\n            divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n            task._textDivProperties.set(div, divProperties);\n            continue;\n          }\n          var e = expanded[i],\n            b = bounds[i];\n          var m = b.m,\n            c = m[0],\n            s = m[1];\n          var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n          var ts = new Float64Array(64);\n          points.forEach(function (p, j) {\n            var t = _util.Util.applyTransform(p, m);\n            ts[j + 0] = c && (e.left - t[0]) / c;\n            ts[j + 4] = s && (e.top - t[1]) / s;\n            ts[j + 8] = c && (e.right - t[0]) / c;\n            ts[j + 12] = s && (e.bottom - t[1]) / s;\n            ts[j + 16] = s && (e.left - t[0]) / -s;\n            ts[j + 20] = c && (e.top - t[1]) / c;\n            ts[j + 24] = s && (e.right - t[0]) / -s;\n            ts[j + 28] = c && (e.bottom - t[1]) / c;\n            ts[j + 32] = c && (e.left - t[0]) / -c;\n            ts[j + 36] = s && (e.top - t[1]) / -s;\n            ts[j + 40] = c && (e.right - t[0]) / -c;\n            ts[j + 44] = s && (e.bottom - t[1]) / -s;\n            ts[j + 48] = s && (e.left - t[0]) / s;\n            ts[j + 52] = c && (e.top - t[1]) / -c;\n            ts[j + 56] = s && (e.right - t[0]) / s;\n            ts[j + 60] = c && (e.bottom - t[1]) / -c;\n          });\n          var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n          divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n          divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n          divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n          divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n          task._textDivProperties.set(div, divProperties);\n        }\n      }\n      function expandBounds(width, height, boxes) {\n        var bounds = boxes.map(function (box, i) {\n          return {\n            x1: box.left,\n            y1: box.top,\n            x2: box.right,\n            y2: box.bottom,\n            index: i,\n            x1New: undefined,\n            x2New: undefined\n          };\n        });\n        expandBoundsLTR(width, bounds);\n        var expanded = new Array(boxes.length);\n        bounds.forEach(function (b) {\n          var i = b.index;\n          expanded[i] = {\n            left: b.x1New,\n            top: 0,\n            right: b.x2New,\n            bottom: 0\n          };\n        });\n        boxes.map(function (box, i) {\n          var e = expanded[i],\n            b = bounds[i];\n          b.x1 = box.top;\n          b.y1 = width - e.right;\n          b.x2 = box.bottom;\n          b.y2 = width - e.left;\n          b.index = i;\n          b.x1New = undefined;\n          b.x2New = undefined;\n        });\n        expandBoundsLTR(height, bounds);\n        bounds.forEach(function (b) {\n          var i = b.index;\n          expanded[i].top = b.x1New;\n          expanded[i].bottom = b.x2New;\n        });\n        return expanded;\n      }\n      function expandBoundsLTR(width, bounds) {\n        bounds.sort(function (a, b) {\n          return a.x1 - b.x1 || a.index - b.index;\n        });\n        var fakeBoundary = {\n          x1: -Infinity,\n          y1: -Infinity,\n          x2: 0,\n          y2: Infinity,\n          index: -1,\n          x1New: 0,\n          x2New: 0\n        };\n        var horizon = [{\n          start: -Infinity,\n          end: Infinity,\n          boundary: fakeBoundary\n        }];\n        bounds.forEach(function (boundary) {\n          var i = 0;\n          while (i < horizon.length && horizon[i].end <= boundary.y1) {\n            i++;\n          }\n          var j = horizon.length - 1;\n          while (j >= 0 && horizon[j].start >= boundary.y2) {\n            j--;\n          }\n          var horizonPart, affectedBoundary;\n          var q,\n            k,\n            maxXNew = -Infinity;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            var xNew;\n            if (affectedBoundary.x2 > boundary.x1) {\n              xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n            } else if (affectedBoundary.x2New === undefined) {\n              xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n            } else {\n              xNew = affectedBoundary.x2New;\n            }\n            if (xNew > maxXNew) {\n              maxXNew = xNew;\n            }\n          }\n          boundary.x1New = maxXNew;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New === undefined) {\n              if (affectedBoundary.x2 > boundary.x1) {\n                if (affectedBoundary.index > boundary.index) {\n                  affectedBoundary.x2New = affectedBoundary.x2;\n                }\n              } else {\n                affectedBoundary.x2New = maxXNew;\n              }\n            } else if (affectedBoundary.x2New > maxXNew) {\n              affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n            }\n          }\n          var changedHorizon = [],\n            lastBoundary = null;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n            if (lastBoundary === useBoundary) {\n              changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n            } else {\n              changedHorizon.push({\n                start: horizonPart.start,\n                end: horizonPart.end,\n                boundary: useBoundary\n              });\n              lastBoundary = useBoundary;\n            }\n          }\n          if (horizon[i].start < boundary.y1) {\n            changedHorizon[0].start = boundary.y1;\n            changedHorizon.unshift({\n              start: horizon[i].start,\n              end: boundary.y1,\n              boundary: horizon[i].boundary\n            });\n          }\n          if (boundary.y2 < horizon[j].end) {\n            changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n            changedHorizon.push({\n              start: boundary.y2,\n              end: horizon[j].end,\n              boundary: horizon[j].boundary\n            });\n          }\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New !== undefined) {\n              continue;\n            }\n            var used = false;\n            for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = 0; !used && k < changedHorizon.length; k++) {\n              used = changedHorizon[k].boundary === affectedBoundary;\n            }\n            if (!used) {\n              affectedBoundary.x2New = maxXNew;\n            }\n          }\n          Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n        });\n        horizon.forEach(function (horizonPart) {\n          var affectedBoundary = horizonPart.boundary;\n          if (affectedBoundary.x2New === undefined) {\n            affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n          }\n        });\n      }\n      function TextLayerRenderTask(_ref20) {\n        let {\n          textContent,\n          textContentStream,\n          container,\n          viewport,\n          textDivs,\n          textContentItemsStr,\n          enhanceTextSelection\n        } = _ref20;\n        this._textContent = textContent;\n        this._textContentStream = textContentStream;\n        this._container = container;\n        this._viewport = viewport;\n        this._textDivs = textDivs || [];\n        this._textContentItemsStr = textContentItemsStr || [];\n        this._enhanceTextSelection = !!enhanceTextSelection;\n        this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n        this._reader = null;\n        this._layoutTextLastFontSize = null;\n        this._layoutTextLastFontFamily = null;\n        this._layoutTextCtx = null;\n        this._textDivProperties = new WeakMap();\n        this._renderingDone = false;\n        this._canceled = false;\n        this._capability = (0, _util.createPromiseCapability)();\n        this._renderTimer = null;\n        this._bounds = [];\n        this._capability.promise.finally(() => {\n          if (this._layoutTextCtx) {\n            this._layoutTextCtx.canvas.width = 0;\n            this._layoutTextCtx.canvas.height = 0;\n            this._layoutTextCtx = null;\n          }\n        }).catch(() => {});\n      }\n      TextLayerRenderTask.prototype = {\n        get promise() {\n          return this._capability.promise;\n        },\n        cancel: function TextLayer_cancel() {\n          this._canceled = true;\n          if (this._reader) {\n            this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n            this._reader = null;\n          }\n          if (this._renderTimer !== null) {\n            clearTimeout(this._renderTimer);\n            this._renderTimer = null;\n          }\n          this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n        },\n        _processItems(items, styleCache) {\n          for (let i = 0, len = items.length; i < len; i++) {\n            this._textContentItemsStr.push(items[i].str);\n            appendText(this, items[i], styleCache);\n          }\n        },\n        _layoutText(textDiv) {\n          const textDivProperties = this._textDivProperties.get(textDiv);\n          if (textDivProperties.isWhitespace) {\n            return;\n          }\n          let transform = \"\";\n          if (textDivProperties.canvasWidth !== 0) {\n            const {\n              fontSize,\n              fontFamily\n            } = textDiv.style;\n            if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n              this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n              this._layoutTextLastFontSize = fontSize;\n              this._layoutTextLastFontFamily = fontFamily;\n            }\n            const {\n              width\n            } = this._layoutTextCtx.measureText(textDiv.textContent);\n            if (width > 0) {\n              textDivProperties.scale = textDivProperties.canvasWidth / width;\n              transform = `scaleX(${textDivProperties.scale})`;\n            }\n          }\n          if (textDivProperties.angle !== 0) {\n            transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n          }\n          if (transform.length > 0) {\n            if (this._enhanceTextSelection) {\n              textDivProperties.originalTransform = transform;\n            }\n            textDiv.style.transform = transform;\n          }\n          this._textDivProperties.set(textDiv, textDivProperties);\n          this._container.appendChild(textDiv);\n        },\n        _render: function TextLayer_render(timeout) {\n          const capability = (0, _util.createPromiseCapability)();\n          let styleCache = Object.create(null);\n          const canvas = document.createElement(\"canvas\");\n          canvas.mozOpaque = true;\n          this._layoutTextCtx = canvas.getContext(\"2d\", {\n            alpha: false\n          });\n          if (this._textContent) {\n            const textItems = this._textContent.items;\n            const textStyles = this._textContent.styles;\n            this._processItems(textItems, textStyles);\n            capability.resolve();\n          } else if (this._textContentStream) {\n            const pump = () => {\n              this._reader.read().then(_ref21 => {\n                let {\n                  value,\n                  done\n                } = _ref21;\n                if (done) {\n                  capability.resolve();\n                  return;\n                }\n                Object.assign(styleCache, value.styles);\n                this._processItems(value.items, styleCache);\n                pump();\n              }, capability.reject);\n            };\n            this._reader = this._textContentStream.getReader();\n            pump();\n          } else {\n            throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n          }\n          capability.promise.then(() => {\n            styleCache = null;\n            if (!timeout) {\n              render(this);\n            } else {\n              this._renderTimer = setTimeout(() => {\n                render(this);\n                this._renderTimer = null;\n              }, timeout);\n            }\n          }, this._capability.reject);\n        },\n        expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n          if (!this._enhanceTextSelection || !this._renderingDone) {\n            return;\n          }\n          if (this._bounds !== null) {\n            expand(this);\n            this._bounds = null;\n          }\n          const transformBuf = [],\n            paddingBuf = [];\n          for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n            const div = this._textDivs[i];\n            const divProps = this._textDivProperties.get(div);\n            if (divProps.isWhitespace) {\n              continue;\n            }\n            if (expandDivs) {\n              transformBuf.length = 0;\n              paddingBuf.length = 0;\n              if (divProps.originalTransform) {\n                transformBuf.push(divProps.originalTransform);\n              }\n              if (divProps.paddingTop > 0) {\n                paddingBuf.push(`${divProps.paddingTop}px`);\n                transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingRight > 0) {\n                paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingBottom > 0) {\n                paddingBuf.push(`${divProps.paddingBottom}px`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingLeft > 0) {\n                paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n              } else {\n                paddingBuf.push(0);\n              }\n              div.style.padding = paddingBuf.join(\" \");\n              if (transformBuf.length) {\n                div.style.transform = transformBuf.join(\" \");\n              }\n            } else {\n              div.style.padding = null;\n              div.style.transform = divProps.originalTransform;\n            }\n          }\n        }\n      };\n      function renderTextLayer(renderParameters) {\n        var task = new TextLayerRenderTask({\n          textContent: renderParameters.textContent,\n          textContentStream: renderParameters.textContentStream,\n          container: renderParameters.container,\n          viewport: renderParameters.viewport,\n          textDivs: renderParameters.textDivs,\n          textContentItemsStr: renderParameters.textContentItemsStr,\n          enhanceTextSelection: renderParameters.enhanceTextSelection\n        });\n        task._render(renderParameters.timeout);\n        return task;\n      }\n      return renderTextLayer;\n    }();\n    exports.renderTextLayer = renderTextLayer;\n\n    /***/\n  }), ( /* 18 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.SVGGraphics = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _display_utils = __w_pdfjs_require__(1);\n    var _is_node = __w_pdfjs_require__(4);\n    let SVGGraphics = function () {\n      throw new Error(\"Not implemented: SVGGraphics\");\n    };\n    exports.SVGGraphics = SVGGraphics;\n    {\n      const SVG_DEFAULTS = {\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fillColor: \"#000000\"\n      };\n      const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n      const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n      const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      const convertImgDataToPng = function () {\n        const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n        const CHUNK_WRAPPER_SIZE = 12;\n        const crcTable = new Int32Array(256);\n        for (let i = 0; i < 256; i++) {\n          let c = i;\n          for (let h = 0; h < 8; h++) {\n            if (c & 1) {\n              c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n            } else {\n              c = c >> 1 & 0x7fffffff;\n            }\n          }\n          crcTable[i] = c;\n        }\n        function crc32(data, start, end) {\n          let crc = -1;\n          for (let i = start; i < end; i++) {\n            const a = (crc ^ data[i]) & 0xff;\n            const b = crcTable[a];\n            crc = crc >>> 8 ^ b;\n          }\n          return crc ^ -1;\n        }\n        function writePngChunk(type, body, data, offset) {\n          let p = offset;\n          const len = body.length;\n          data[p] = len >> 24 & 0xff;\n          data[p + 1] = len >> 16 & 0xff;\n          data[p + 2] = len >> 8 & 0xff;\n          data[p + 3] = len & 0xff;\n          p += 4;\n          data[p] = type.charCodeAt(0) & 0xff;\n          data[p + 1] = type.charCodeAt(1) & 0xff;\n          data[p + 2] = type.charCodeAt(2) & 0xff;\n          data[p + 3] = type.charCodeAt(3) & 0xff;\n          p += 4;\n          data.set(body, p);\n          p += body.length;\n          const crc = crc32(data, offset + 4, p);\n          data[p] = crc >> 24 & 0xff;\n          data[p + 1] = crc >> 16 & 0xff;\n          data[p + 2] = crc >> 8 & 0xff;\n          data[p + 3] = crc & 0xff;\n        }\n        function adler32(data, start, end) {\n          let a = 1;\n          let b = 0;\n          for (let i = start; i < end; ++i) {\n            a = (a + (data[i] & 0xff)) % 65521;\n            b = (b + a) % 65521;\n          }\n          return b << 16 | a;\n        }\n        function deflateSync(literals) {\n          if (!_is_node.isNodeJS) {\n            return deflateSyncUncompressed(literals);\n          }\n          try {\n            let input;\n            if (parseInt(process.versions.node) >= 8) {\n              input = literals;\n            } else {\n              input = Buffer.from(literals);\n            }\n            const output = require(\"zlib\").deflateSync(input, {\n              level: 9\n            });\n            return output instanceof Uint8Array ? output : new Uint8Array(output);\n          } catch (e) {\n            (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n          }\n          return deflateSyncUncompressed(literals);\n        }\n        function deflateSyncUncompressed(literals) {\n          let len = literals.length;\n          const maxBlockLength = 0xffff;\n          const deflateBlocks = Math.ceil(len / maxBlockLength);\n          const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n          let pi = 0;\n          idat[pi++] = 0x78;\n          idat[pi++] = 0x9c;\n          let pos = 0;\n          while (len > maxBlockLength) {\n            idat[pi++] = 0x00;\n            idat[pi++] = 0xff;\n            idat[pi++] = 0xff;\n            idat[pi++] = 0x00;\n            idat[pi++] = 0x00;\n            idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n            pi += maxBlockLength;\n            pos += maxBlockLength;\n            len -= maxBlockLength;\n          }\n          idat[pi++] = 0x01;\n          idat[pi++] = len & 0xff;\n          idat[pi++] = len >> 8 & 0xff;\n          idat[pi++] = ~len & 0xffff & 0xff;\n          idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n          idat.set(literals.subarray(pos), pi);\n          pi += literals.length - pos;\n          const adler = adler32(literals, 0, literals.length);\n          idat[pi++] = adler >> 24 & 0xff;\n          idat[pi++] = adler >> 16 & 0xff;\n          idat[pi++] = adler >> 8 & 0xff;\n          idat[pi++] = adler & 0xff;\n          return idat;\n        }\n        function encode(imgData, kind, forceDataSchema, isMask) {\n          const width = imgData.width;\n          const height = imgData.height;\n          let bitDepth, colorType, lineSize;\n          const bytes = imgData.data;\n          switch (kind) {\n            case _util.ImageKind.GRAYSCALE_1BPP:\n              colorType = 0;\n              bitDepth = 1;\n              lineSize = width + 7 >> 3;\n              break;\n            case _util.ImageKind.RGB_24BPP:\n              colorType = 2;\n              bitDepth = 8;\n              lineSize = width * 3;\n              break;\n            case _util.ImageKind.RGBA_32BPP:\n              colorType = 6;\n              bitDepth = 8;\n              lineSize = width * 4;\n              break;\n            default:\n              throw new Error(\"invalid format\");\n          }\n          const literals = new Uint8Array((1 + lineSize) * height);\n          let offsetLiterals = 0,\n            offsetBytes = 0;\n          for (let y = 0; y < height; ++y) {\n            literals[offsetLiterals++] = 0;\n            literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n            offsetBytes += lineSize;\n            offsetLiterals += lineSize;\n          }\n          if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n            offsetLiterals = 0;\n            for (let y = 0; y < height; y++) {\n              offsetLiterals++;\n              for (let i = 0; i < lineSize; i++) {\n                literals[offsetLiterals++] ^= 0xff;\n              }\n            }\n          }\n          const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n          const idat = deflateSync(literals);\n          const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n          const data = new Uint8Array(pngLength);\n          let offset = 0;\n          data.set(PNG_HEADER, offset);\n          offset += PNG_HEADER.length;\n          writePngChunk(\"IHDR\", ihdr, data, offset);\n          offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n          writePngChunk(\"IDATA\", idat, data, offset);\n          offset += CHUNK_WRAPPER_SIZE + idat.length;\n          writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n          return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n        }\n        return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n          const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n          return encode(imgData, kind, forceDataSchema, isMask);\n        };\n      }();\n      class SVGExtraState {\n        constructor() {\n          this.fontSizeScale = 1;\n          this.fontWeight = SVG_DEFAULTS.fontWeight;\n          this.fontSize = 0;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textMatrixScale = 1;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRise = 0;\n          this.fillColor = SVG_DEFAULTS.fillColor;\n          this.strokeColor = \"#000000\";\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.lineJoin = \"\";\n          this.lineCap = \"\";\n          this.miterLimit = 0;\n          this.dashArray = [];\n          this.dashPhase = 0;\n          this.dependencies = [];\n          this.activeClipUrl = null;\n          this.clipGroup = null;\n          this.maskId = \"\";\n        }\n        clone() {\n          return Object.create(this);\n        }\n        setCurrentPoint(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n      }\n      function opListToTree(opList) {\n        let opTree = [];\n        const tmp = [];\n        for (const opListElement of opList) {\n          if (opListElement.fn === \"save\") {\n            opTree.push({\n              fnId: 92,\n              fn: \"group\",\n              items: []\n            });\n            tmp.push(opTree);\n            opTree = opTree[opTree.length - 1].items;\n            continue;\n          }\n          if (opListElement.fn === \"restore\") {\n            opTree = tmp.pop();\n          } else {\n            opTree.push(opListElement);\n          }\n        }\n        return opTree;\n      }\n      function pf(value) {\n        if (Number.isInteger(value)) {\n          return value.toString();\n        }\n        const s = value.toFixed(10);\n        let i = s.length - 1;\n        if (s[i] !== \"0\") {\n          return s;\n        }\n        do {\n          i--;\n        } while (s[i] === \"0\");\n        return s.substring(0, s[i] === \".\" ? i : i + 1);\n      }\n      function pm(m) {\n        if (m[4] === 0 && m[5] === 0) {\n          if (m[1] === 0 && m[2] === 0) {\n            if (m[0] === 1 && m[3] === 1) {\n              return \"\";\n            }\n            return `scale(${pf(m[0])} ${pf(m[3])})`;\n          }\n          if (m[0] === m[3] && m[1] === -m[2]) {\n            const a = Math.acos(m[0]) * 180 / Math.PI;\n            return `rotate(${pf(a)})`;\n          }\n        } else {\n          if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n            return `translate(${pf(m[4])} ${pf(m[5])})`;\n          }\n        }\n        return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n      }\n      let clipCount = 0;\n      let maskCount = 0;\n      let shadingCount = 0;\n      exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n        constructor(commonObjs, objs) {\n          let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this.svgFactory = new _display_utils.DOMSVGFactory();\n          this.current = new SVGExtraState();\n          this.transformMatrix = _util.IDENTITY_MATRIX;\n          this.transformStack = [];\n          this.extraStack = [];\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.embedFonts = false;\n          this.embeddedFonts = Object.create(null);\n          this.cssStyle = null;\n          this.forceDataSchema = !!forceDataSchema;\n          this._operatorIdMapping = [];\n          for (const op in _util.OPS) {\n            this._operatorIdMapping[_util.OPS[op]] = op;\n          }\n        }\n        save() {\n          this.transformStack.push(this.transformMatrix);\n          const old = this.current;\n          this.extraStack.push(old);\n          this.current = old.clone();\n        }\n        restore() {\n          this.transformMatrix = this.transformStack.pop();\n          this.current = this.extraStack.pop();\n          this.pendingClip = null;\n          this.tgrp = null;\n        }\n        group(items) {\n          this.save();\n          this.executeOpTree(items);\n          this.restore();\n        }\n        loadDependencies(operatorList) {\n          const fnArray = operatorList.fnArray;\n          const argsArray = operatorList.argsArray;\n          for (let i = 0, ii = fnArray.length; i < ii; i++) {\n            if (fnArray[i] !== _util.OPS.dependency) {\n              continue;\n            }\n            for (const obj of argsArray[i]) {\n              const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n              const promise = new Promise(resolve => {\n                objsPool.get(obj, resolve);\n              });\n              this.current.dependencies.push(promise);\n            }\n          }\n          return Promise.all(this.current.dependencies);\n        }\n        transform(a, b, c, d, e, f) {\n          const transformMatrix = [a, b, c, d, e, f];\n          this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n          this.tgrp = null;\n        }\n        getSVG(operatorList, viewport) {\n          this.viewport = viewport;\n          const svgElement = this._initialize(viewport);\n          return this.loadDependencies(operatorList).then(() => {\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.executeOpTree(this.convertOpList(operatorList));\n            return svgElement;\n          });\n        }\n        convertOpList(operatorList) {\n          const operatorIdMapping = this._operatorIdMapping;\n          const argsArray = operatorList.argsArray;\n          const fnArray = operatorList.fnArray;\n          const opList = [];\n          for (let i = 0, ii = fnArray.length; i < ii; i++) {\n            const fnId = fnArray[i];\n            opList.push({\n              fnId,\n              fn: operatorIdMapping[fnId],\n              args: argsArray[i]\n            });\n          }\n          return opListToTree(opList);\n        }\n        executeOpTree(opTree) {\n          for (const opTreeElement of opTree) {\n            const fn = opTreeElement.fn;\n            const fnId = opTreeElement.fnId;\n            const args = opTreeElement.args;\n            switch (fnId | 0) {\n              case _util.OPS.beginText:\n                this.beginText();\n                break;\n              case _util.OPS.dependency:\n                break;\n              case _util.OPS.setLeading:\n                this.setLeading(args);\n                break;\n              case _util.OPS.setLeadingMoveText:\n                this.setLeadingMoveText(args[0], args[1]);\n                break;\n              case _util.OPS.setFont:\n                this.setFont(args);\n                break;\n              case _util.OPS.showText:\n                this.showText(args[0]);\n                break;\n              case _util.OPS.showSpacedText:\n                this.showText(args[0]);\n                break;\n              case _util.OPS.endText:\n                this.endText();\n                break;\n              case _util.OPS.moveText:\n                this.moveText(args[0], args[1]);\n                break;\n              case _util.OPS.setCharSpacing:\n                this.setCharSpacing(args[0]);\n                break;\n              case _util.OPS.setWordSpacing:\n                this.setWordSpacing(args[0]);\n                break;\n              case _util.OPS.setHScale:\n                this.setHScale(args[0]);\n                break;\n              case _util.OPS.setTextMatrix:\n                this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                break;\n              case _util.OPS.setTextRise:\n                this.setTextRise(args[0]);\n                break;\n              case _util.OPS.setTextRenderingMode:\n                this.setTextRenderingMode(args[0]);\n                break;\n              case _util.OPS.setLineWidth:\n                this.setLineWidth(args[0]);\n                break;\n              case _util.OPS.setLineJoin:\n                this.setLineJoin(args[0]);\n                break;\n              case _util.OPS.setLineCap:\n                this.setLineCap(args[0]);\n                break;\n              case _util.OPS.setMiterLimit:\n                this.setMiterLimit(args[0]);\n                break;\n              case _util.OPS.setFillRGBColor:\n                this.setFillRGBColor(args[0], args[1], args[2]);\n                break;\n              case _util.OPS.setStrokeRGBColor:\n                this.setStrokeRGBColor(args[0], args[1], args[2]);\n                break;\n              case _util.OPS.setStrokeColorN:\n                this.setStrokeColorN(args);\n                break;\n              case _util.OPS.setFillColorN:\n                this.setFillColorN(args);\n                break;\n              case _util.OPS.shadingFill:\n                this.shadingFill(args[0]);\n                break;\n              case _util.OPS.setDash:\n                this.setDash(args[0], args[1]);\n                break;\n              case _util.OPS.setRenderingIntent:\n                this.setRenderingIntent(args[0]);\n                break;\n              case _util.OPS.setFlatness:\n                this.setFlatness(args[0]);\n                break;\n              case _util.OPS.setGState:\n                this.setGState(args[0]);\n                break;\n              case _util.OPS.fill:\n                this.fill();\n                break;\n              case _util.OPS.eoFill:\n                this.eoFill();\n                break;\n              case _util.OPS.stroke:\n                this.stroke();\n                break;\n              case _util.OPS.fillStroke:\n                this.fillStroke();\n                break;\n              case _util.OPS.eoFillStroke:\n                this.eoFillStroke();\n                break;\n              case _util.OPS.clip:\n                this.clip(\"nonzero\");\n                break;\n              case _util.OPS.eoClip:\n                this.clip(\"evenodd\");\n                break;\n              case _util.OPS.paintSolidColorImageMask:\n                this.paintSolidColorImageMask();\n                break;\n              case _util.OPS.paintImageXObject:\n                this.paintImageXObject(args[0]);\n                break;\n              case _util.OPS.paintInlineImageXObject:\n                this.paintInlineImageXObject(args[0]);\n                break;\n              case _util.OPS.paintImageMaskXObject:\n                this.paintImageMaskXObject(args[0]);\n                break;\n              case _util.OPS.paintFormXObjectBegin:\n                this.paintFormXObjectBegin(args[0], args[1]);\n                break;\n              case _util.OPS.paintFormXObjectEnd:\n                this.paintFormXObjectEnd();\n                break;\n              case _util.OPS.closePath:\n                this.closePath();\n                break;\n              case _util.OPS.closeStroke:\n                this.closeStroke();\n                break;\n              case _util.OPS.closeFillStroke:\n                this.closeFillStroke();\n                break;\n              case _util.OPS.closeEOFillStroke:\n                this.closeEOFillStroke();\n                break;\n              case _util.OPS.nextLine:\n                this.nextLine();\n                break;\n              case _util.OPS.transform:\n                this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                break;\n              case _util.OPS.constructPath:\n                this.constructPath(args[0], args[1]);\n                break;\n              case _util.OPS.endPath:\n                this.endPath();\n                break;\n              case 92:\n                this.group(opTreeElement.items);\n                break;\n              default:\n                (0, _util.warn)(`Unimplemented operator ${fn}`);\n                break;\n            }\n          }\n        }\n        setWordSpacing(wordSpacing) {\n          this.current.wordSpacing = wordSpacing;\n        }\n        setCharSpacing(charSpacing) {\n          this.current.charSpacing = charSpacing;\n        }\n        nextLine() {\n          this.moveText(0, this.current.leading);\n        }\n        setTextMatrix(a, b, c, d, e, f) {\n          const current = this.current;\n          current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n          current.textMatrixScale = Math.sqrt(a * a + b * b);\n          current.x = current.lineX = 0;\n          current.y = current.lineY = 0;\n          current.xcoords = [];\n          current.ycoords = [];\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n          current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          current.txtElement = this.svgFactory.createElement(\"svg:text\");\n          current.txtElement.appendChild(current.tspan);\n        }\n        beginText() {\n          const current = this.current;\n          current.x = current.lineX = 0;\n          current.y = current.lineY = 0;\n          current.textMatrix = _util.IDENTITY_MATRIX;\n          current.lineMatrix = _util.IDENTITY_MATRIX;\n          current.textMatrixScale = 1;\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.txtElement = this.svgFactory.createElement(\"svg:text\");\n          current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n          current.xcoords = [];\n          current.ycoords = [];\n        }\n        moveText(x, y) {\n          const current = this.current;\n          current.x = current.lineX += x;\n          current.y = current.lineY += y;\n          current.xcoords = [];\n          current.ycoords = [];\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n          current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        }\n        showText(glyphs) {\n          const current = this.current;\n          const font = current.font;\n          const fontSize = current.fontSize;\n          if (fontSize === 0) {\n            return;\n          }\n          const fontSizeScale = current.fontSizeScale;\n          const charSpacing = current.charSpacing;\n          const wordSpacing = current.wordSpacing;\n          const fontDirection = current.fontDirection;\n          const textHScale = current.textHScale * fontDirection;\n          const vertical = font.vertical;\n          const spacingDir = vertical ? 1 : -1;\n          const defaultVMetrics = font.defaultVMetrics;\n          const widthAdvanceScale = fontSize * current.fontMatrix[0];\n          let x = 0;\n          for (const glyph of glyphs) {\n            if (glyph === null) {\n              x += fontDirection * wordSpacing;\n              continue;\n            } else if ((0, _util.isNum)(glyph)) {\n              x += spacingDir * glyph * fontSize / 1000;\n              continue;\n            }\n            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            const character = glyph.fontChar;\n            let scaledX, scaledY;\n            let width = glyph.width;\n            if (vertical) {\n              let vx;\n              const vmetric = glyph.vmetric || defaultVMetrics;\n              vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n              vx = -vx * widthAdvanceScale;\n              const vy = vmetric[2] * widthAdvanceScale;\n              width = vmetric ? -vmetric[0] : width;\n              scaledX = vx / fontSizeScale;\n              scaledY = (x + vy) / fontSizeScale;\n            } else {\n              scaledX = x / fontSizeScale;\n              scaledY = 0;\n            }\n            if (glyph.isInFont || font.missingFile) {\n              current.xcoords.push(current.x + scaledX);\n              if (vertical) {\n                current.ycoords.push(-current.y + scaledY);\n              }\n              current.tspan.textContent += character;\n            } else {}\n            let charWidth;\n            if (vertical) {\n              charWidth = width * widthAdvanceScale - spacing * fontDirection;\n            } else {\n              charWidth = width * widthAdvanceScale + spacing * fontDirection;\n            }\n            x += charWidth;\n          }\n          current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n          if (vertical) {\n            current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n          } else {\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n          if (vertical) {\n            current.y -= x;\n          } else {\n            current.x += x * textHScale;\n          }\n          current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n          current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n          if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n            current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n          }\n          if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n            current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n          }\n          const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n              current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n            }\n            if (current.fillAlpha < 1) {\n              current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n            }\n          } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n            current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n          } else {\n            current.tspan.setAttributeNS(null, \"fill\", \"none\");\n          }\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            const lineWidthScale = 1 / (current.textMatrixScale || 1);\n            this._setStrokeAttributes(current.tspan, lineWidthScale);\n          }\n          let textMatrix = current.textMatrix;\n          if (current.textRise !== 0) {\n            textMatrix = textMatrix.slice();\n            textMatrix[5] += current.textRise;\n          }\n          current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n          current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n          current.txtElement.appendChild(current.tspan);\n          current.txtgrp.appendChild(current.txtElement);\n          this._ensureTransformGroup().appendChild(current.txtElement);\n        }\n        setLeadingMoveText(x, y) {\n          this.setLeading(-y);\n          this.moveText(x, y);\n        }\n        addFontStyle(fontObj) {\n          if (!fontObj.data) {\n            throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n          }\n          if (!this.cssStyle) {\n            this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n            this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n            this.defs.appendChild(this.cssStyle);\n          }\n          const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n          this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n        }\n        setFont(details) {\n          const current = this.current;\n          const fontObj = this.commonObjs.get(details[0]);\n          let size = details[1];\n          current.font = fontObj;\n          if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n            this.addFontStyle(fontObj);\n            this.embeddedFonts[fontObj.loadedName] = fontObj;\n          }\n          current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n          let bold = \"normal\";\n          if (fontObj.black) {\n            bold = \"900\";\n          } else if (fontObj.bold) {\n            bold = \"bold\";\n          }\n          const italic = fontObj.italic ? \"italic\" : \"normal\";\n          if (size < 0) {\n            size = -size;\n            current.fontDirection = -1;\n          } else {\n            current.fontDirection = 1;\n          }\n          current.fontSize = size;\n          current.fontFamily = fontObj.loadedName;\n          current.fontWeight = bold;\n          current.fontStyle = italic;\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          current.xcoords = [];\n          current.ycoords = [];\n        }\n        endText() {\n          const current = this.current;\n          if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n            current.element = current.txtElement;\n            this.clip(\"nonzero\");\n            this.endPath();\n          }\n        }\n        setLineWidth(width) {\n          if (width > 0) {\n            this.current.lineWidth = width;\n          }\n        }\n        setLineCap(style) {\n          this.current.lineCap = LINE_CAP_STYLES[style];\n        }\n        setLineJoin(style) {\n          this.current.lineJoin = LINE_JOIN_STYLES[style];\n        }\n        setMiterLimit(limit) {\n          this.current.miterLimit = limit;\n        }\n        setStrokeAlpha(strokeAlpha) {\n          this.current.strokeAlpha = strokeAlpha;\n        }\n        setStrokeRGBColor(r, g, b) {\n          this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n        }\n        setFillAlpha(fillAlpha) {\n          this.current.fillAlpha = fillAlpha;\n        }\n        setFillRGBColor(r, g, b) {\n          this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n          this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          this.current.xcoords = [];\n          this.current.ycoords = [];\n        }\n        setStrokeColorN(args) {\n          this.current.strokeColor = this._makeColorN_Pattern(args);\n        }\n        setFillColorN(args) {\n          this.current.fillColor = this._makeColorN_Pattern(args);\n        }\n        shadingFill(args) {\n          const width = this.viewport.width;\n          const height = this.viewport.height;\n          const inv = _util.Util.inverseTransform(this.transformMatrix);\n          const bl = _util.Util.applyTransform([0, 0], inv);\n          const br = _util.Util.applyTransform([0, height], inv);\n          const ul = _util.Util.applyTransform([width, 0], inv);\n          const ur = _util.Util.applyTransform([width, height], inv);\n          const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n          const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n          const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n          const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n          const rect = this.svgFactory.createElement(\"svg:rect\");\n          rect.setAttributeNS(null, \"x\", x0);\n          rect.setAttributeNS(null, \"y\", y0);\n          rect.setAttributeNS(null, \"width\", x1 - x0);\n          rect.setAttributeNS(null, \"height\", y1 - y0);\n          rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n          if (this.current.fillAlpha < 1) {\n            rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n          }\n          this._ensureTransformGroup().appendChild(rect);\n        }\n        _makeColorN_Pattern(args) {\n          if (args[0] === \"TilingPattern\") {\n            return this._makeTilingPattern(args);\n          }\n          return this._makeShadingPattern(args);\n        }\n        _makeTilingPattern(args) {\n          const color = args[1];\n          const operatorList = args[2];\n          const matrix = args[3] || _util.IDENTITY_MATRIX;\n          const [x0, y0, x1, y1] = args[4];\n          const xstep = args[5];\n          const ystep = args[6];\n          const paintType = args[7];\n          const tilingId = `shading${shadingCount++}`;\n          const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n          const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n          const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n          const txstep = xstep * xscale;\n          const tystep = ystep * yscale;\n          const tiling = this.svgFactory.createElement(\"svg:pattern\");\n          tiling.setAttributeNS(null, \"id\", tilingId);\n          tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n          tiling.setAttributeNS(null, \"width\", txstep);\n          tiling.setAttributeNS(null, \"height\", tystep);\n          tiling.setAttributeNS(null, \"x\", `${tx0}`);\n          tiling.setAttributeNS(null, \"y\", `${ty0}`);\n          const svg = this.svg;\n          const transformMatrix = this.transformMatrix;\n          const fillColor = this.current.fillColor;\n          const strokeColor = this.current.strokeColor;\n          const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n          this.svg = bbox;\n          this.transformMatrix = matrix;\n          if (paintType === 2) {\n            const cssColor = _util.Util.makeCssRgb(...color);\n            this.current.fillColor = cssColor;\n            this.current.strokeColor = cssColor;\n          }\n          this.executeOpTree(this.convertOpList(operatorList));\n          this.svg = svg;\n          this.transformMatrix = transformMatrix;\n          this.current.fillColor = fillColor;\n          this.current.strokeColor = strokeColor;\n          tiling.appendChild(bbox.childNodes[0]);\n          this.defs.appendChild(tiling);\n          return `url(#${tilingId})`;\n        }\n        _makeShadingPattern(args) {\n          switch (args[0]) {\n            case \"RadialAxial\":\n              const shadingId = `shading${shadingCount++}`;\n              const colorStops = args[3];\n              let gradient;\n              switch (args[1]) {\n                case \"axial\":\n                  const point0 = args[4];\n                  const point1 = args[5];\n                  gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                  gradient.setAttributeNS(null, \"id\", shadingId);\n                  gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                  gradient.setAttributeNS(null, \"x1\", point0[0]);\n                  gradient.setAttributeNS(null, \"y1\", point0[1]);\n                  gradient.setAttributeNS(null, \"x2\", point1[0]);\n                  gradient.setAttributeNS(null, \"y2\", point1[1]);\n                  break;\n                case \"radial\":\n                  const focalPoint = args[4];\n                  const circlePoint = args[5];\n                  const focalRadius = args[6];\n                  const circleRadius = args[7];\n                  gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                  gradient.setAttributeNS(null, \"id\", shadingId);\n                  gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                  gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                  gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                  gradient.setAttributeNS(null, \"r\", circleRadius);\n                  gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                  gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                  gradient.setAttributeNS(null, \"fr\", focalRadius);\n                  break;\n                default:\n                  throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n              }\n              for (const colorStop of colorStops) {\n                const stop = this.svgFactory.createElement(\"svg:stop\");\n                stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                gradient.appendChild(stop);\n              }\n              this.defs.appendChild(gradient);\n              return `url(#${shadingId})`;\n            case \"Mesh\":\n              (0, _util.warn)(\"Unimplemented pattern Mesh\");\n              return null;\n            case \"Dummy\":\n              return \"hotpink\";\n            default:\n              throw new Error(`Unknown IR type: ${args[0]}`);\n          }\n        }\n        setDash(dashArray, dashPhase) {\n          this.current.dashArray = dashArray;\n          this.current.dashPhase = dashPhase;\n        }\n        constructPath(ops, args) {\n          const current = this.current;\n          let x = current.x,\n            y = current.y;\n          let d = [];\n          let j = 0;\n          for (const op of ops) {\n            switch (op | 0) {\n              case _util.OPS.rectangle:\n                x = args[j++];\n                y = args[j++];\n                const width = args[j++];\n                const height = args[j++];\n                const xw = x + width;\n                const yh = y + height;\n                d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                break;\n              case _util.OPS.moveTo:\n                x = args[j++];\n                y = args[j++];\n                d.push(\"M\", pf(x), pf(y));\n                break;\n              case _util.OPS.lineTo:\n                x = args[j++];\n                y = args[j++];\n                d.push(\"L\", pf(x), pf(y));\n                break;\n              case _util.OPS.curveTo:\n                x = args[j + 4];\n                y = args[j + 5];\n                d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                j += 6;\n                break;\n              case _util.OPS.curveTo2:\n                d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                x = args[j + 2];\n                y = args[j + 3];\n                j += 4;\n                break;\n              case _util.OPS.curveTo3:\n                x = args[j + 2];\n                y = args[j + 3];\n                d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                j += 4;\n                break;\n              case _util.OPS.closePath:\n                d.push(\"Z\");\n                break;\n            }\n          }\n          d = d.join(\" \");\n          if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n            d = current.path.getAttributeNS(null, \"d\") + d;\n          } else {\n            current.path = this.svgFactory.createElement(\"svg:path\");\n            this._ensureTransformGroup().appendChild(current.path);\n          }\n          current.path.setAttributeNS(null, \"d\", d);\n          current.path.setAttributeNS(null, \"fill\", \"none\");\n          current.element = current.path;\n          current.setCurrentPoint(x, y);\n        }\n        endPath() {\n          const current = this.current;\n          current.path = null;\n          if (!this.pendingClip) {\n            return;\n          }\n          if (!current.element) {\n            this.pendingClip = null;\n            return;\n          }\n          const clipId = `clippath${clipCount++}`;\n          const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n          clipPath.setAttributeNS(null, \"id\", clipId);\n          clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n          const clipElement = current.element.cloneNode(true);\n          if (this.pendingClip === \"evenodd\") {\n            clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n          } else {\n            clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n          }\n          this.pendingClip = null;\n          clipPath.appendChild(clipElement);\n          this.defs.appendChild(clipPath);\n          if (current.activeClipUrl) {\n            current.clipGroup = null;\n            this.extraStack.forEach(function (prev) {\n              prev.clipGroup = null;\n            });\n            clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n          }\n          current.activeClipUrl = `url(#${clipId})`;\n          this.tgrp = null;\n        }\n        clip(type) {\n          this.pendingClip = type;\n        }\n        closePath() {\n          const current = this.current;\n          if (current.path) {\n            const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n            current.path.setAttributeNS(null, \"d\", d);\n          }\n        }\n        setLeading(leading) {\n          this.current.leading = -leading;\n        }\n        setTextRise(textRise) {\n          this.current.textRise = textRise;\n        }\n        setTextRenderingMode(textRenderingMode) {\n          this.current.textRenderingMode = textRenderingMode;\n        }\n        setHScale(scale) {\n          this.current.textHScale = scale / 100;\n        }\n        setRenderingIntent(intent) {}\n        setFlatness(flatness) {}\n        setGState(states) {\n          for (const [key, value] of states) {\n            switch (key) {\n              case \"LW\":\n                this.setLineWidth(value);\n                break;\n              case \"LC\":\n                this.setLineCap(value);\n                break;\n              case \"LJ\":\n                this.setLineJoin(value);\n                break;\n              case \"ML\":\n                this.setMiterLimit(value);\n                break;\n              case \"D\":\n                this.setDash(value[0], value[1]);\n                break;\n              case \"RI\":\n                this.setRenderingIntent(value);\n                break;\n              case \"FL\":\n                this.setFlatness(value);\n                break;\n              case \"Font\":\n                this.setFont(value);\n                break;\n              case \"CA\":\n                this.setStrokeAlpha(value);\n                break;\n              case \"ca\":\n                this.setFillAlpha(value);\n                break;\n              default:\n                (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                break;\n            }\n          }\n        }\n        fill() {\n          const current = this.current;\n          if (current.element) {\n            current.element.setAttributeNS(null, \"fill\", current.fillColor);\n            current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n            this.endPath();\n          }\n        }\n        stroke() {\n          const current = this.current;\n          if (current.element) {\n            this._setStrokeAttributes(current.element);\n            current.element.setAttributeNS(null, \"fill\", \"none\");\n            this.endPath();\n          }\n        }\n        _setStrokeAttributes(element) {\n          let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n          const current = this.current;\n          let dashArray = current.dashArray;\n          if (lineWidthScale !== 1 && dashArray.length > 0) {\n            dashArray = dashArray.map(function (value) {\n              return lineWidthScale * value;\n            });\n          }\n          element.setAttributeNS(null, \"stroke\", current.strokeColor);\n          element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n          element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n          element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n          element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n          element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n          element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n          element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n        }\n        eoFill() {\n          if (this.current.element) {\n            this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n          }\n          this.fill();\n        }\n        fillStroke() {\n          this.stroke();\n          this.fill();\n        }\n        eoFillStroke() {\n          if (this.current.element) {\n            this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n          }\n          this.fillStroke();\n        }\n        closeStroke() {\n          this.closePath();\n          this.stroke();\n        }\n        closeFillStroke() {\n          this.closePath();\n          this.fillStroke();\n        }\n        closeEOFillStroke() {\n          this.closePath();\n          this.eoFillStroke();\n        }\n        paintSolidColorImageMask() {\n          const rect = this.svgFactory.createElement(\"svg:rect\");\n          rect.setAttributeNS(null, \"x\", \"0\");\n          rect.setAttributeNS(null, \"y\", \"0\");\n          rect.setAttributeNS(null, \"width\", \"1px\");\n          rect.setAttributeNS(null, \"height\", \"1px\");\n          rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n          this._ensureTransformGroup().appendChild(rect);\n        }\n        paintImageXObject(objId) {\n          const imgData = this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n            return;\n          }\n          this.paintInlineImageXObject(imgData);\n        }\n        paintInlineImageXObject(imgData, mask) {\n          const width = imgData.width;\n          const height = imgData.height;\n          const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n          const cliprect = this.svgFactory.createElement(\"svg:rect\");\n          cliprect.setAttributeNS(null, \"x\", \"0\");\n          cliprect.setAttributeNS(null, \"y\", \"0\");\n          cliprect.setAttributeNS(null, \"width\", pf(width));\n          cliprect.setAttributeNS(null, \"height\", pf(height));\n          this.current.element = cliprect;\n          this.clip(\"nonzero\");\n          const imgEl = this.svgFactory.createElement(\"svg:image\");\n          imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n          imgEl.setAttributeNS(null, \"x\", \"0\");\n          imgEl.setAttributeNS(null, \"y\", pf(-height));\n          imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n          imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n          imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n          if (mask) {\n            mask.appendChild(imgEl);\n          } else {\n            this._ensureTransformGroup().appendChild(imgEl);\n          }\n        }\n        paintImageMaskXObject(imgData) {\n          const current = this.current;\n          const width = imgData.width;\n          const height = imgData.height;\n          const fillColor = current.fillColor;\n          current.maskId = `mask${maskCount++}`;\n          const mask = this.svgFactory.createElement(\"svg:mask\");\n          mask.setAttributeNS(null, \"id\", current.maskId);\n          const rect = this.svgFactory.createElement(\"svg:rect\");\n          rect.setAttributeNS(null, \"x\", \"0\");\n          rect.setAttributeNS(null, \"y\", \"0\");\n          rect.setAttributeNS(null, \"width\", pf(width));\n          rect.setAttributeNS(null, \"height\", pf(height));\n          rect.setAttributeNS(null, \"fill\", fillColor);\n          rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n          this.defs.appendChild(mask);\n          this._ensureTransformGroup().appendChild(rect);\n          this.paintInlineImageXObject(imgData, mask);\n        }\n        paintFormXObjectBegin(matrix, bbox) {\n          if (Array.isArray(matrix) && matrix.length === 6) {\n            this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n          }\n          if (bbox) {\n            const width = bbox[2] - bbox[0];\n            const height = bbox[3] - bbox[1];\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", bbox[0]);\n            cliprect.setAttributeNS(null, \"y\", bbox[1]);\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            this.endPath();\n          }\n        }\n        paintFormXObjectEnd() {}\n        _initialize(viewport) {\n          const svg = this.svgFactory.create(viewport.width, viewport.height);\n          const definitions = this.svgFactory.createElement(\"svg:defs\");\n          svg.appendChild(definitions);\n          this.defs = definitions;\n          const rootGroup = this.svgFactory.createElement(\"svg:g\");\n          rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n          svg.appendChild(rootGroup);\n          this.svg = rootGroup;\n          return svg;\n        }\n        _ensureClipGroup() {\n          if (!this.current.clipGroup) {\n            const clipGroup = this.svgFactory.createElement(\"svg:g\");\n            clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n            this.svg.appendChild(clipGroup);\n            this.current.clipGroup = clipGroup;\n          }\n          return this.current.clipGroup;\n        }\n        _ensureTransformGroup() {\n          if (!this.tgrp) {\n            this.tgrp = this.svgFactory.createElement(\"svg:g\");\n            this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            if (this.current.activeClipUrl) {\n              this._ensureClipGroup().appendChild(this.tgrp);\n            } else {\n              this.svg.appendChild(this.tgrp);\n            }\n          }\n          return this.tgrp;\n        }\n      };\n    }\n\n    /***/\n  }), ( /* 19 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFNodeStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    const fs = require(\"fs\");\n    const http = require(\"http\");\n    const https = require(\"https\");\n    const url = require(\"url\");\n    const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n    function parseUrl(sourceUrl) {\n      const parsedUrl = url.parse(sourceUrl);\n      if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n        return parsedUrl;\n      }\n      if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n        return url.parse(`file:///${sourceUrl}`);\n      }\n      if (!parsedUrl.host) {\n        parsedUrl.protocol = \"file:\";\n      }\n      return parsedUrl;\n    }\n    class PDFNodeStream {\n      constructor(source) {\n        this.source = source;\n        this.url = parseUrl(source.url);\n        this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n        this.isFsUrl = this.url.protocol === \"file:\";\n        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      get _progressiveDataLength() {\n        return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n        this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n        return this._fullRequestReader;\n      }\n      getRangeReader(start, end) {\n        if (end <= this._progressiveDataLength) {\n          return null;\n        }\n        const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n        this._rangeRequestReaders.push(rangeReader);\n        return rangeReader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeRequestReaders.slice(0);\n        readers.forEach(function (reader) {\n          reader.cancel(reason);\n        });\n      }\n    }\n    exports.PDFNodeStream = PDFNodeStream;\n    class BaseFullReader {\n      constructor(stream) {\n        this._url = stream.url;\n        this._done = false;\n        this._storedError = null;\n        this.onProgress = null;\n        const source = stream.source;\n        this._contentLength = source.length;\n        this._loaded = 0;\n        this._filename = null;\n        this._disableRange = source.disableRange || false;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        this._isStreamingSupported = !source.disableStream;\n        this._isRangeSupported = !source.disableRange;\n        this._readableStream = null;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        this._headersCapability = (0, _util.createPromiseCapability)();\n      }\n      get headersReady() {\n        return this._headersCapability.promise;\n      }\n      get filename() {\n        return this._filename;\n      }\n      get contentLength() {\n        return this._contentLength;\n      }\n      get isRangeSupported() {\n        return this._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._readCapability.promise;\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        if (this._storedError) {\n          throw this._storedError;\n        }\n        const chunk = this._readableStream.read();\n        if (chunk === null) {\n          this._readCapability = (0, _util.createPromiseCapability)();\n          return this.read();\n        }\n        this._loaded += chunk.length;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded,\n            total: this._contentLength\n          });\n        }\n        const buffer = new Uint8Array(chunk).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (!this._readableStream) {\n          this._error(reason);\n          return;\n        }\n        this._readableStream.destroy(reason);\n      }\n      _error(reason) {\n        this._storedError = reason;\n        this._readCapability.resolve();\n      }\n      _setReadableStream(readableStream) {\n        this._readableStream = readableStream;\n        readableStream.on(\"readable\", () => {\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"end\", () => {\n          readableStream.destroy();\n          this._done = true;\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"error\", reason => {\n          this._error(reason);\n        });\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this._error(new _util.AbortException(\"streaming is disabled\"));\n        }\n        if (this._storedError) {\n          this._readableStream.destroy(this._storedError);\n        }\n      }\n    }\n    class BaseRangeReader {\n      constructor(stream) {\n        this._url = stream.url;\n        this._done = false;\n        this._storedError = null;\n        this.onProgress = null;\n        this._loaded = 0;\n        this._readableStream = null;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        const source = stream.source;\n        this._isStreamingSupported = !source.disableStream;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._readCapability.promise;\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        if (this._storedError) {\n          throw this._storedError;\n        }\n        const chunk = this._readableStream.read();\n        if (chunk === null) {\n          this._readCapability = (0, _util.createPromiseCapability)();\n          return this.read();\n        }\n        this._loaded += chunk.length;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded\n          });\n        }\n        const buffer = new Uint8Array(chunk).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (!this._readableStream) {\n          this._error(reason);\n          return;\n        }\n        this._readableStream.destroy(reason);\n      }\n      _error(reason) {\n        this._storedError = reason;\n        this._readCapability.resolve();\n      }\n      _setReadableStream(readableStream) {\n        this._readableStream = readableStream;\n        readableStream.on(\"readable\", () => {\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"end\", () => {\n          readableStream.destroy();\n          this._done = true;\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"error\", reason => {\n          this._error(reason);\n        });\n        if (this._storedError) {\n          this._readableStream.destroy(this._storedError);\n        }\n      }\n    }\n    function createRequestOptions(parsedUrl, headers) {\n      return {\n        protocol: parsedUrl.protocol,\n        auth: parsedUrl.auth,\n        host: parsedUrl.hostname,\n        port: parsedUrl.port,\n        path: parsedUrl.path,\n        method: \"GET\",\n        headers\n      };\n    }\n    class PDFNodeStreamFullReader extends BaseFullReader {\n      constructor(stream) {\n        super(stream);\n        const handleResponse = response => {\n          if (response.statusCode === 404) {\n            const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n            this._storedError = error;\n            this._headersCapability.reject(error);\n            return;\n          }\n          this._headersCapability.resolve();\n          this._setReadableStream(response);\n          const getResponseHeader = name => {\n            return this._readableStream.headers[name.toLowerCase()];\n          };\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n          this._isRangeSupported = allowRangeRequests;\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n        };\n        this._request = null;\n        if (this._url.protocol === \"http:\") {\n          this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n        } else {\n          this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n        }\n        this._request.on(\"error\", reason => {\n          this._storedError = reason;\n          this._headersCapability.reject(reason);\n        });\n        this._request.end();\n      }\n    }\n    class PDFNodeStreamRangeReader extends BaseRangeReader {\n      constructor(stream, start, end) {\n        super(stream);\n        this._httpHeaders = {};\n        for (const property in stream.httpHeaders) {\n          const value = stream.httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          this._httpHeaders[property] = value;\n        }\n        this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n        const handleResponse = response => {\n          if (response.statusCode === 404) {\n            const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n            this._storedError = error;\n            return;\n          }\n          this._setReadableStream(response);\n        };\n        this._request = null;\n        if (this._url.protocol === \"http:\") {\n          this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n        } else {\n          this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n        }\n        this._request.on(\"error\", reason => {\n          this._storedError = reason;\n        });\n        this._request.end();\n      }\n    }\n    class PDFNodeStreamFsFullReader extends BaseFullReader {\n      constructor(stream) {\n        super(stream);\n        let path = decodeURIComponent(this._url.path);\n        if (fileUriRegex.test(this._url.href)) {\n          path = path.replace(/^\\//, \"\");\n        }\n        fs.lstat(path, (error, stat) => {\n          if (error) {\n            if (error.code === \"ENOENT\") {\n              error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n            }\n            this._storedError = error;\n            this._headersCapability.reject(error);\n            return;\n          }\n          this._contentLength = stat.size;\n          this._setReadableStream(fs.createReadStream(path));\n          this._headersCapability.resolve();\n        });\n      }\n    }\n    class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n      constructor(stream, start, end) {\n        super(stream);\n        let path = decodeURIComponent(this._url.path);\n        if (fileUriRegex.test(this._url.href)) {\n          path = path.replace(/^\\//, \"\");\n        }\n        this._setReadableStream(fs.createReadStream(path, {\n          start,\n          end: end - 1\n        }));\n      }\n    }\n\n    /***/\n  }), ( /* 20 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.createResponseStatusError = createResponseStatusError;\n    exports.extractFilenameFromHeader = extractFilenameFromHeader;\n    exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n    exports.validateResponseStatus = validateResponseStatus;\n    var _util = __w_pdfjs_require__(2);\n    var _content_disposition = __w_pdfjs_require__(21);\n    function validateRangeRequestCapabilities(_ref22) {\n      let {\n        getResponseHeader,\n        isHttp,\n        rangeChunkSize,\n        disableRange\n      } = _ref22;\n      (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n      const returnValues = {\n        allowRangeRequests: false,\n        suggestedLength: undefined\n      };\n      const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n      if (!Number.isInteger(length)) {\n        return returnValues;\n      }\n      returnValues.suggestedLength = length;\n      if (length <= 2 * rangeChunkSize) {\n        return returnValues;\n      }\n      if (disableRange || !isHttp) {\n        return returnValues;\n      }\n      if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n        return returnValues;\n      }\n      const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n      if (contentEncoding !== \"identity\") {\n        return returnValues;\n      }\n      returnValues.allowRangeRequests = true;\n      return returnValues;\n    }\n    function extractFilenameFromHeader(getResponseHeader) {\n      const contentDisposition = getResponseHeader(\"Content-Disposition\");\n      if (contentDisposition) {\n        let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n        if (filename.includes(\"%\")) {\n          try {\n            filename = decodeURIComponent(filename);\n          } catch (ex) {}\n        }\n        if (/\\.pdf$/i.test(filename)) {\n          return filename;\n        }\n      }\n      return null;\n    }\n    function createResponseStatusError(status, url) {\n      if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n        return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n      }\n      return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n    }\n    function validateResponseStatus(status) {\n      return status === 200 || status === 206;\n    }\n\n    /***/\n  }), ( /* 21 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n    function getFilenameFromContentDispositionHeader(contentDisposition) {\n      let needsEncodingFixup = true;\n      let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n      if (tmp) {\n        tmp = tmp[1];\n        let filename = rfc2616unquote(tmp);\n        filename = unescape(filename);\n        filename = rfc5987decode(filename);\n        filename = rfc2047decode(filename);\n        return fixupEncoding(filename);\n      }\n      tmp = rfc2231getparam(contentDisposition);\n      if (tmp) {\n        const filename = rfc2047decode(tmp);\n        return fixupEncoding(filename);\n      }\n      tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n      if (tmp) {\n        tmp = tmp[1];\n        let filename = rfc2616unquote(tmp);\n        filename = rfc2047decode(filename);\n        return fixupEncoding(filename);\n      }\n      function toParamRegExp(attributePattern, flags) {\n        return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n      }\n      function textdecode(encoding, value) {\n        if (encoding) {\n          if (!/^[\\x00-\\xFF]+$/.test(value)) {\n            return value;\n          }\n          try {\n            const decoder = new TextDecoder(encoding, {\n              fatal: true\n            });\n            const bytes = Array.from(value, function (ch) {\n              return ch.charCodeAt(0) & 0xff;\n            });\n            value = decoder.decode(new Uint8Array(bytes));\n            needsEncodingFixup = false;\n          } catch (e) {\n            if (/^utf-?8$/i.test(encoding)) {\n              try {\n                value = decodeURIComponent(escape(value));\n                needsEncodingFixup = false;\n              } catch (err) {}\n            }\n          }\n        }\n        return value;\n      }\n      function fixupEncoding(value) {\n        if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n          value = textdecode(\"utf-8\", value);\n          if (needsEncodingFixup) {\n            value = textdecode(\"iso-8859-1\", value);\n          }\n        }\n        return value;\n      }\n      function rfc2231getparam(contentDispositionStr) {\n        const matches = [];\n        let match;\n        const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n        while ((match = iter.exec(contentDispositionStr)) !== null) {\n          let [, n, quot, part] = match;\n          n = parseInt(n, 10);\n          if (n in matches) {\n            if (n === 0) {\n              break;\n            }\n            continue;\n          }\n          matches[n] = [quot, part];\n        }\n        const parts = [];\n        for (let n = 0; n < matches.length; ++n) {\n          if (!(n in matches)) {\n            break;\n          }\n          let [quot, part] = matches[n];\n          part = rfc2616unquote(part);\n          if (quot) {\n            part = unescape(part);\n            if (n === 0) {\n              part = rfc5987decode(part);\n            }\n          }\n          parts.push(part);\n        }\n        return parts.join(\"\");\n      }\n      function rfc2616unquote(value) {\n        if (value.startsWith('\"')) {\n          const parts = value.slice(1).split('\\\\\"');\n          for (let i = 0; i < parts.length; ++i) {\n            const quotindex = parts[i].indexOf('\"');\n            if (quotindex !== -1) {\n              parts[i] = parts[i].slice(0, quotindex);\n              parts.length = i + 1;\n            }\n            parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n          }\n          value = parts.join('\"');\n        }\n        return value;\n      }\n      function rfc5987decode(extvalue) {\n        const encodingend = extvalue.indexOf(\"'\");\n        if (encodingend === -1) {\n          return extvalue;\n        }\n        const encoding = extvalue.slice(0, encodingend);\n        const langvalue = extvalue.slice(encodingend + 1);\n        const value = langvalue.replace(/^[^']*'/, \"\");\n        return textdecode(encoding, value);\n      }\n      function rfc2047decode(value) {\n        if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n          return value;\n        }\n        return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n          if (encoding === \"q\" || encoding === \"Q\") {\n            text = text.replace(/_/g, \" \");\n            text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n              return String.fromCharCode(parseInt(hex, 16));\n            });\n            return textdecode(charset, text);\n          }\n          try {\n            text = atob(text);\n          } catch (e) {}\n          return textdecode(charset, text);\n        });\n      }\n      return \"\";\n    }\n\n    /***/\n  }), ( /* 22 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFNetworkStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    const OK_RESPONSE = 200;\n    const PARTIAL_CONTENT_RESPONSE = 206;\n    function getArrayBuffer(xhr) {\n      const data = xhr.response;\n      if (typeof data !== \"string\") {\n        return data;\n      }\n      const array = (0, _util.stringToBytes)(data);\n      return array.buffer;\n    }\n    class NetworkManager {\n      constructor(url, args) {\n        this.url = url;\n        args = args || {};\n        this.isHttp = /^https?:/i.test(url);\n        this.httpHeaders = this.isHttp && args.httpHeaders || {};\n        this.withCredentials = args.withCredentials || false;\n        this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n          return new XMLHttpRequest();\n        };\n        this.currXhrId = 0;\n        this.pendingRequests = Object.create(null);\n      }\n      requestRange(begin, end, listeners) {\n        const args = {\n          begin,\n          end\n        };\n        for (const prop in listeners) {\n          args[prop] = listeners[prop];\n        }\n        return this.request(args);\n      }\n      requestFull(listeners) {\n        return this.request(listeners);\n      }\n      request(args) {\n        const xhr = this.getXhr();\n        const xhrId = this.currXhrId++;\n        const pendingRequest = this.pendingRequests[xhrId] = {\n          xhr\n        };\n        xhr.open(\"GET\", this.url);\n        xhr.withCredentials = this.withCredentials;\n        for (const property in this.httpHeaders) {\n          const value = this.httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          xhr.setRequestHeader(property, value);\n        }\n        if (this.isHttp && \"begin\" in args && \"end\" in args) {\n          xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n          pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n        } else {\n          pendingRequest.expectedStatus = OK_RESPONSE;\n        }\n        xhr.responseType = \"arraybuffer\";\n        if (args.onError) {\n          xhr.onerror = function (evt) {\n            args.onError(xhr.status);\n          };\n        }\n        xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n        xhr.onprogress = this.onProgress.bind(this, xhrId);\n        pendingRequest.onHeadersReceived = args.onHeadersReceived;\n        pendingRequest.onDone = args.onDone;\n        pendingRequest.onError = args.onError;\n        pendingRequest.onProgress = args.onProgress;\n        xhr.send(null);\n        return xhrId;\n      }\n      onProgress(xhrId, evt) {\n        const pendingRequest = this.pendingRequests[xhrId];\n        if (!pendingRequest) {\n          return;\n        }\n        if (pendingRequest.onProgress) {\n          pendingRequest.onProgress(evt);\n        }\n      }\n      onStateChange(xhrId, evt) {\n        const pendingRequest = this.pendingRequests[xhrId];\n        if (!pendingRequest) {\n          return;\n        }\n        const xhr = pendingRequest.xhr;\n        if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n          pendingRequest.onHeadersReceived();\n          delete pendingRequest.onHeadersReceived;\n        }\n        if (xhr.readyState !== 4) {\n          return;\n        }\n        if (!(xhrId in this.pendingRequests)) {\n          return;\n        }\n        delete this.pendingRequests[xhrId];\n        if (xhr.status === 0 && this.isHttp) {\n          if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n          return;\n        }\n        const xhrStatus = xhr.status || OK_RESPONSE;\n        const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n        if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n          if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n          return;\n        }\n        const chunk = getArrayBuffer(xhr);\n        if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n          const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n          const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n          pendingRequest.onDone({\n            begin: parseInt(matches[1], 10),\n            chunk\n          });\n        } else if (chunk) {\n          pendingRequest.onDone({\n            begin: 0,\n            chunk\n          });\n        } else if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n      }\n      hasPendingRequests() {\n        for (const xhrId in this.pendingRequests) {\n          return true;\n        }\n        return false;\n      }\n      getRequestXhr(xhrId) {\n        return this.pendingRequests[xhrId].xhr;\n      }\n      isPendingRequest(xhrId) {\n        return xhrId in this.pendingRequests;\n      }\n      abortAllRequests() {\n        for (const xhrId in this.pendingRequests) {\n          this.abortRequest(xhrId | 0);\n        }\n      }\n      abortRequest(xhrId) {\n        const xhr = this.pendingRequests[xhrId].xhr;\n        delete this.pendingRequests[xhrId];\n        xhr.abort();\n      }\n    }\n    class PDFNetworkStream {\n      constructor(source) {\n        this._source = source;\n        this._manager = new NetworkManager(source.url, {\n          httpHeaders: source.httpHeaders,\n          withCredentials: source.withCredentials\n        });\n        this._rangeChunkSize = source.rangeChunkSize;\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      _onRangeRequestReaderClosed(reader) {\n        const i = this._rangeRequestReaders.indexOf(reader);\n        if (i >= 0) {\n          this._rangeRequestReaders.splice(i, 1);\n        }\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n        this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n        return this._fullRequestReader;\n      }\n      getRangeReader(begin, end) {\n        const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n        reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n        this._rangeRequestReaders.push(reader);\n        return reader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeRequestReaders.slice(0);\n        readers.forEach(function (reader) {\n          reader.cancel(reason);\n        });\n      }\n    }\n    exports.PDFNetworkStream = PDFNetworkStream;\n    class PDFNetworkStreamFullRequestReader {\n      constructor(manager, source) {\n        this._manager = manager;\n        const args = {\n          onHeadersReceived: this._onHeadersReceived.bind(this),\n          onDone: this._onDone.bind(this),\n          onError: this._onError.bind(this),\n          onProgress: this._onProgress.bind(this)\n        };\n        this._url = source.url;\n        this._fullRequestId = manager.requestFull(args);\n        this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n        this._disableRange = source.disableRange || false;\n        this._contentLength = source.length;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        this._isStreamingSupported = false;\n        this._isRangeSupported = false;\n        this._cachedChunks = [];\n        this._requests = [];\n        this._done = false;\n        this._storedError = undefined;\n        this._filename = null;\n        this.onProgress = null;\n      }\n      _onHeadersReceived() {\n        const fullRequestXhrId = this._fullRequestId;\n        const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n        const getResponseHeader = name => {\n          return fullRequestXhr.getResponseHeader(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: this._manager.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        if (allowRangeRequests) {\n          this._isRangeSupported = true;\n        }\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n        if (this._isRangeSupported) {\n          this._manager.abortRequest(fullRequestXhrId);\n        }\n        this._headersReceivedCapability.resolve();\n      }\n      _onDone(args) {\n        if (args) {\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n            requestCapability.resolve({\n              value: args.chunk,\n              done: false\n            });\n          } else {\n            this._cachedChunks.push(args.chunk);\n          }\n        }\n        this._done = true;\n        if (this._cachedChunks.length > 0) {\n          return;\n        }\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n      }\n      _onError(status) {\n        const url = this._url;\n        const exception = (0, _network_utils.createResponseStatusError)(status, url);\n        this._storedError = exception;\n        this._headersReceivedCapability.reject(exception);\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.reject(exception);\n        });\n        this._requests = [];\n        this._cachedChunks = [];\n      }\n      _onProgress(data) {\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: data.loaded,\n            total: data.lengthComputable ? data.total : this._contentLength\n          });\n        }\n      }\n      get filename() {\n        return this._filename;\n      }\n      get isRangeSupported() {\n        return this._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      get contentLength() {\n        return this._contentLength;\n      }\n      get headersReady() {\n        return this._headersReceivedCapability.promise;\n      }\n      async read() {\n        if (this._storedError) {\n          throw this._storedError;\n        }\n        if (this._cachedChunks.length > 0) {\n          const chunk = this._cachedChunks.shift();\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._headersReceivedCapability.reject(reason);\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        if (this._manager.isPendingRequest(this._fullRequestId)) {\n          this._manager.abortRequest(this._fullRequestId);\n        }\n        this._fullRequestReader = null;\n      }\n    }\n    class PDFNetworkStreamRangeRequestReader {\n      constructor(manager, begin, end) {\n        this._manager = manager;\n        const args = {\n          onDone: this._onDone.bind(this),\n          onProgress: this._onProgress.bind(this)\n        };\n        this._requestId = manager.requestRange(begin, end, args);\n        this._requests = [];\n        this._queuedChunk = null;\n        this._done = false;\n        this.onProgress = null;\n        this.onClosed = null;\n      }\n      _close() {\n        if (this.onClosed) {\n          this.onClosed(this);\n        }\n      }\n      _onDone(data) {\n        const chunk = data.chunk;\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n          requestCapability.resolve({\n            value: chunk,\n            done: false\n          });\n        } else {\n          this._queuedChunk = chunk;\n        }\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        this._close();\n      }\n      _onProgress(evt) {\n        if (!this.isStreamingSupported && this.onProgress) {\n          this.onProgress({\n            loaded: evt.loaded\n          });\n        }\n      }\n      get isStreamingSupported() {\n        return false;\n      }\n      async read() {\n        if (this._queuedChunk !== null) {\n          const chunk = this._queuedChunk;\n          this._queuedChunk = null;\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        if (this._manager.isPendingRequest(this._requestId)) {\n          this._manager.abortRequest(this._requestId);\n        }\n        this._close();\n      }\n    }\n\n    /***/\n  }), ( /* 23 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFFetchStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    function createFetchOptions(headers, withCredentials, abortController) {\n      return {\n        method: \"GET\",\n        headers,\n        signal: abortController && abortController.signal,\n        mode: \"cors\",\n        credentials: withCredentials ? \"include\" : \"same-origin\",\n        redirect: \"follow\"\n      };\n    }\n    function createHeaders(httpHeaders) {\n      const headers = new Headers();\n      for (const property in httpHeaders) {\n        const value = httpHeaders[property];\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n        headers.append(property, value);\n      }\n      return headers;\n    }\n    class PDFFetchStream {\n      constructor(source) {\n        this.source = source;\n        this.isHttp = /^https?:/i.test(source.url);\n        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      get _progressiveDataLength() {\n        return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n        this._fullRequestReader = new PDFFetchStreamReader(this);\n        return this._fullRequestReader;\n      }\n      getRangeReader(begin, end) {\n        if (end <= this._progressiveDataLength) {\n          return null;\n        }\n        const reader = new PDFFetchStreamRangeReader(this, begin, end);\n        this._rangeRequestReaders.push(reader);\n        return reader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeRequestReaders.slice(0);\n        readers.forEach(function (reader) {\n          reader.cancel(reason);\n        });\n      }\n    }\n    exports.PDFFetchStream = PDFFetchStream;\n    class PDFFetchStreamReader {\n      constructor(stream) {\n        this._stream = stream;\n        this._reader = null;\n        this._loaded = 0;\n        this._filename = null;\n        const source = stream.source;\n        this._withCredentials = source.withCredentials || false;\n        this._contentLength = source.length;\n        this._headersCapability = (0, _util.createPromiseCapability)();\n        this._disableRange = source.disableRange || false;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        if (typeof AbortController !== \"undefined\") {\n          this._abortController = new AbortController();\n        }\n        this._isStreamingSupported = !source.disableStream;\n        this._isRangeSupported = !source.disableRange;\n        this._headers = createHeaders(this._stream.httpHeaders);\n        const url = source.url;\n        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n          if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n            throw (0, _network_utils.createResponseStatusError)(response.status, url);\n          }\n          this._reader = response.body.getReader();\n          this._headersCapability.resolve();\n          const getResponseHeader = name => {\n            return response.headers.get(name);\n          };\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n          this._isRangeSupported = allowRangeRequests;\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          if (!this._isStreamingSupported && this._isRangeSupported) {\n            this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n          }\n        }).catch(this._headersCapability.reject);\n        this.onProgress = null;\n      }\n      get headersReady() {\n        return this._headersCapability.promise;\n      }\n      get filename() {\n        return this._filename;\n      }\n      get contentLength() {\n        return this._contentLength;\n      }\n      get isRangeSupported() {\n        return this._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._headersCapability.promise;\n        const {\n          value,\n          done\n        } = await this._reader.read();\n        if (done) {\n          return {\n            value,\n            done\n          };\n        }\n        this._loaded += value.byteLength;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded,\n            total: this._contentLength\n          });\n        }\n        const buffer = new Uint8Array(value).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (this._reader) {\n          this._reader.cancel(reason);\n        }\n        if (this._abortController) {\n          this._abortController.abort();\n        }\n      }\n    }\n    class PDFFetchStreamRangeReader {\n      constructor(stream, begin, end) {\n        this._stream = stream;\n        this._reader = null;\n        this._loaded = 0;\n        const source = stream.source;\n        this._withCredentials = source.withCredentials || false;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        this._isStreamingSupported = !source.disableStream;\n        if (typeof AbortController !== \"undefined\") {\n          this._abortController = new AbortController();\n        }\n        this._headers = createHeaders(this._stream.httpHeaders);\n        this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n        const url = source.url;\n        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n          if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n            throw (0, _network_utils.createResponseStatusError)(response.status, url);\n          }\n          this._readCapability.resolve();\n          this._reader = response.body.getReader();\n        });\n        this.onProgress = null;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._readCapability.promise;\n        const {\n          value,\n          done\n        } = await this._reader.read();\n        if (done) {\n          return {\n            value,\n            done\n          };\n        }\n        this._loaded += value.byteLength;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded\n          });\n        }\n        const buffer = new Uint8Array(value).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (this._reader) {\n          this._reader.cancel(reason);\n        }\n        if (this._abortController) {\n          this._abortController.abort();\n        }\n      }\n    }\n\n    /***/\n  }\n  /******/)]);\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","installedModules","__w_pdfjs_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_display_utils","_api","_util","_annotation_layer","_api_compatibility","_worker_options","_text_layer","_svg","pdfjsVersion","pdfjsBuild","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","DEFAULT_LINK_REL","SVG_NS","DOMCanvasFactory","width","height","Error","canvas","document","createElement","context","getContext","reset","canvasAndContext","destroy","DOMCMapReaderFactory","constructor","_ref","baseUrl","isCompressed","fetch","_ref2","compressionType","CMapCompressionType","BINARY","NONE","baseURI","then","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","catch","reason","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","responseText","send","DOMSVGFactory","assert","svg","createElementNS","setAttribute","type","PageViewport","_ref3","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","Math","abs","transform","clone","arguments","length","undefined","slice","convertToViewportPoint","x","y","Util","applyTransform","convertToViewportRectangle","rect","topLeft","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","LinkTarget","SELF","BLANK","PARENT","TOP","addLinkAttributes","link","target","rel","enabled","urlNullRemoved","removeNullCharacters","href","title","onclick","targetStr","getFilenameFromUrl","anchor","indexOf","query","end","min","substring","lastIndexOf","StatTimer","started","times","time","warn","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","padEnd","join","Response","ReadableStream","protocol","URL","ex","loadScript","src","script","onload","onerror","head","documentElement","appendChild","deprecated","details","console","log","pdfDateStringRegex","PDFDateString","toDateObject","input","isString","RegExp","matches","exec","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","UTC","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PermissionFlag","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","unreachable","cond","isSameOrigin","otherUrl","base","origin","e","other","_isValidProtocol","createValidAbsoluteUrl","absoluteUrl","shadow","obj","prop","configurable","writable","BaseExceptionClosure","message","PasswordException","code","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","FormatError","AbortException","NullCharactersRegExp","str","replace","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","chunk","subarray","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","rgbBuf","makeCssRgb","g","b","m1","m2","xt","yt","getAxialAlignedBoundingBox","p1","p2","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","sqrt","sx","sy","normalizeRect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","PDFStringTranslateTable","stringToPDFString","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","isBool","isNum","isArrayBuffer","isArrayEqual","arr1","arr2","every","element","index","createPromiseCapability","capability","isSettled","promise","createObjectURL","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","ii","b1","b2","b3","d1","d2","d3","d4","_is_node","process","versions","nw","electron","_font_loader","_canvas","_message_handler","_metadata","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","rangeTransport","worker","window","location","pdfBytes","isNaN","rangeChunkSize","CMapReaderFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","fromPort","_worker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","all","_ref4","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","transportDestroyed","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getOpenActionDestination","openAction","dest","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","rotate","userUnit","view","getViewport","getAnnotations","intent","annotationsPromise","annotationsIntent","render","_ref5","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","internalRenderTask","splice","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","normalizeWhitespace","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","getTextContent","readableStream","pump","reader","read","_ref6","done","assign","styles","getReader","_destroy","pageCache","waitOn","keys","forEach","force","renderCompleted","cancel","clear","resetStats","some","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","_ref7","_ref8","setTimeout","stats","LoopbackPort","defer","_listeners","_defer","_deferred","postMessage","transfers","cloneValue","cloned","has","transferable","includes","byteOffset","Array","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","WeakMap","addEventListener","removeEventListener","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","pdfjsWorker","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","setup","delete","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","_ref9","close","enqueue","onCancel","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_ref10","_ref11","_numPages","exception","updatePassword","exportedData","exportedError","fontRegistry","FontInspector","registerFont","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","_ref12","featureId","results","metadata","Metadata","contentDispositionFilename","filename","cleanupSuccessful","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","_ref13","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","version","build","BaseFontLoader","_ref14","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","remove","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","supported","_loadTestFont","rules","fontsToLoad","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","getImageData","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","removeChild","translatedData","_ref15","compiledGlyphs","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","compatibilityParams","checkFontFace","freeze","_pattern_helper","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","getCurrentTransform","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","ctxRestore","prev","pop","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","cos","sinValue","sin","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","j","j0","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","sum","steps","Int32Array","outlines","coords","p0","pp","step","drawOutline","beginPath","k","kk","ll","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","copyCtxState","sourceCtx","destCtx","properties","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","scaleX","scaleY","isEnabled","composed","layer","drawImage","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","_ref16","fillRect","transparentCanvas","compositeCtx","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","startsWith","CanvasGraphics_endDrawing","endSMaskGroup","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","CanvasGraphics_setLineJoin","CanvasGraphics_setMiterLimit","limit","CanvasGraphics_setDash","dashArray","dashPhase","flatness","CanvasGraphics_setGState","states","state","suspendSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","clearRect","resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","bezierCurveTo","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","CanvasGraphics_closeStroke","CanvasGraphics_fill","isPatternFill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","path","addToPath","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","charWidth","CanvasGraphics_showType3Text","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","floor","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","compiled","maskCanvas","CanvasGraphics_paintImageMaskXObjectRepeat","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","w","h","CanvasGraphics_paintInlineImageXObject","widthScale","heightScale","imgToPaint","tmpCanvas","HTMLElement","tmpCtx","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","getCanvasPosition","appendImage","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_paintXObject","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","CanvasGraphics_beginMarkedContentProps","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","op","ShadingIRs","applyBoundingBox","Path2D","region","RadialAxial","fromIR","RadialAxial_fromIR","raw","colorStops","r1","RadialAxial_getPattern","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","round","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","drawFigures","Mesh","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","Dummy_fromIR","Dummy_fromIR_getPattern","shadingIR","TilingPatternClosure","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","ready","success","_deleteStreamController","allSettled","_xml_parser","_repair","parser","SimpleXMLParser","xmlDocument","parseFromString","_metadataMap","Map","_parse","codes","chars","rdf","nodeName","toLowerCase","firstChild","nextSibling","hasChildNodes","children","childNodes","jj","trim","getAll","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","isWhitespaceString","XMLParserBase","_resolveEntities","entity","onResolveEntity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","isEmpty","SimpleDOMNode","nodeValue","parentNode","child","_currentFragment","_stack","_errorCode","node","lastElement","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_ref17","_enabled","WebGLUtils","tryInitGL","_ref18","_ref19","WebGLUtilsClosure","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","initSmaskGL","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","scaleLocation","offsetLocation","colorLocation","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","container","_createContainer","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","_createPopup","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","className","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","destination","getDestinationHash","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","disabled","readOnly","fieldName","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","display","_setTextStyle","textAlignment","textAlign","direction","fontWeight","fontStyle","buttonValue","selectElement","combo","options","multiSelect","multiple","option","optionElement","displayValue","exportValue","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","pinned","BACKGROUND_ENLIGHT","hideElement","dateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","hasAttribute","removeAttribute","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","eventBus","dispatch","_download","downloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","update","renderTextLayer","renderTextLayerClosure","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","isAllWhitespace","test","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","PI","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","findPositiveMin","ts","expand","expanded","expandBounds","divProperties","Float64Array","boxScale","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","_ref20","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","TextLayer_cancel","_processItems","styleCache","len","_render","TextLayer_render","timeout","mozOpaque","textItems","textStyles","_ref21","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","SVGGraphics","SVG_DEFAULTS","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","Buffer","from","output","maxBlockLength","deflateBlocks","idat","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","fs","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","_content_disposition","_ref22","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","err","contentDispositionStr","match","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","array","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","hasPendingRequests","getRequestXhr","isPendingRequest","abortAllRequests","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !process.versions.electron;\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences, or `null` when no viewer preferences are present\n   *   in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function () {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}