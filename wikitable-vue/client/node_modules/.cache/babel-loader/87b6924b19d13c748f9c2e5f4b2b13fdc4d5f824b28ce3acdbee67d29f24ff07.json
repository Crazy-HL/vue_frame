{"ast":null,"code":"import { indented_tree_layout } from './js/tree_layout.js';\nexport default {\n  name: 'RefView',\n  components: {},\n  data() {\n    return {\n      id: '#refview'\n    };\n  },\n  computed: {\n    loaddata() {\n      return store.state.loaddata;\n    }\n  },\n  watch: {\n    loaddata: function () {\n      this.draw_indented_tree();\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    init() {\n      let id = this.id;\n      this.width = $(id).width();\n      this.height = $(id).height();\n      this.svg = d3.select(id).append('svg').attr('width', width).attr('height', height);\n    },\n    draw_indented_tree() {\n      let tree = JSON.parse(JSON.stringify(Data['tree']));\n      indented_tree_layout(tree);\n      console.log('tree', tree);\n      let svg = this.svg;\n      svg.append('circle').attr('r', 10);\n    }\n  }\n};","map":{"version":3,"names":["indented_tree_layout","name","components","data","id","computed","loaddata","store","state","watch","draw_indented_tree","mounted","init","methods","width","$","height","svg","d3","select","append","attr","tree","JSON","parse","stringify","Data","console","log"],"sources":["/Users/wakouboy/Documents/Projects/paper-ref/client/src/components/RefView.vue"],"sourcesContent":["<template>\n    <div id=\"refview\">\n    </div>\n</template>\n\n<script>\n\nimport { indented_tree_layout } from './js/tree_layout.js'\nexport default {\n    name: 'RefView',\n    components: {\n    },\n    data() {\n        return {\n            id: '#refview'\n        }\n    },\n    computed: {\n        loaddata() {\n            return store.state.loaddata\n        }\n    },\n    watch: {\n        loaddata: function () {\n            this.draw_indented_tree()\n        },\n    },\n    mounted() {\n        this.init()\n    },\n\n    methods: {\n        init() {\n            let id = this.id\n            this.width = $(id).width()\n            this.height = $(id).height()\n            this.svg = d3.select(id).append('svg').attr('width', width)\n                .attr('height', height)\n\n        },\n\n        draw_indented_tree() {\n            let tree = JSON.parse(JSON.stringify(Data['tree']))\n            indented_tree_layout(tree)\n            console.log('tree', tree)\n\n            let svg = this.svg\n            \n            svg.append('circle').attr('r', 10)\n\n        }\n    }\n}\n</script>\n<style scoped>\n#refview {\n    position: absolute;\n    top: 0;\n    width: 50%;\n    left: 50%;\n    height: 100%;\n}\n</style>"],"mappings":"AAOA,SAASA,oBAAmB,QAAS,qBAAoB;AACzD,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,EAAE,EAAE;IACR;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,QAAQA,CAAA,EAAG;MACP,OAAOC,KAAK,CAACC,KAAK,CAACF,QAAO;IAC9B;EACJ,CAAC;EACDG,KAAK,EAAE;IACHH,QAAQ,EAAE,SAAAA,CAAA,EAAY;MAClB,IAAI,CAACI,kBAAkB,CAAC;IAC5B;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,IAAI,CAAC;EACd,CAAC;EAEDC,OAAO,EAAE;IACLD,IAAIA,CAAA,EAAG;MACH,IAAIR,EAAC,GAAI,IAAI,CAACA,EAAC;MACf,IAAI,CAACU,KAAI,GAAIC,CAAC,CAACX,EAAE,CAAC,CAACU,KAAK,CAAC;MACzB,IAAI,CAACE,MAAK,GAAID,CAAC,CAACX,EAAE,CAAC,CAACY,MAAM,CAAC;MAC3B,IAAI,CAACC,GAAE,GAAIC,EAAE,CAACC,MAAM,CAACf,EAAE,CAAC,CAACgB,MAAM,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,OAAO,EAAEP,KAAK,EACrDO,IAAI,CAAC,QAAQ,EAAEL,MAAM;IAE9B,CAAC;IAEDN,kBAAkBA,CAAA,EAAG;MACjB,IAAIY,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACC,IAAI,CAAC,MAAM,CAAC,CAAC;MAClD1B,oBAAoB,CAACsB,IAAI;MACzBK,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEN,IAAI;MAExB,IAAIL,GAAE,GAAI,IAAI,CAACA,GAAE;MAEjBA,GAAG,CAACG,MAAM,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,GAAG,EAAE,EAAE;IAErC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}