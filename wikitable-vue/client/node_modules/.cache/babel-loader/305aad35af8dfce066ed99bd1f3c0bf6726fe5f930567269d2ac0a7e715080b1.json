{"ast":null,"code":"import pdfvuer from 'pdfvuer';\n// import 'pdfjs-dist/build/pdf.worker.entry' // not needed since v1.9.1\n\nexport default {\n  components: {\n    pdf: pdfvuer\n  },\n  data() {\n    return {\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      errors: [],\n      scale: 'page-width'\n    };\n  },\n  computed: {\n    formattedZoom() {\n      return Number.parseInt(this.scale * 100);\n    }\n  },\n  mounted() {\n    this.getPdf();\n  },\n  watch: {\n    show: function (s) {\n      if (s) {\n        this.getPdf();\n      }\n    },\n    page: function (p) {\n      if (window.pageYOffset <= this.findPos(document.getElementById(p)) || document.getElementById(p + 1) && window.pageYOffset >= this.findPos(document.getElementById(p + 1))) {\n        // window.scrollTo(0,this.findPos(document.getElementById(p)));\n        document.getElementById(p).scrollIntoView();\n      }\n    }\n  },\n  methods: {\n    handle_pdf_link: function (params) {\n      // Scroll to the appropriate place on our page - the Y component of\n      // params.destArray * (div height / ???), from the bottom of the page div\n      var page = document.getElementById(String(params.pageNumber));\n      page.scrollIntoView();\n    },\n    getPdf() {\n      var self = this;\n      self.pdfdata = pdfvuer.createLoadingTask('./static/relativity.pdf');\n      self.pdfdata.then(pdf => {\n        self.numPages = pdf.numPages;\n        window.onscroll = function () {\n          changePage();\n          stickyNav();\n        };\n\n        // Get the offset position of the navbar\n        var sticky = $('#buttons')[0].offsetTop;\n\n        // Add the sticky class to the self.$refs.nav when you reach its scroll position. Remove \"sticky\" when you leave the scroll position\n        function stickyNav() {\n          if (window.pageYOffset >= sticky) {\n            $('#buttons')[0].classList.remove(\"hidden\");\n          } else {\n            $('#buttons')[0].classList.add(\"hidden\");\n          }\n        }\n        function changePage() {\n          var i = 1,\n            count = Number(pdf.numPages);\n          do {\n            if (window.pageYOffset >= self.findPos(document.getElementById(i)) && window.pageYOffset <= self.findPos(document.getElementById(i + 1))) {\n              self.page = i;\n            }\n            i++;\n          } while (i < count);\n          if (window.pageYOffset >= self.findPos(document.getElementById(i))) {\n            self.page = i;\n          }\n        }\n      });\n    },\n    findPos(obj) {\n      return obj.offsetTop;\n    }\n  }\n};","map":{"version":3,"names":["pdfvuer","components","pdf","data","page","numPages","pdfdata","undefined","errors","scale","computed","formattedZoom","Number","parseInt","mounted","getPdf","watch","show","s","p","window","pageYOffset","findPos","document","getElementById","scrollIntoView","methods","handle_pdf_link","params","String","pageNumber","self","createLoadingTask","then","onscroll","changePage","stickyNav","sticky","$","offsetTop","classList","remove","add","i","count","obj"],"sources":["/Users/wakouboy/Documents/Projects/paper-ref/client/src/components/PDFView.vue"],"sourcesContent":["<template>\n  <div id=\"pdfvuer\">\n    <div id=\"buttons\" class=\"ui grey three item inverted bottom fixed menu transition hidden\">\n      <a class=\"item\" @click=\"page > 1 ? page-- : 1\">\n        <i class=\"left chevron icon\"></i>\n        Back\n      </a>\n      <a class=\"ui active item\">\n        {{page}} / {{ numPages ? numPages : 'âˆž' }}\n      </a>\n      <a class=\"item\" @click=\"page < numPages ? page++ : 1\">\n        Forward\n        <i class=\"right chevron icon\"></i>\n      </a>\n    </div>\n    <div id=\"buttons\" class=\"ui grey three item inverted bottom fixed menu transition hidden\">\n      <a class=\"item\" @click=\"scale -= scale > 0.2 ? 0.1 : 0\">\n        <i class=\"left chevron icon\" />\n          Zoom -\n      </a>\n      <a class=\"ui active item\">\n        {{ formattedZoom }} %\n      </a>\n      <a class=\"item\" @click=\"scale += scale < 2 ? 0.1 : 0\">\n        Zoom +\n        <i class=\"right chevron icon\" />\n      </a>\n    </div>\n    <pdf :src=\"pdfdata\" v-for=\"i in numPages\" :key=\"i\" :id=\"i\" :page=\"i\"\n      :scale.sync=\"scale\" style=\"width:100%;margin:20px auto;\"\n        :annotation=\"true\"\n        :resize=\"true\"\n        @link-clicked=\"handle_pdf_link\">\n      <template slot=\"loading\">\n        loading content here...\n      </template>\n    </pdf>\n  </div>\n</template>\n\n<script>\nimport pdfvuer from 'pdfvuer'\n// import 'pdfjs-dist/build/pdf.worker.entry' // not needed since v1.9.1\n\nexport default {\n  components: {\n    pdf: pdfvuer\n  },\n  data () {\n    return {\n      page: 1,\n      numPages: 0,\n      pdfdata: undefined,\n      errors: [],\n      scale: 'page-width'\n    }\n  },\n  computed: {\n    formattedZoom () {\n        return Number.parseInt(this.scale * 100);\n    },\n  },\n  mounted () {\n    this.getPdf()\n  },\n  watch: {\n    show: function (s) {\n      if(s) {\n        this.getPdf();\n      }\n    },\n    page: function (p) {\n      if( window.pageYOffset <= this.findPos(document.getElementById(p)) || ( document.getElementById(p+1) && window.pageYOffset >= this.findPos(document.getElementById(p+1)) )) {\n        // window.scrollTo(0,this.findPos(document.getElementById(p)));\n        document.getElementById(p).scrollIntoView();\n      }\n    }\n  },\n  methods: {\n    handle_pdf_link: function (params) {\n      // Scroll to the appropriate place on our page - the Y component of\n      // params.destArray * (div height / ???), from the bottom of the page div\n      var page = document.getElementById(String(params.pageNumber));\n      page.scrollIntoView();\n    },\n    getPdf () {\n      var self = this;\n      self.pdfdata = pdfvuer.createLoadingTask('./static/relativity.pdf');\n      self.pdfdata.then(pdf => {\n        self.numPages = pdf.numPages;\n        window.onscroll = function() { \n          changePage() \n          stickyNav()  \n        }\n\n        // Get the offset position of the navbar\n        var sticky = $('#buttons')[0].offsetTop\n\n        // Add the sticky class to the self.$refs.nav when you reach its scroll position. Remove \"sticky\" when you leave the scroll position\n        function stickyNav() {\n          if (window.pageYOffset >= sticky) {\n            $('#buttons')[0].classList.remove(\"hidden\")\n          } else {\n            $('#buttons')[0].classList.add(\"hidden\")\n          }\n        }\n\n        function changePage () {\n          var i = 1, count = Number(pdf.numPages);\n          do {\n            if(window.pageYOffset >= self.findPos(document.getElementById(i)) && \n                window.pageYOffset <= self.findPos(document.getElementById(i+1))) {\n              self.page = i\n            }\n            i++\n          } while ( i < count)\n          if (window.pageYOffset >= self.findPos(document.getElementById(i))) {\n            self.page = i\n          }\n        }\n      });\n    },\n    findPos(obj) {\n      return obj.offsetTop;\n    }\n  }\n}\n</script>\n<style src=\"pdfvuer/dist/pdfvuer.css\"></style>\n<style lang=\"css\" scoped>\n  #buttons {\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n  }\n  /* Page content */\n  .content {\n    padding: 16px;\n  }\n  #pdfvuer{\n    width: 50%;\n    height: 100%;\n  }\n</style>"],"mappings":"AAyCA,OAAOA,OAAM,MAAO,SAAQ;AAC5B;;AAEA,eAAe;EACbC,UAAU,EAAE;IACVC,GAAG,EAAEF;EACP,CAAC;EACDG,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAEC,SAAS;MAClBC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAYA,CAAA,EAAK;MACb,OAAOC,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACJ,KAAI,GAAI,GAAG,CAAC;IAC5C;EACF,CAAC;EACDK,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,MAAM,CAAC;EACd,CAAC;EACDC,KAAK,EAAE;IACLC,IAAI,EAAE,SAAAA,CAAUC,CAAC,EAAE;MACjB,IAAGA,CAAC,EAAE;QACJ,IAAI,CAACH,MAAM,CAAC,CAAC;MACf;IACF,CAAC;IACDX,IAAI,EAAE,SAAAA,CAAUe,CAAC,EAAE;MACjB,IAAIC,MAAM,CAACC,WAAU,IAAK,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,cAAc,CAACL,CAAC,CAAC,KAAOI,QAAQ,CAACC,cAAc,CAACL,CAAC,GAAC,CAAC,KAAKC,MAAM,CAACC,WAAU,IAAK,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,cAAc,CAACL,CAAC,GAAC,CAAC,CAAC,CAAG,EAAE;QAC1K;QACAI,QAAQ,CAACC,cAAc,CAACL,CAAC,CAAC,CAACM,cAAc,CAAC,CAAC;MAC7C;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAe,EAAE,SAAAA,CAAUC,MAAM,EAAE;MACjC;MACA;MACA,IAAIxB,IAAG,GAAImB,QAAQ,CAACC,cAAc,CAACK,MAAM,CAACD,MAAM,CAACE,UAAU,CAAC,CAAC;MAC7D1B,IAAI,CAACqB,cAAc,CAAC,CAAC;IACvB,CAAC;IACDV,MAAKA,CAAA,EAAK;MACR,IAAIgB,IAAG,GAAI,IAAI;MACfA,IAAI,CAACzB,OAAM,GAAIN,OAAO,CAACgC,iBAAiB,CAAC,yBAAyB,CAAC;MACnED,IAAI,CAACzB,OAAO,CAAC2B,IAAI,CAAC/B,GAAE,IAAK;QACvB6B,IAAI,CAAC1B,QAAO,GAAIH,GAAG,CAACG,QAAQ;QAC5Be,MAAM,CAACc,QAAO,GAAI,YAAW;UAC3BC,UAAU,CAAC;UACXC,SAAS,CAAC;QACZ;;QAEA;QACA,IAAIC,MAAK,GAAIC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACC,SAAQ;;QAEtC;QACA,SAASH,SAASA,CAAA,EAAG;UACnB,IAAIhB,MAAM,CAACC,WAAU,IAAKgB,MAAM,EAAE;YAChCC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ;UAC5C,OAAO;YACLH,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACE,SAAS,CAACE,GAAG,CAAC,QAAQ;UACzC;QACF;QAEA,SAASP,UAASA,CAAA,EAAK;UACrB,IAAIQ,CAAA,GAAI,CAAC;YAAEC,KAAI,GAAIhC,MAAM,CAACV,GAAG,CAACG,QAAQ,CAAC;UACvC,GAAG;YACD,IAAGe,MAAM,CAACC,WAAU,IAAKU,IAAI,CAACT,OAAO,CAACC,QAAQ,CAACC,cAAc,CAACmB,CAAC,CAAC,KAC5DvB,MAAM,CAACC,WAAU,IAAKU,IAAI,CAACT,OAAO,CAACC,QAAQ,CAACC,cAAc,CAACmB,CAAC,GAAC,CAAC,CAAC,CAAC,EAAE;cACpEZ,IAAI,CAAC3B,IAAG,GAAIuC,CAAA;YACd;YACAA,CAAC,EAAC;UACJ,SAAUA,CAAA,GAAIC,KAAK;UACnB,IAAIxB,MAAM,CAACC,WAAU,IAAKU,IAAI,CAACT,OAAO,CAACC,QAAQ,CAACC,cAAc,CAACmB,CAAC,CAAC,CAAC,EAAE;YAClEZ,IAAI,CAAC3B,IAAG,GAAIuC,CAAA;UACd;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IACDrB,OAAOA,CAACuB,GAAG,EAAE;MACX,OAAOA,GAAG,CAACN,SAAS;IACtB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}